ARM GAS  /tmp/ccfCRRJc.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"lcd.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.LedMatrixInit,"ax",%progbits
  16              		.align	1
  17              		.global	LedMatrixInit
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	LedMatrixInit:
  25              	.LFB399:
  26              		.file 1 "component/lcd/lcd.c"
   1:component/lcd/lcd.c **** #include "lcd.h"
   2:component/lcd/lcd.c **** #include "lcdfont.h"
   3:component/lcd/lcd.c **** #include "tim.h"
   4:component/lcd/lcd.c **** #include "gpio.h"
   5:component/lcd/lcd.c **** 
   6:component/lcd/lcd.c **** 
   7:component/lcd/lcd.c **** #define ROLL_STRING_MAX  200
   8:component/lcd/lcd.c **** struct rollstring_t {
   9:component/lcd/lcd.c **** 	char string[ROLL_STRING_MAX];
  10:component/lcd/lcd.c **** 	uint8_t size;
  11:component/lcd/lcd.c **** 	uint16_t length;
  12:component/lcd/lcd.c **** 	uint8_t width;
  13:component/lcd/lcd.c **** 	uint16_t offset;
  14:component/lcd/lcd.c **** 	uint8_t x;
  15:component/lcd/lcd.c **** 	uint8_t y;
  16:component/lcd/lcd.c **** };
  17:component/lcd/lcd.c **** struct rollstring_t rollctrl;
  18:component/lcd/lcd.c **** 
  19:component/lcd/lcd.c **** 
  20:component/lcd/lcd.c **** 
  21:component/lcd/lcd.c **** uint8_t POINT_COLOR = 0x02;
  22:component/lcd/lcd.c **** uint8_t BACK_COLOR  = 0x00; 
  23:component/lcd/lcd.c **** 
  24:component/lcd/lcd.c **** 
  25:component/lcd/lcd.c **** 
  26:component/lcd/lcd.c **** const uint16_t sw[16] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
  27:component/lcd/lcd.c **** 
  28:component/lcd/lcd.c **** lcd_data_t lcdbuf;
  29:component/lcd/lcd.c **** // volatile uint8_t LED_Matrix_R_Buf[LED_MATRIX_MAX_WIDTH/8][LED_MATRIX_MAX_HEIGHT];
  30:component/lcd/lcd.c **** // volatile uint8_t LED_Matrix_G_Buf[LED_MATRIX_MAX_WIDTH/8][LED_MATRIX_MAX_HEIGHT];
  31:component/lcd/lcd.c **** 
  32:component/lcd/lcd.c **** 
ARM GAS  /tmp/ccfCRRJc.s 			page 2


  33:component/lcd/lcd.c **** 
  34:component/lcd/lcd.c **** void LedMatrixInit(void)
  35:component/lcd/lcd.c **** {
  27              		.loc 1 35 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  36:component/lcd/lcd.c **** 	LL_GPIO_ResetOutputPin(LCD_OE_GPIO_Port, LCD_OE_Pin);
  32              		.loc 1 36 2 view .LVU1
  33              	.LVL0:
  34              	.LBB20:
  35              	.LBI20:
  36              		.file 2 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @file    stm32f1xx_ll_gpio.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *      without specific prior written permission.
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   ******************************************************************************
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #ifndef __STM32F1xx_LL_GPIO_H
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define __STM32F1xx_LL_GPIO_H
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #ifdef __cplusplus
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** extern "C" {
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
ARM GAS  /tmp/ccfCRRJc.s 			page 3


  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #include "stm32f1xx.h"
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @addtogroup STM32F1xx_LL_Driver
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Constants GPIO Private Constants
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Defines used for Pin Mask Initialization */
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define GPIO_PIN_MASK_POS   8U
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define GPIO_PIN_NB         16U
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** typedef struct
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
ARM GAS  /tmp/ccfCRRJc.s 			page 4


 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_0                    ((GPIO_BSRR_BS0  << GPIO_PIN_MASK_POS) | 0x00000001U)  /*!
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_1                    ((GPIO_BSRR_BS1  << GPIO_PIN_MASK_POS) | 0x00000002U)  /*!
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_2                    ((GPIO_BSRR_BS2  << GPIO_PIN_MASK_POS) | 0x00000004U)  /*!
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_3                    ((GPIO_BSRR_BS3  << GPIO_PIN_MASK_POS) | 0x00000008U)  /*!
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_4                    ((GPIO_BSRR_BS4  << GPIO_PIN_MASK_POS) | 0x00000010U)  /*!
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_5                    ((GPIO_BSRR_BS5  << GPIO_PIN_MASK_POS) | 0x00000020U)  /*!
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_6                    ((GPIO_BSRR_BS6  << GPIO_PIN_MASK_POS) | 0x00000040U)  /*!
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_7                    ((GPIO_BSRR_BS7  << GPIO_PIN_MASK_POS) | 0x00000080U)  /*!
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_8                    ((GPIO_BSRR_BS8  << GPIO_PIN_MASK_POS) | 0x04000001U)  /*!
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_9                    ((GPIO_BSRR_BS9  << GPIO_PIN_MASK_POS) | 0x04000002U)  /*!
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_10                   ((GPIO_BSRR_BS10 << GPIO_PIN_MASK_POS) | 0x04000004U)  /*!
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_11                   ((GPIO_BSRR_BS11 << GPIO_PIN_MASK_POS) | 0x04000008U)  /*!
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_12                   ((GPIO_BSRR_BS12 << GPIO_PIN_MASK_POS) | 0x04000010U)  /*!
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_13                   ((GPIO_BSRR_BS13 << GPIO_PIN_MASK_POS) | 0x04000020U)  /*!
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_14                   ((GPIO_BSRR_BS14 << GPIO_PIN_MASK_POS) | 0x04000040U)  /*!
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_15                   ((GPIO_BSRR_BS15 << GPIO_PIN_MASK_POS) | 0x04000080U)  /*!
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                  (LL_GPIO_PIN_0  | LL_GPIO_PIN_1  | LL_GPIO_PIN_2  | \
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_3  | LL_GPIO_PIN_4  | LL_GPIO_PIN_5  | \
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_6  | LL_GPIO_PIN_7  | LL_GPIO_PIN_8  | \
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_9  | LL_GPIO_PIN_10 | LL_GPIO_PIN_11 | \
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_12 | LL_GPIO_PIN_13 | LL_GPIO_PIN_14 | \
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_15)                                      /*!<
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
ARM GAS  /tmp/ccfCRRJc.s 			page 5


 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG              0x00000000U       /*!< Select analog mode */
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_FLOATING            GPIO_CRL_CNF0_0   /*!< Select floating mode */
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT               GPIO_CRL_CNF0_1   /*!< Select input mode */
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT              GPIO_CRL_MODE0_0  /*!< Select general purpose output mode 
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE           (GPIO_CRL_CNF0_1 | GPIO_CRL_MODE0_0) /*!< Select alternate
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL          0x00000000U                /*!< Select push-pull as output
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN         GPIO_CRL_CNF0_0            /*!< Select open-drain as outpu
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT_10MHz        GPIO_CRL_MODE0_0            /*!< Select Output mode, max s
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT_2MHz         GPIO_CRL_MODE0_1            /*!< Select Output mode, max s
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT_50MHz        GPIO_CRL_MODE0              /*!< Select Output mode, max s
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW           LL_GPIO_MODE_OUTPUT_2MHz    /*!< Select I/O low output spe
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM        LL_GPIO_MODE_OUTPUT_10MHz   /*!< Select I/O medium output 
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH          LL_GPIO_MODE_OUTPUT_50MHz   /*!< Select I/O high output sp
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                0x00000000U    /*!< Select I/O pull down */
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                  GPIO_ODR_ODR0  /*!< Select I/O pull up */
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EVENTOUT_PIN EVENTOUT Pin
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_0        AFIO_EVCR_PIN_PX0   /*!< EVENTOUT on pin 0 */
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_1        AFIO_EVCR_PIN_PX1   /*!< EVENTOUT on pin 1 */
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_2        AFIO_EVCR_PIN_PX2   /*!< EVENTOUT on pin 2 */
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_3        AFIO_EVCR_PIN_PX3   /*!< EVENTOUT on pin 3 */
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_4        AFIO_EVCR_PIN_PX4   /*!< EVENTOUT on pin 4 */
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_5        AFIO_EVCR_PIN_PX5   /*!< EVENTOUT on pin 5 */
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_6        AFIO_EVCR_PIN_PX6   /*!< EVENTOUT on pin 6 */
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_7        AFIO_EVCR_PIN_PX7   /*!< EVENTOUT on pin 7 */
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_8        AFIO_EVCR_PIN_PX8   /*!< EVENTOUT on pin 8 */
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_9        AFIO_EVCR_PIN_PX9   /*!< EVENTOUT on pin 9 */
ARM GAS  /tmp/ccfCRRJc.s 			page 6


 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_10       AFIO_EVCR_PIN_PX10  /*!< EVENTOUT on pin 10 */
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_11       AFIO_EVCR_PIN_PX11  /*!< EVENTOUT on pin 11 */
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_12       AFIO_EVCR_PIN_PX12  /*!< EVENTOUT on pin 12 */
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_13       AFIO_EVCR_PIN_PX13  /*!< EVENTOUT on pin 13 */
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_14       AFIO_EVCR_PIN_PX14  /*!< EVENTOUT on pin 14 */
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_15       AFIO_EVCR_PIN_PX15  /*!< EVENTOUT on pin 15 */
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EVENTOUT_PORT EVENTOUT Port
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_A       AFIO_EVCR_PORT_PA  /*!< EVENTOUT on port A */
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_B       AFIO_EVCR_PORT_PB  /*!< EVENTOUT on port B */
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_C       AFIO_EVCR_PORT_PC  /*!< EVENTOUT on port C */
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_D       AFIO_EVCR_PORT_PD  /*!< EVENTOUT on port D */
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_E       AFIO_EVCR_PORT_PE  /*!< EVENTOUT on port E */
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_EXTI_PORT GPIO EXTI PORT
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTA            0U   /*!< EXTI PORT A */
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTB            1U   /*!< EXTI PORT B */
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTC            2U   /*!< EXTI PORT C */
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTD            3U   /*!< EXTI PORT D */
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTE            4U   /*!< EXTI PORT E */
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTF            5U   /*!< EXTI PORT F */
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTG            6U   /*!< EXTI PORT G */
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_EXTI_LINE GPIO EXTI LINE
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE0            (0x000FU << 16U | 0U)  /*!< EXTI_POSITION_0  | EXTICR[0] *
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE1            (0x00F0U << 16U | 0U)  /*!< EXTI_POSITION_4  | EXTICR[0] *
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE2            (0x0F00U << 16U | 0U)  /*!< EXTI_POSITION_8  | EXTICR[0] *
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE3            (0xF000U << 16U | 0U)  /*!< EXTI_POSITION_12 | EXTICR[0] *
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE4            (0x000FU << 16U | 1U)  /*!< EXTI_POSITION_0  | EXTICR[1] *
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE5            (0x00F0U << 16U | 1U)  /*!< EXTI_POSITION_4  | EXTICR[1] *
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE6            (0x0F00U << 16U | 1U)  /*!< EXTI_POSITION_8  | EXTICR[1] *
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE7            (0xF000U << 16U | 1U)  /*!< EXTI_POSITION_12 | EXTICR[1] *
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE8            (0x000FU << 16U | 2U)  /*!< EXTI_POSITION_0  | EXTICR[2] *
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE9            (0x00F0U << 16U | 2U)  /*!< EXTI_POSITION_4  | EXTICR[2] *
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE10           (0x0F00U << 16U | 2U)  /*!< EXTI_POSITION_8  | EXTICR[2] *
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE11           (0xF000U << 16U | 2U)  /*!< EXTI_POSITION_12 | EXTICR[2] *
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE12           (0x000FU << 16U | 3U)  /*!< EXTI_POSITION_0  | EXTICR[3] *
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE13           (0x00F0U << 16U | 3U)  /*!< EXTI_POSITION_4  | EXTICR[3] *
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE14           (0x0F00U << 16U | 3U)  /*!< EXTI_POSITION_8  | EXTICR[3] *
ARM GAS  /tmp/ccfCRRJc.s 			page 7


 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE15           (0xF000U << 16U | 3U)  /*!< EXTI_POSITION_12 | EXTICR[3] *
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Register value
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O mode can be Analog, Floating input, Input with pull-up/pull-down, General purpose O
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         Alternate function Output.
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        CNFy         LL_GPIO_SetPinMode
ARM GAS  /tmp/ccfCRRJc.s 			page 8


 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        MODEy        LL_GPIO_SetPinMode
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        CNFy         LL_GPIO_SetPinMode
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        MODEy        LL_GPIO_SetPinMode
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_FLOATING
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)(&GPIOx->CRL) + (Pin >> 24));
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(*pReg, ((GPIO_CRL_CNF0 | GPIO_CRL_MODE0) << (POSITION_VAL(Pin) * 4U)), (Mode << (POSIT
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O mode can be Analog, Floating input, Input with pull-up/pull-down, General purpose O
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         Alternate function Output.
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        CNFy         LL_GPIO_GetPinMode
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        MODEy        LL_GPIO_GetPinMode
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        CNFy         LL_GPIO_GetPinMode
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        MODEy        LL_GPIO_GetPinMode
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
ARM GAS  /tmp/ccfCRRJc.s 			page 9


 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_FLOATING
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)(&GPIOx->CRL) + (Pin >> 24));
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(*pReg, ((GPIO_CRL_CNF0 | GPIO_CRL_MODE0) << (POSITION_VAL(Pin) * 4U))) >> (POSIT
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium or Fast speed.
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL      MODEy       LL_GPIO_SetPinSpeed
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH      MODEy       LL_GPIO_SetPinSpeed
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)(&GPIOx->CRL) + (Pin >> 24));
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(*pReg, (GPIO_CRL_MODE0 << (POSITION_VAL(Pin) * 4U)),
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 4U)));
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
ARM GAS  /tmp/ccfCRRJc.s 			page 10


 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL      MODEy       LL_GPIO_GetPinSpeed
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH      MODEy       LL_GPIO_GetPinSpeed
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)(&GPIOx->CRL) + (Pin >> 24));
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(*pReg, (GPIO_CRL_MODE0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) * 4U)
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL       MODEy           LL_GPIO_SetPinOutputType
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH       MODEy           LL_GPIO_SetPinOutputType
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be a combination of the following values:
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
ARM GAS  /tmp/ccfCRRJc.s 			page 11


 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t OutputTyp
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)(&GPIOx->CRL) + (Pin >> 24));
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(*pReg, (GPIO_CRL_CNF0_0 << (POSITION_VAL(Pin) * 4U)),
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****              (OutputType << (POSITION_VAL(Pin) * 4U)));
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL       MODEy       LL_GPIO_GetPinOutputType
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH       MODEy       LL_GPIO_GetPinOutputType
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)(&GPIOx->CRL) + (Pin >> 24));
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(*pReg, (GPIO_CRL_CNF0_0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) * 4U
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
ARM GAS  /tmp/ccfCRRJc.s 			page 12


 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR        ODR         LL_GPIO_SetPinPull
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(GPIOx->ODR, (Pin >> GPIO_PIN_MASK_POS), Pull << (POSITION_VAL(Pin >> GPIO_PIN_MASK_POS
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR        ODR         LL_GPIO_GetPinPull
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
ARM GAS  /tmp/ccfCRRJc.s 			page 13


 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->ODR, (GPIO_ODR_ODR0 << (POSITION_VAL(Pin >> GPIO_PIN_MASK_POS)))) >> (POS
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         next reset.
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         (control and alternate function registers).
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   __IO uint32_t temp;
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   (void) temp;
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
ARM GAS  /tmp/ccfCRRJc.s 			page 14


 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU)) == ((PinMask >> GPI
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK));
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Input data register value of port
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_REG(GPIOx->IDR));
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
ARM GAS  /tmp/ccfCRRJc.s 			page 15


 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->IDR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU) == ((PinMask >> GPIO_P
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Write output data register for the port.
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_WriteOutputPort
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PortValue Level value for each pin of the port
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_WriteOutputPort(GPIO_TypeDef *GPIOx, uint32_t PortValue)
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, PortValue);
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return full output data register value for a dedicated port.
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_ReadOutputPort
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Output data register value of port
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadOutputPort(GPIO_TypeDef *GPIOx)
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->ODR));
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_IsOutputPinSet
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
ARM GAS  /tmp/ccfCRRJc.s 			page 16


 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsOutputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->ODR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU) == ((PinMask >> GPIO_P
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Set several pins to high level on dedicated gpio port.
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll BSRR         BSy           LL_GPIO_SetOutputPin
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->BSRR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU);
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Set several pins to low level on dedicated gpio port.
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll BRR          BRy           LL_GPIO_ResetOutputPin
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
ARM GAS  /tmp/ccfCRRJc.s 			page 17


 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
  37              		.loc 2 849 22 view .LVU2
  38              	.LBB21:
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->BRR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU);
  39              		.loc 2 851 3 view .LVU3
  40 0000 044B     		ldr	r3, .L2
  41 0002 0222     		movs	r2, #2
  42 0004 5A61     		str	r2, [r3, #20]
  43              	.LVL1:
  44              		.loc 2 851 3 is_stmt 0 view .LVU4
  45              	.LBE21:
  46              	.LBE20:
  37:component/lcd/lcd.c **** 	POINT_COLOR = 0x01;
  47              		.loc 1 37 2 is_stmt 1 view .LVU5
  48              		.loc 1 37 14 is_stmt 0 view .LVU6
  49 0006 044B     		ldr	r3, .L2+4
  50 0008 0122     		movs	r2, #1
  51 000a 1A70     		strb	r2, [r3]
  38:component/lcd/lcd.c ****     BACK_COLOR = 0x00;
  52              		.loc 1 38 5 is_stmt 1 view .LVU7
  53              		.loc 1 38 16 is_stmt 0 view .LVU8
  54 000c 034B     		ldr	r3, .L2+8
  55 000e 0022     		movs	r2, #0
  56 0010 1A70     		strb	r2, [r3]
  39:component/lcd/lcd.c **** }
  57              		.loc 1 39 1 view .LVU9
  58 0012 7047     		bx	lr
  59              	.L3:
  60              		.align	2
  61              	.L2:
  62 0014 000C0140 		.word	1073810432
  63 0018 00000000 		.word	.LANCHOR0
  64 001c 00000000 		.word	.LANCHOR1
  65              		.cfi_endproc
  66              	.LFE399:
  68              		.section	.text.LedMatrix_Clear,"ax",%progbits
  69              		.align	1
  70              		.global	LedMatrix_Clear
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  76              	LedMatrix_Clear:
  77              	.LFB400:
  40:component/lcd/lcd.c **** 
  41:component/lcd/lcd.c **** 
  42:component/lcd/lcd.c **** 
  43:component/lcd/lcd.c **** void LedMatrix_Clear(void)
  44:component/lcd/lcd.c **** {
ARM GAS  /tmp/ccfCRRJc.s 			page 18


  78              		.loc 1 44 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  45:component/lcd/lcd.c **** 	uint8_t i,j;
  83              		.loc 1 45 2 view .LVU11
  46:component/lcd/lcd.c **** 	for(i=0;i<LED_MATRIX_MAX_HEIGHT;i++)
  84              		.loc 1 46 2 view .LVU12
  85              	.LVL2:
  86              		.loc 1 46 7 is_stmt 0 view .LVU13
  87 0000 0020     		movs	r0, #0
  88              		.loc 1 46 2 view .LVU14
  89 0002 03E0     		b	.L10
  90              	.LVL3:
  91              	.L17:
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 4, -4
  47:component/lcd/lcd.c **** 	{
  48:component/lcd/lcd.c **** 		for(j=0;j<LED_MATRIX_MAX_WIDTH/8;j++)
  49:component/lcd/lcd.c **** 		{
  50:component/lcd/lcd.c **** 			lcdbuf.LED_Matrix_R_Buf[j][i] = 0;
  51:component/lcd/lcd.c **** 			lcdbuf.LED_Matrix_G_Buf[j][i] = 0;
  52:component/lcd/lcd.c **** 		}
  53:component/lcd/lcd.c **** 	}
  54:component/lcd/lcd.c **** }
  95              		.loc 1 54 1 view .LVU15
  96 0004 10BC     		pop	{r4}
  97              	.LCFI1:
  98              		.cfi_restore 4
  99              		.cfi_def_cfa_offset 0
 100 0006 7047     		bx	lr
 101              	.L16:
  46:component/lcd/lcd.c **** 	for(i=0;i<LED_MATRIX_MAX_HEIGHT;i++)
 102              		.loc 1 46 34 is_stmt 1 view .LVU16
  46:component/lcd/lcd.c **** 	for(i=0;i<LED_MATRIX_MAX_HEIGHT;i++)
 103              		.loc 1 46 35 is_stmt 0 view .LVU17
 104 0008 0130     		adds	r0, r0, #1
 105              	.LVL4:
  46:component/lcd/lcd.c **** 	for(i=0;i<LED_MATRIX_MAX_HEIGHT;i++)
 106              		.loc 1 46 35 view .LVU18
 107 000a C0B2     		uxtb	r0, r0
 108              	.LVL5:
 109              	.L10:
  46:component/lcd/lcd.c **** 	for(i=0;i<LED_MATRIX_MAX_HEIGHT;i++)
 110              		.loc 1 46 10 is_stmt 1 view .LVU19
  46:component/lcd/lcd.c **** 	for(i=0;i<LED_MATRIX_MAX_HEIGHT;i++)
 111              		.loc 1 46 2 is_stmt 0 view .LVU20
 112 000c 1F28     		cmp	r0, #31
 113 000e 15D8     		bhi	.L15
  48:component/lcd/lcd.c **** 		{
 114              		.loc 1 48 8 view .LVU21
 115 0010 0023     		movs	r3, #0
 116              	.LVL6:
  48:component/lcd/lcd.c **** 		{
 117              		.loc 1 48 11 is_stmt 1 view .LVU22
ARM GAS  /tmp/ccfCRRJc.s 			page 19


  48:component/lcd/lcd.c **** 		{
 118              		.loc 1 48 3 is_stmt 0 view .LVU23
 119 0012 072B     		cmp	r3, #7
 120 0014 F8D8     		bhi	.L16
  44:component/lcd/lcd.c **** 	uint8_t i,j;
 121              		.loc 1 44 1 view .LVU24
 122 0016 10B4     		push	{r4}
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 4
 125              		.cfi_offset 4, -4
 126              	.L6:
  50:component/lcd/lcd.c **** 			lcdbuf.LED_Matrix_G_Buf[j][i] = 0;
 127              		.loc 1 50 4 is_stmt 1 discriminator 3 view .LVU25
  50:component/lcd/lcd.c **** 			lcdbuf.LED_Matrix_G_Buf[j][i] = 0;
 128              		.loc 1 50 34 is_stmt 0 discriminator 3 view .LVU26
 129 0018 094A     		ldr	r2, .L18
 130 001a 02EB4312 		add	r2, r2, r3, lsl #5
 131 001e 1418     		adds	r4, r2, r0
 132 0020 0021     		movs	r1, #0
 133 0022 1154     		strb	r1, [r2, r0]
  51:component/lcd/lcd.c **** 		}
 134              		.loc 1 51 4 is_stmt 1 discriminator 3 view .LVU27
  51:component/lcd/lcd.c **** 		}
 135              		.loc 1 51 34 is_stmt 0 discriminator 3 view .LVU28
 136 0024 84F80011 		strb	r1, [r4, #256]
  48:component/lcd/lcd.c **** 		{
 137              		.loc 1 48 36 is_stmt 1 discriminator 3 view .LVU29
  48:component/lcd/lcd.c **** 		{
 138              		.loc 1 48 37 is_stmt 0 discriminator 3 view .LVU30
 139 0028 0133     		adds	r3, r3, #1
 140              	.LVL7:
  48:component/lcd/lcd.c **** 		{
 141              		.loc 1 48 37 discriminator 3 view .LVU31
 142 002a DBB2     		uxtb	r3, r3
 143              	.LVL8:
 144              	.L7:
  48:component/lcd/lcd.c **** 		{
 145              		.loc 1 48 11 is_stmt 1 discriminator 1 view .LVU32
  48:component/lcd/lcd.c **** 		{
 146              		.loc 1 48 3 is_stmt 0 discriminator 1 view .LVU33
 147 002c 072B     		cmp	r3, #7
 148 002e F3D9     		bls	.L6
  46:component/lcd/lcd.c **** 	{
 149              		.loc 1 46 34 is_stmt 1 discriminator 2 view .LVU34
  46:component/lcd/lcd.c **** 	{
 150              		.loc 1 46 35 is_stmt 0 discriminator 2 view .LVU35
 151 0030 0130     		adds	r0, r0, #1
 152              	.LVL9:
  46:component/lcd/lcd.c **** 	{
 153              		.loc 1 46 35 discriminator 2 view .LVU36
 154 0032 C0B2     		uxtb	r0, r0
 155              	.LVL10:
  46:component/lcd/lcd.c **** 	{
 156              		.loc 1 46 10 is_stmt 1 discriminator 2 view .LVU37
  46:component/lcd/lcd.c **** 	{
 157              		.loc 1 46 2 is_stmt 0 discriminator 2 view .LVU38
 158 0034 1F28     		cmp	r0, #31
ARM GAS  /tmp/ccfCRRJc.s 			page 20


 159 0036 E5D8     		bhi	.L17
  48:component/lcd/lcd.c **** 		{
 160              		.loc 1 48 8 view .LVU39
 161 0038 0023     		movs	r3, #0
 162              	.LVL11:
  48:component/lcd/lcd.c **** 		{
 163              		.loc 1 48 8 view .LVU40
 164 003a F7E7     		b	.L7
 165              	.L15:
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 0
 168              		.cfi_restore 4
  48:component/lcd/lcd.c **** 		{
 169              		.loc 1 48 8 view .LVU41
 170 003c 7047     		bx	lr
 171              	.L19:
 172 003e 00BF     		.align	2
 173              	.L18:
 174 0040 00000000 		.word	lcdbuf
 175              		.cfi_endproc
 176              	.LFE400:
 178              		.section	.text.LedMatrix_DrawPoint,"ax",%progbits
 179              		.align	1
 180              		.global	LedMatrix_DrawPoint
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu softvfp
 186              	LedMatrix_DrawPoint:
 187              	.LVL12:
 188              	.LFB401:
  55:component/lcd/lcd.c **** 
  56:component/lcd/lcd.c **** 
  57:component/lcd/lcd.c **** 
  58:component/lcd/lcd.c **** void LedMatrix_DrawPoint(uint8_t x,uint8_t y,uint8_t t)
  59:component/lcd/lcd.c **** {
 189              		.loc 1 59 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
  60:component/lcd/lcd.c **** 	uint8_t pos,bx;
 194              		.loc 1 60 2 view .LVU43
  61:component/lcd/lcd.c **** 	
  62:component/lcd/lcd.c **** 	if(x>64||y>32)return;
 195              		.loc 1 62 2 view .LVU44
 196              		.loc 1 62 4 is_stmt 0 view .LVU45
 197 0000 4028     		cmp	r0, #64
 198 0002 59D8     		bhi	.L26
 199              		.loc 1 62 9 discriminator 2 view .LVU46
 200 0004 2029     		cmp	r1, #32
 201 0006 57D8     		bhi	.L26
  59:component/lcd/lcd.c **** 	uint8_t pos,bx;
 202              		.loc 1 59 1 view .LVU47
 203 0008 30B4     		push	{r4, r5}
 204              	.LCFI4:
 205              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccfCRRJc.s 			page 21


 206              		.cfi_offset 4, -8
 207              		.cfi_offset 5, -4
  63:component/lcd/lcd.c **** 	pos=x/8;
 208              		.loc 1 63 2 is_stmt 1 view .LVU48
 209              		.loc 1 63 5 is_stmt 0 view .LVU49
 210 000a C308     		lsrs	r3, r0, #3
 211              	.LVL13:
  64:component/lcd/lcd.c **** 	bx=x%8;
 212              		.loc 1 64 2 is_stmt 1 view .LVU50
 213              		.loc 1 64 4 is_stmt 0 view .LVU51
 214 000c 00F00700 		and	r0, r0, #7
 215              	.LVL14:
  65:component/lcd/lcd.c **** 	
  66:component/lcd/lcd.c **** 	if(t == 0x01)
 216              		.loc 1 66 2 is_stmt 1 view .LVU52
 217              		.loc 1 66 4 is_stmt 0 view .LVU53
 218 0010 012A     		cmp	r2, #1
 219 0012 16D0     		beq	.L29
  67:component/lcd/lcd.c **** 	{
  68:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_R_Buf[pos][y] |= (1<<bx);
  69:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] &= ~(1<<bx);
  70:component/lcd/lcd.c **** 	}
  71:component/lcd/lcd.c **** 	else if(t == 0x02)
 220              		.loc 1 71 7 is_stmt 1 view .LVU54
 221              		.loc 1 71 9 is_stmt 0 view .LVU55
 222 0014 022A     		cmp	r2, #2
 223 0016 29D0     		beq	.L30
  72:component/lcd/lcd.c **** 	{
  73:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_R_Buf[pos][y] &= ~(1<<bx);
  74:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] |= (1<<bx);
  75:component/lcd/lcd.c **** 	}
  76:component/lcd/lcd.c **** 	else if(t == 0x03)
 224              		.loc 1 76 7 is_stmt 1 view .LVU56
 225              		.loc 1 76 9 is_stmt 0 view .LVU57
 226 0018 032A     		cmp	r2, #3
 227 001a 3AD0     		beq	.L31
  77:component/lcd/lcd.c **** 	{
  78:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_R_Buf[pos][y] |= (1<<bx);
  79:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] |= (1<<bx);
  80:component/lcd/lcd.c **** 	}
  81:component/lcd/lcd.c ****     else
  82:component/lcd/lcd.c **** 	{
  83:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_R_Buf[pos][y] &= ~(1<<bx);
 228              		.loc 1 83 3 is_stmt 1 view .LVU58
 229              		.loc 1 83 35 is_stmt 0 view .LVU59
 230 001c 274A     		ldr	r2, .L32
 231              	.LVL15:
 232              		.loc 1 83 35 view .LVU60
 233 001e 02EB4312 		add	r2, r2, r3, lsl #5
 234 0022 5518     		adds	r5, r2, r1
 235 0024 545C     		ldrb	r4, [r2, r1]	@ zero_extendqisi2
 236              		.loc 1 83 41 view .LVU61
 237 0026 0123     		movs	r3, #1
 238              	.LVL16:
 239              		.loc 1 83 41 view .LVU62
 240 0028 03FA00F0 		lsl	r0, r3, r0
 241              	.LVL17:
ARM GAS  /tmp/ccfCRRJc.s 			page 22


 242              		.loc 1 83 35 view .LVU63
 243 002c C043     		mvns	r0, r0
 244 002e 40B2     		sxtb	r0, r0
 245 0030 04EA0003 		and	r3, r4, r0
 246 0034 5354     		strb	r3, [r2, r1]
  84:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] &= ~(1<<bx);
 247              		.loc 1 84 3 is_stmt 1 view .LVU64
 248              		.loc 1 84 35 is_stmt 0 view .LVU65
 249 0036 95F80031 		ldrb	r3, [r5, #256]	@ zero_extendqisi2
 250 003a 1840     		ands	r0, r0, r3
 251 003c 85F80001 		strb	r0, [r5, #256]
 252 0040 12E0     		b	.L20
 253              	.LVL18:
 254              	.L29:
  68:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] &= ~(1<<bx);
 255              		.loc 1 68 3 is_stmt 1 view .LVU66
  68:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] &= ~(1<<bx);
 256              		.loc 1 68 35 is_stmt 0 view .LVU67
 257 0042 1E4A     		ldr	r2, .L32
 258              	.LVL19:
  68:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] &= ~(1<<bx);
 259              		.loc 1 68 35 view .LVU68
 260 0044 02EB4312 		add	r2, r2, r3, lsl #5
 261 0048 5518     		adds	r5, r2, r1
 262 004a 545C     		ldrb	r4, [r2, r1]	@ zero_extendqisi2
  68:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] &= ~(1<<bx);
 263              		.loc 1 68 40 view .LVU69
 264 004c 0123     		movs	r3, #1
 265              	.LVL20:
  68:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] &= ~(1<<bx);
 266              		.loc 1 68 40 view .LVU70
 267 004e 03FA00F0 		lsl	r0, r3, r0
 268              	.LVL21:
  68:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] &= ~(1<<bx);
 269              		.loc 1 68 35 view .LVU71
 270 0052 40B2     		sxtb	r0, r0
 271 0054 44EA0003 		orr	r3, r4, r0
 272 0058 DBB2     		uxtb	r3, r3
 273 005a 5354     		strb	r3, [r2, r1]
  69:component/lcd/lcd.c **** 	}
 274              		.loc 1 69 3 is_stmt 1 view .LVU72
  69:component/lcd/lcd.c **** 	}
 275              		.loc 1 69 35 is_stmt 0 view .LVU73
 276 005c 95F80031 		ldrb	r3, [r5, #256]	@ zero_extendqisi2
 277 0060 23EA0000 		bic	r0, r3, r0
 278 0064 85F80001 		strb	r0, [r5, #256]
 279              	.L20:
  85:component/lcd/lcd.c **** 	}
  86:component/lcd/lcd.c **** }
 280              		.loc 1 86 1 view .LVU74
 281 0068 30BC     		pop	{r4, r5}
 282              	.LCFI5:
 283              		.cfi_remember_state
 284              		.cfi_restore 5
 285              		.cfi_restore 4
 286              		.cfi_def_cfa_offset 0
 287 006a 7047     		bx	lr
ARM GAS  /tmp/ccfCRRJc.s 			page 23


 288              	.LVL22:
 289              	.L30:
 290              	.LCFI6:
 291              		.cfi_restore_state
  73:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] |= (1<<bx);
 292              		.loc 1 73 3 is_stmt 1 view .LVU75
  73:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] |= (1<<bx);
 293              		.loc 1 73 35 is_stmt 0 view .LVU76
 294 006c 134A     		ldr	r2, .L32
 295              	.LVL23:
  73:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] |= (1<<bx);
 296              		.loc 1 73 35 view .LVU77
 297 006e 02EB4312 		add	r2, r2, r3, lsl #5
 298 0072 5518     		adds	r5, r2, r1
 299 0074 535C     		ldrb	r3, [r2, r1]	@ zero_extendqisi2
 300              	.LVL24:
  73:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] |= (1<<bx);
 301              		.loc 1 73 41 view .LVU78
 302 0076 0124     		movs	r4, #1
 303 0078 04FA00F0 		lsl	r0, r4, r0
 304              	.LVL25:
  73:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] |= (1<<bx);
 305              		.loc 1 73 35 view .LVU79
 306 007c 40B2     		sxtb	r0, r0
 307 007e 23EA0003 		bic	r3, r3, r0
 308 0082 5354     		strb	r3, [r2, r1]
  74:component/lcd/lcd.c **** 	}
 309              		.loc 1 74 3 is_stmt 1 view .LVU80
  74:component/lcd/lcd.c **** 	}
 310              		.loc 1 74 35 is_stmt 0 view .LVU81
 311 0084 95F80031 		ldrb	r3, [r5, #256]	@ zero_extendqisi2
 312 0088 1843     		orrs	r0, r0, r3
 313 008a C0B2     		uxtb	r0, r0
 314 008c 85F80001 		strb	r0, [r5, #256]
 315 0090 EAE7     		b	.L20
 316              	.LVL26:
 317              	.L31:
  78:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] |= (1<<bx);
 318              		.loc 1 78 3 is_stmt 1 view .LVU82
  78:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] |= (1<<bx);
 319              		.loc 1 78 35 is_stmt 0 view .LVU83
 320 0092 0A4A     		ldr	r2, .L32
 321              	.LVL27:
  78:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] |= (1<<bx);
 322              		.loc 1 78 35 view .LVU84
 323 0094 02EB4312 		add	r2, r2, r3, lsl #5
 324 0098 5518     		adds	r5, r2, r1
 325 009a 535C     		ldrb	r3, [r2, r1]	@ zero_extendqisi2
 326              	.LVL28:
  78:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] |= (1<<bx);
 327              		.loc 1 78 40 view .LVU85
 328 009c 0124     		movs	r4, #1
 329 009e 04FA00F0 		lsl	r0, r4, r0
 330              	.LVL29:
  78:component/lcd/lcd.c **** 		lcdbuf.LED_Matrix_G_Buf[pos][y] |= (1<<bx);
 331              		.loc 1 78 35 view .LVU86
 332 00a2 40B2     		sxtb	r0, r0
ARM GAS  /tmp/ccfCRRJc.s 			page 24


 333 00a4 0343     		orrs	r3, r3, r0
 334 00a6 DBB2     		uxtb	r3, r3
 335 00a8 5354     		strb	r3, [r2, r1]
  79:component/lcd/lcd.c **** 	}
 336              		.loc 1 79 3 is_stmt 1 view .LVU87
  79:component/lcd/lcd.c **** 	}
 337              		.loc 1 79 35 is_stmt 0 view .LVU88
 338 00aa 95F80031 		ldrb	r3, [r5, #256]	@ zero_extendqisi2
 339 00ae 1843     		orrs	r0, r0, r3
 340 00b0 C0B2     		uxtb	r0, r0
 341 00b2 85F80001 		strb	r0, [r5, #256]
 342 00b6 D7E7     		b	.L20
 343              	.LVL30:
 344              	.L26:
 345              	.LCFI7:
 346              		.cfi_def_cfa_offset 0
 347              		.cfi_restore 4
 348              		.cfi_restore 5
  79:component/lcd/lcd.c **** 	}
 349              		.loc 1 79 35 view .LVU89
 350 00b8 7047     		bx	lr
 351              	.L33:
 352 00ba 00BF     		.align	2
 353              	.L32:
 354 00bc 00000000 		.word	lcdbuf
 355              		.cfi_endproc
 356              	.LFE401:
 358              		.section	.text.scanf_line,"ax",%progbits
 359              		.align	1
 360              		.global	scanf_line
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu softvfp
 366              	scanf_line:
 367              	.LVL31:
 368              	.LFB402:
  87:component/lcd/lcd.c **** 
  88:component/lcd/lcd.c **** 
  89:component/lcd/lcd.c **** inline void scanf_line(uint8_t line)
  90:component/lcd/lcd.c **** {
 369              		.loc 1 90 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
  91:component/lcd/lcd.c **** 	if(line&0x01)					
 374              		.loc 1 91 2 view .LVU91
 375              		.loc 1 91 4 is_stmt 0 view .LVU92
 376 0000 10F0010F 		tst	r0, #1
 377 0004 15D0     		beq	.L35
  92:component/lcd/lcd.c **** 		LL_GPIO_SetOutputPin(LCD_A_GPIO_Port, LCD_A_Pin);			
 378              		.loc 1 92 3 is_stmt 1 view .LVU93
 379              	.LVL32:
 380              	.LBB22:
 381              	.LBI22:
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
ARM GAS  /tmp/ccfCRRJc.s 			page 25


 382              		.loc 2 820 22 view .LVU94
 383              	.LBB23:
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 384              		.loc 2 822 3 view .LVU95
 385 0006 134B     		ldr	r3, .L43
 386 0008 0122     		movs	r2, #1
 387 000a 1A61     		str	r2, [r3, #16]
 388              	.LVL33:
 389              	.L36:
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 390              		.loc 2 822 3 is_stmt 0 view .LVU96
 391              	.LBE23:
 392              	.LBE22:
  93:component/lcd/lcd.c **** 	else															
  94:component/lcd/lcd.c **** 		LL_GPIO_ResetOutputPin(LCD_A_GPIO_Port, LCD_A_Pin);			
  95:component/lcd/lcd.c **** 	if(((line&0x02)>>1))											
 393              		.loc 1 95 2 is_stmt 1 view .LVU97
 394              		.loc 1 95 4 is_stmt 0 view .LVU98
 395 000c 10F0020F 		tst	r0, #2
 396 0010 13D0     		beq	.L37
  96:component/lcd/lcd.c **** 		LL_GPIO_SetOutputPin(LCD_B_GPIO_Port, LCD_B_Pin);			
 397              		.loc 1 96 3 is_stmt 1 view .LVU99
 398              	.LVL34:
 399              	.LBB24:
 400              	.LBI24:
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 401              		.loc 2 820 22 view .LVU100
 402              	.LBB25:
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 403              		.loc 2 822 3 view .LVU101
 404 0012 114B     		ldr	r3, .L43+4
 405 0014 8022     		movs	r2, #128
 406 0016 1A61     		str	r2, [r3, #16]
 407              	.LVL35:
 408              	.L38:
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 409              		.loc 2 822 3 is_stmt 0 view .LVU102
 410              	.LBE25:
 411              	.LBE24:
  97:component/lcd/lcd.c **** 	else															
  98:component/lcd/lcd.c **** 		LL_GPIO_ResetOutputPin(LCD_B_GPIO_Port, LCD_B_Pin);			
  99:component/lcd/lcd.c **** 	if(((line&0x04)>>2))											
 412              		.loc 1 99 2 is_stmt 1 view .LVU103
 413              		.loc 1 99 4 is_stmt 0 view .LVU104
 414 0018 10F0040F 		tst	r0, #4
 415 001c 11D0     		beq	.L39
 100:component/lcd/lcd.c **** 		LL_GPIO_SetOutputPin(LCD_C_GPIO_Port, LCD_C_Pin);			
 416              		.loc 1 100 3 is_stmt 1 view .LVU105
 417              	.LVL36:
 418              	.LBB26:
 419              	.LBI26:
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 420              		.loc 2 820 22 view .LVU106
 421              	.LBB27:
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 422              		.loc 2 822 3 view .LVU107
 423 001e 0E4B     		ldr	r3, .L43+4
ARM GAS  /tmp/ccfCRRJc.s 			page 26


 424 0020 4022     		movs	r2, #64
 425 0022 1A61     		str	r2, [r3, #16]
 426              	.LVL37:
 427              	.L40:
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 428              		.loc 2 822 3 is_stmt 0 view .LVU108
 429              	.LBE27:
 430              	.LBE26:
 101:component/lcd/lcd.c **** 	else															
 102:component/lcd/lcd.c **** 		LL_GPIO_ResetOutputPin(LCD_C_GPIO_Port, LCD_C_Pin);			
 103:component/lcd/lcd.c **** 	if(((line&0x08)>>3))											
 431              		.loc 1 103 2 is_stmt 1 view .LVU109
 432              		.loc 1 103 4 is_stmt 0 view .LVU110
 433 0024 10F0080F 		tst	r0, #8
 434 0028 0FD0     		beq	.L41
 104:component/lcd/lcd.c **** 		LL_GPIO_SetOutputPin(LCD_D_GPIO_Port, LCD_D_Pin);			
 435              		.loc 1 104 3 is_stmt 1 view .LVU111
 436              	.LVL38:
 437              	.LBB28:
 438              	.LBI28:
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 439              		.loc 2 820 22 view .LVU112
 440              	.LBB29:
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 441              		.loc 2 822 3 view .LVU113
 442 002a 0B4B     		ldr	r3, .L43+4
 443 002c 2022     		movs	r2, #32
 444 002e 1A61     		str	r2, [r3, #16]
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 445              		.loc 2 823 1 is_stmt 0 view .LVU114
 446 0030 7047     		bx	lr
 447              	.LVL39:
 448              	.L35:
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 449              		.loc 2 823 1 view .LVU115
 450              	.LBE29:
 451              	.LBE28:
  94:component/lcd/lcd.c **** 	if(((line&0x02)>>1))											
 452              		.loc 1 94 3 is_stmt 1 view .LVU116
 453              	.LBB30:
 454              	.LBI30:
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 455              		.loc 2 849 22 view .LVU117
 456              	.LBB31:
 457              		.loc 2 851 3 view .LVU118
 458 0032 084B     		ldr	r3, .L43
 459 0034 0122     		movs	r2, #1
 460 0036 5A61     		str	r2, [r3, #20]
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 461              		.loc 2 852 1 is_stmt 0 view .LVU119
 462 0038 E8E7     		b	.L36
 463              	.LVL40:
 464              	.L37:
 465              		.loc 2 852 1 view .LVU120
 466              	.LBE31:
 467              	.LBE30:
  98:component/lcd/lcd.c **** 	if(((line&0x04)>>2))											
ARM GAS  /tmp/ccfCRRJc.s 			page 27


 468              		.loc 1 98 3 is_stmt 1 view .LVU121
 469              	.LBB32:
 470              	.LBI32:
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 471              		.loc 2 849 22 view .LVU122
 472              	.LBB33:
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 473              		.loc 2 851 3 view .LVU123
 474 003a 074B     		ldr	r3, .L43+4
 475 003c 8022     		movs	r2, #128
 476 003e 5A61     		str	r2, [r3, #20]
 477              		.loc 2 852 1 is_stmt 0 view .LVU124
 478 0040 EAE7     		b	.L38
 479              	.LVL41:
 480              	.L39:
 481              		.loc 2 852 1 view .LVU125
 482              	.LBE33:
 483              	.LBE32:
 102:component/lcd/lcd.c **** 	if(((line&0x08)>>3))											
 484              		.loc 1 102 3 is_stmt 1 view .LVU126
 485              	.LBB34:
 486              	.LBI34:
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 487              		.loc 2 849 22 view .LVU127
 488              	.LBB35:
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 489              		.loc 2 851 3 view .LVU128
 490 0042 054B     		ldr	r3, .L43+4
 491 0044 4022     		movs	r2, #64
 492 0046 5A61     		str	r2, [r3, #20]
 493              		.loc 2 852 1 is_stmt 0 view .LVU129
 494 0048 ECE7     		b	.L40
 495              	.LVL42:
 496              	.L41:
 497              		.loc 2 852 1 view .LVU130
 498              	.LBE35:
 499              	.LBE34:
 105:component/lcd/lcd.c **** 	else															
 106:component/lcd/lcd.c **** 		LL_GPIO_ResetOutputPin(LCD_D_GPIO_Port, LCD_D_Pin);			
 500              		.loc 1 106 3 is_stmt 1 view .LVU131
 501              	.LBB36:
 502              	.LBI36:
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 503              		.loc 2 849 22 view .LVU132
 504              	.LBB37:
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 505              		.loc 2 851 3 view .LVU133
 506 004a 034B     		ldr	r3, .L43+4
 507 004c 2022     		movs	r2, #32
 508 004e 5A61     		str	r2, [r3, #20]
 509              	.LVL43:
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 510              		.loc 2 851 3 is_stmt 0 view .LVU134
 511              	.LBE37:
 512              	.LBE36:
 107:component/lcd/lcd.c **** }
 513              		.loc 1 107 1 view .LVU135
ARM GAS  /tmp/ccfCRRJc.s 			page 28


 514 0050 7047     		bx	lr
 515              	.L44:
 516 0052 00BF     		.align	2
 517              	.L43:
 518 0054 000C0140 		.word	1073810432
 519 0058 00080140 		.word	1073809408
 520              		.cfi_endproc
 521              	.LFE402:
 523              		.section	.text.LedMatrix_Fill,"ax",%progbits
 524              		.align	1
 525              		.global	LedMatrix_Fill
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu softvfp
 531              	LedMatrix_Fill:
 532              	.LVL44:
 533              	.LFB403:
 108:component/lcd/lcd.c **** 
 109:component/lcd/lcd.c ****   
 110:component/lcd/lcd.c **** void LedMatrix_Fill(uint8_t x1,uint8_t y1,uint8_t x2,uint8_t y2,uint8_t dot)  
 111:component/lcd/lcd.c **** {  
 534              		.loc 1 111 1 is_stmt 1 view -0
 535              		.cfi_startproc
 536              		@ args = 4, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		.loc 1 111 1 is_stmt 0 view .LVU137
 539 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 540              	.LCFI8:
 541              		.cfi_def_cfa_offset 32
 542              		.cfi_offset 3, -32
 543              		.cfi_offset 4, -28
 544              		.cfi_offset 5, -24
 545              		.cfi_offset 6, -20
 546              		.cfi_offset 7, -16
 547              		.cfi_offset 8, -12
 548              		.cfi_offset 9, -8
 549              		.cfi_offset 14, -4
 550 0004 0546     		mov	r5, r0
 551 0006 8946     		mov	r9, r1
 552 0008 9046     		mov	r8, r2
 553 000a 1E46     		mov	r6, r3
 554 000c 9DF82070 		ldrb	r7, [sp, #32]	@ zero_extendqisi2
 112:component/lcd/lcd.c **** 	uint8_t x,y;  
 555              		.loc 1 112 2 is_stmt 1 view .LVU138
 113:component/lcd/lcd.c **** 	for(x=x1;x<=x2;x++)
 556              		.loc 1 113 2 view .LVU139
 557              	.LVL45:
 558              		.loc 1 113 2 is_stmt 0 view .LVU140
 559 0010 0AE0     		b	.L46
 560              	.LVL46:
 561              	.L47:
 114:component/lcd/lcd.c **** 	{
 115:component/lcd/lcd.c **** 		for(y=y1;y<=y2;y++)
 116:component/lcd/lcd.c **** 			LedMatrix_DrawPoint(x,y,dot);
 562              		.loc 1 116 4 is_stmt 1 discriminator 3 view .LVU141
 563 0012 3A46     		mov	r2, r7
ARM GAS  /tmp/ccfCRRJc.s 			page 29


 564 0014 2146     		mov	r1, r4
 565 0016 2846     		mov	r0, r5
 566 0018 FFF7FEFF 		bl	LedMatrix_DrawPoint
 567              	.LVL47:
 115:component/lcd/lcd.c **** 			LedMatrix_DrawPoint(x,y,dot);
 568              		.loc 1 115 18 discriminator 3 view .LVU142
 115:component/lcd/lcd.c **** 			LedMatrix_DrawPoint(x,y,dot);
 569              		.loc 1 115 19 is_stmt 0 discriminator 3 view .LVU143
 570 001c 0134     		adds	r4, r4, #1
 571              	.LVL48:
 115:component/lcd/lcd.c **** 			LedMatrix_DrawPoint(x,y,dot);
 572              		.loc 1 115 19 discriminator 3 view .LVU144
 573 001e E4B2     		uxtb	r4, r4
 574              	.LVL49:
 575              	.L48:
 115:component/lcd/lcd.c **** 			LedMatrix_DrawPoint(x,y,dot);
 576              		.loc 1 115 12 is_stmt 1 discriminator 1 view .LVU145
 115:component/lcd/lcd.c **** 			LedMatrix_DrawPoint(x,y,dot);
 577              		.loc 1 115 3 is_stmt 0 discriminator 1 view .LVU146
 578 0020 B442     		cmp	r4, r6
 579 0022 F6D9     		bls	.L47
 113:component/lcd/lcd.c **** 	for(x=x1;x<=x2;x++)
 580              		.loc 1 113 17 is_stmt 1 discriminator 2 view .LVU147
 113:component/lcd/lcd.c **** 	for(x=x1;x<=x2;x++)
 581              		.loc 1 113 18 is_stmt 0 discriminator 2 view .LVU148
 582 0024 0135     		adds	r5, r5, #1
 583              	.LVL50:
 113:component/lcd/lcd.c **** 	for(x=x1;x<=x2;x++)
 584              		.loc 1 113 18 discriminator 2 view .LVU149
 585 0026 EDB2     		uxtb	r5, r5
 586              	.LVL51:
 587              	.L46:
 113:component/lcd/lcd.c **** 	for(x=x1;x<=x2;x++)
 588              		.loc 1 113 11 is_stmt 1 discriminator 1 view .LVU150
 113:component/lcd/lcd.c **** 	for(x=x1;x<=x2;x++)
 589              		.loc 1 113 2 is_stmt 0 discriminator 1 view .LVU151
 590 0028 4545     		cmp	r5, r8
 591 002a 01D8     		bhi	.L51
 115:component/lcd/lcd.c **** 			LedMatrix_DrawPoint(x,y,dot);
 592              		.loc 1 115 8 view .LVU152
 593 002c 4C46     		mov	r4, r9
 594 002e F7E7     		b	.L48
 595              	.L51:
 117:component/lcd/lcd.c **** 	}
 118:component/lcd/lcd.c **** }
 596              		.loc 1 118 1 view .LVU153
 597 0030 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 598              		.loc 1 118 1 view .LVU154
 599              		.cfi_endproc
 600              	.LFE403:
 602              		.section	.text.LedMatrix_ShowChar,"ax",%progbits
 603              		.align	1
 604              		.global	LedMatrix_ShowChar
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 608              		.fpu softvfp
ARM GAS  /tmp/ccfCRRJc.s 			page 30


 610              	LedMatrix_ShowChar:
 611              	.LVL52:
 612              	.LFB404:
 119:component/lcd/lcd.c **** 
 120:component/lcd/lcd.c **** 
 121:component/lcd/lcd.c **** void LedMatrix_ShowChar(uint8_t x,uint8_t y,uint8_t chr,uint8_t size)
 122:component/lcd/lcd.c **** {      			    
 613              		.loc 1 122 1 is_stmt 1 view -0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 8
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		.loc 1 122 1 is_stmt 0 view .LVU156
 618 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 619              	.LCFI9:
 620              		.cfi_def_cfa_offset 36
 621              		.cfi_offset 4, -36
 622              		.cfi_offset 5, -32
 623              		.cfi_offset 6, -28
 624              		.cfi_offset 7, -24
 625              		.cfi_offset 8, -20
 626              		.cfi_offset 9, -16
 627              		.cfi_offset 10, -12
 628              		.cfi_offset 11, -8
 629              		.cfi_offset 14, -4
 630 0004 83B0     		sub	sp, sp, #12
 631              	.LCFI10:
 632              		.cfi_def_cfa_offset 48
 633 0006 0746     		mov	r7, r0
 634 0008 8846     		mov	r8, r1
 635 000a 9B46     		mov	fp, r3
 123:component/lcd/lcd.c **** 	uint8_t temp,t,t1;
 636              		.loc 1 123 2 is_stmt 1 view .LVU157
 124:component/lcd/lcd.c **** 	uint8_t y0=y;
 637              		.loc 1 124 2 view .LVU158
 638              	.LVL53:
 125:component/lcd/lcd.c **** 	uint8_t csize;
 639              		.loc 1 125 2 view .LVU159
 126:component/lcd/lcd.c **** 	csize=(font2size[size][0]/8+((font2size[size][0]%8)?1:0))
 640              		.loc 1 126 2 view .LVU160
 641              		.loc 1 126 24 is_stmt 0 view .LVU161
 642 000c 3149     		ldr	r1, .L69
 643              	.LVL54:
 644              		.loc 1 126 24 view .LVU162
 645 000e 11F813A0 		ldrb	r10, [r1, r3, lsl #1]	@ zero_extendqisi2
 646              		.loc 1 126 55 view .LVU163
 647 0012 1AF00703 		ands	r3, r10, #7
 648              	.LVL55:
 649              		.loc 1 126 55 view .LVU164
 650 0016 18BF     		it	ne
 651 0018 0123     		movne	r3, #1
 652              		.loc 1 126 29 view .LVU165
 653 001a 03EBDA03 		add	r3, r3, r10, lsr #3
 127:component/lcd/lcd.c **** 	*font2size[size][1];
 654              		.loc 1 127 18 view .LVU166
 655 001e 01EB4B01 		add	r1, r1, fp, lsl #1
 656 0022 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 126:component/lcd/lcd.c **** 	csize=(font2size[size][0]/8+((font2size[size][0]%8)?1:0))
ARM GAS  /tmp/ccfCRRJc.s 			page 31


 657              		.loc 1 126 7 view .LVU167
 658 0024 03FB01F3 		mul	r3, r3, r1
 659 0028 DBB2     		uxtb	r3, r3
 660 002a 0093     		str	r3, [sp]
 661              	.LVL56:
 128:component/lcd/lcd.c **** 	chr=chr-' ';
 662              		.loc 1 128 2 is_stmt 1 view .LVU168
 663              		.loc 1 128 5 is_stmt 0 view .LVU169
 664 002c 203A     		subs	r2, r2, #32
 665              	.LVL57:
 666              		.loc 1 128 5 view .LVU170
 667 002e D3B2     		uxtb	r3, r2
 668 0030 0193     		str	r3, [sp, #4]
 669              	.LVL58:
 129:component/lcd/lcd.c ****     for(t=0;t<csize;t++)
 670              		.loc 1 129 5 is_stmt 1 view .LVU171
 671              		.loc 1 129 5 is_stmt 0 view .LVU172
 672 0032 4446     		mov	r4, r8
 673              		.loc 1 129 10 view .LVU173
 674 0034 4FF00009 		mov	r9, #0
 675              		.loc 1 129 5 view .LVU174
 676 0038 38E0     		b	.L53
 677              	.LVL59:
 678              	.L54:
 130:component/lcd/lcd.c ****     {   
 131:component/lcd/lcd.c **** 		if(size==0)temp=asc2_0806[chr][t];      
 132:component/lcd/lcd.c **** 		else if(size==1)temp=asc2_1206[chr][t]; 
 679              		.loc 1 132 8 is_stmt 1 view .LVU175
 680              		.loc 1 132 10 is_stmt 0 view .LVU176
 681 003a BBF1010F 		cmp	fp, #1
 682 003e 09D0     		beq	.L66
 133:component/lcd/lcd.c **** 		else if(size==2)temp=asc2_1608[chr][t];	
 683              		.loc 1 133 8 is_stmt 1 view .LVU177
 684              		.loc 1 133 10 is_stmt 0 view .LVU178
 685 0040 BBF1020F 		cmp	fp, #2
 686 0044 42D1     		bne	.L52
 687              		.loc 1 133 19 is_stmt 1 discriminator 1 view .LVU179
 688              		.loc 1 133 23 is_stmt 0 discriminator 1 view .LVU180
 689 0046 244B     		ldr	r3, .L69+4
 690 0048 019A     		ldr	r2, [sp, #4]
 691 004a 03EB0213 		add	r3, r3, r2, lsl #4
 692 004e 13F80950 		ldrb	r5, [r3, r9]	@ zero_extendqisi2
 693              	.LVL60:
 694              		.loc 1 133 23 discriminator 1 view .LVU181
 695 0052 39E0     		b	.L55
 696              	.LVL61:
 697              	.L66:
 132:component/lcd/lcd.c **** 		else if(size==2)temp=asc2_1608[chr][t];	
 698              		.loc 1 132 19 is_stmt 1 discriminator 1 view .LVU182
 132:component/lcd/lcd.c **** 		else if(size==2)temp=asc2_1608[chr][t];	
 699              		.loc 1 132 23 is_stmt 0 discriminator 1 view .LVU183
 700 0054 019B     		ldr	r3, [sp, #4]
 701 0056 03EB4303 		add	r3, r3, r3, lsl #1
 702 005a 204A     		ldr	r2, .L69+8
 703 005c 02EB8303 		add	r3, r2, r3, lsl #2
 704 0060 13F80950 		ldrb	r5, [r3, r9]	@ zero_extendqisi2
 705              	.LVL62:
ARM GAS  /tmp/ccfCRRJc.s 			page 32


 132:component/lcd/lcd.c **** 		else if(size==2)temp=asc2_1608[chr][t];	
 706              		.loc 1 132 23 discriminator 1 view .LVU184
 707 0064 30E0     		b	.L55
 708              	.LVL63:
 709              	.L68:
 134:component/lcd/lcd.c **** 		else return;							
 135:component/lcd/lcd.c ****         for(t1=0;t1<8;t1++)
 136:component/lcd/lcd.c **** 		{
 137:component/lcd/lcd.c **** 			if(temp&0x80)LedMatrix_DrawPoint(x,y,POINT_COLOR);
 710              		.loc 1 137 17 is_stmt 1 discriminator 1 view .LVU185
 711 0066 1E4B     		ldr	r3, .L69+12
 712 0068 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 713 006a 2146     		mov	r1, r4
 714 006c 3846     		mov	r0, r7
 715 006e FFF7FEFF 		bl	LedMatrix_DrawPoint
 716              	.LVL64:
 717              	.L60:
 138:component/lcd/lcd.c **** 			else LedMatrix_DrawPoint(x,y,BACK_COLOR);
 139:component/lcd/lcd.c **** 			temp<<=1;
 718              		.loc 1 139 4 view .LVU186
 719              		.loc 1 139 8 is_stmt 0 view .LVU187
 720 0072 6D00     		lsls	r5, r5, #1
 721              	.LVL65:
 722              		.loc 1 139 8 view .LVU188
 723 0074 EDB2     		uxtb	r5, r5
 724              	.LVL66:
 140:component/lcd/lcd.c **** 			y++;
 725              		.loc 1 140 4 is_stmt 1 view .LVU189
 726              		.loc 1 140 5 is_stmt 0 view .LVU190
 727 0076 0134     		adds	r4, r4, #1
 728              	.LVL67:
 729              		.loc 1 140 5 view .LVU191
 730 0078 E4B2     		uxtb	r4, r4
 731              	.LVL68:
 141:component/lcd/lcd.c **** 			if((y-y0)==font2size[size][0])
 732              		.loc 1 141 4 is_stmt 1 view .LVU192
 733              		.loc 1 141 9 is_stmt 0 view .LVU193
 734 007a A4EB0803 		sub	r3, r4, r8
 735              		.loc 1 141 6 view .LVU194
 736 007e 5345     		cmp	r3, r10
 737 0080 0DD0     		beq	.L67
 135:component/lcd/lcd.c **** 		{
 738              		.loc 1 135 23 is_stmt 1 discriminator 2 view .LVU195
 135:component/lcd/lcd.c **** 		{
 739              		.loc 1 135 25 is_stmt 0 discriminator 2 view .LVU196
 740 0082 0136     		adds	r6, r6, #1
 741              	.LVL69:
 135:component/lcd/lcd.c **** 		{
 742              		.loc 1 135 25 discriminator 2 view .LVU197
 743 0084 F6B2     		uxtb	r6, r6
 744              	.LVL70:
 745              	.L58:
 135:component/lcd/lcd.c **** 		{
 746              		.loc 1 135 18 is_stmt 1 discriminator 1 view .LVU198
 135:component/lcd/lcd.c **** 		{
 747              		.loc 1 135 9 is_stmt 0 discriminator 1 view .LVU199
 748 0086 072E     		cmp	r6, #7
ARM GAS  /tmp/ccfCRRJc.s 			page 33


 749 0088 0CD8     		bhi	.L62
 137:component/lcd/lcd.c **** 			else LedMatrix_DrawPoint(x,y,BACK_COLOR);
 750              		.loc 1 137 4 is_stmt 1 view .LVU200
 137:component/lcd/lcd.c **** 			else LedMatrix_DrawPoint(x,y,BACK_COLOR);
 751              		.loc 1 137 6 is_stmt 0 view .LVU201
 752 008a 15F0800F 		tst	r5, #128
 753 008e EAD1     		bne	.L68
 138:component/lcd/lcd.c **** 			temp<<=1;
 754              		.loc 1 138 9 is_stmt 1 view .LVU202
 755 0090 144B     		ldr	r3, .L69+16
 756 0092 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 757 0094 2146     		mov	r1, r4
 758 0096 3846     		mov	r0, r7
 759 0098 FFF7FEFF 		bl	LedMatrix_DrawPoint
 760              	.LVL71:
 761 009c E9E7     		b	.L60
 762              	.L67:
 142:component/lcd/lcd.c **** 			{
 143:component/lcd/lcd.c **** 				y=y0;
 763              		.loc 1 143 5 view .LVU203
 764              	.LVL72:
 144:component/lcd/lcd.c **** 				x++;
 765              		.loc 1 144 5 view .LVU204
 766              		.loc 1 144 6 is_stmt 0 view .LVU205
 767 009e 0137     		adds	r7, r7, #1
 768              	.LVL73:
 769              		.loc 1 144 6 view .LVU206
 770 00a0 FFB2     		uxtb	r7, r7
 771              	.LVL74:
 145:component/lcd/lcd.c **** 				break;
 772              		.loc 1 145 5 is_stmt 1 view .LVU207
 143:component/lcd/lcd.c **** 				x++;
 773              		.loc 1 143 6 is_stmt 0 view .LVU208
 774 00a2 4446     		mov	r4, r8
 775              	.LVL75:
 776              	.L62:
 129:component/lcd/lcd.c ****     {   
 777              		.loc 1 129 21 is_stmt 1 discriminator 2 view .LVU209
 129:component/lcd/lcd.c ****     {   
 778              		.loc 1 129 22 is_stmt 0 discriminator 2 view .LVU210
 779 00a4 09F10109 		add	r9, r9, #1
 780              	.LVL76:
 129:component/lcd/lcd.c ****     {   
 781              		.loc 1 129 22 discriminator 2 view .LVU211
 782 00a8 5FFA89F9 		uxtb	r9, r9
 783              	.LVL77:
 784              	.L53:
 129:component/lcd/lcd.c ****     {   
 785              		.loc 1 129 13 is_stmt 1 discriminator 1 view .LVU212
 129:component/lcd/lcd.c ****     {   
 786              		.loc 1 129 5 is_stmt 0 discriminator 1 view .LVU213
 787 00ac 009B     		ldr	r3, [sp]
 788 00ae 9945     		cmp	r9, r3
 789 00b0 0CD2     		bcs	.L52
 131:component/lcd/lcd.c **** 		else if(size==1)temp=asc2_1206[chr][t]; 
 790              		.loc 1 131 3 is_stmt 1 view .LVU214
 131:component/lcd/lcd.c **** 		else if(size==1)temp=asc2_1206[chr][t]; 
ARM GAS  /tmp/ccfCRRJc.s 			page 34


 791              		.loc 1 131 5 is_stmt 0 view .LVU215
 792 00b2 BBF1000F 		cmp	fp, #0
 793 00b6 C0D1     		bne	.L54
 131:component/lcd/lcd.c **** 		else if(size==1)temp=asc2_1206[chr][t]; 
 794              		.loc 1 131 14 is_stmt 1 discriminator 1 view .LVU216
 131:component/lcd/lcd.c **** 		else if(size==1)temp=asc2_1206[chr][t]; 
 795              		.loc 1 131 18 is_stmt 0 discriminator 1 view .LVU217
 796 00b8 019B     		ldr	r3, [sp, #4]
 797 00ba 03EB4303 		add	r3, r3, r3, lsl #1
 798 00be 0A4A     		ldr	r2, .L69+20
 799 00c0 02EB4303 		add	r3, r2, r3, lsl #1
 800 00c4 13F80950 		ldrb	r5, [r3, r9]	@ zero_extendqisi2
 801              	.LVL78:
 802              	.L55:
 122:component/lcd/lcd.c **** 	uint8_t temp,t,t1;
 803              		.loc 1 122 1 discriminator 1 view .LVU218
 804 00c8 0026     		movs	r6, #0
 805 00ca DCE7     		b	.L58
 806              	.LVL79:
 807              	.L52:
 146:component/lcd/lcd.c **** 			}
 147:component/lcd/lcd.c **** 		}  	 
 148:component/lcd/lcd.c ****     }          
 149:component/lcd/lcd.c **** }
 808              		.loc 1 149 1 view .LVU219
 809 00cc 03B0     		add	sp, sp, #12
 810              	.LCFI11:
 811              		.cfi_def_cfa_offset 36
 812              	.LVL80:
 813              		.loc 1 149 1 view .LVU220
 814              		@ sp needed
 815 00ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 816              	.LVL81:
 817              	.L70:
 818              		.loc 1 149 1 view .LVU221
 819 00d2 00BF     		.align	2
 820              	.L69:
 821 00d4 00000000 		.word	.LANCHOR2
 822 00d8 00000000 		.word	.LANCHOR5
 823 00dc 00000000 		.word	.LANCHOR4
 824 00e0 00000000 		.word	.LANCHOR0
 825 00e4 00000000 		.word	.LANCHOR1
 826 00e8 00000000 		.word	.LANCHOR3
 827              		.cfi_endproc
 828              	.LFE404:
 830              		.section	.text.LedMatrix_ShowString,"ax",%progbits
 831              		.align	1
 832              		.global	LedMatrix_ShowString
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 836              		.fpu softvfp
 838              	LedMatrix_ShowString:
 839              	.LVL82:
 840              	.LFB405:
 150:component/lcd/lcd.c **** 
 151:component/lcd/lcd.c **** 
ARM GAS  /tmp/ccfCRRJc.s 			page 35


 152:component/lcd/lcd.c **** void LedMatrix_ShowString(uint8_t x,uint8_t y,const uint8_t *p,uint8_t size)
 153:component/lcd/lcd.c **** {
 841              		.loc 1 153 1 is_stmt 1 view -0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              		.loc 1 153 1 is_stmt 0 view .LVU223
 846 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 847              	.LCFI12:
 848              		.cfi_def_cfa_offset 24
 849              		.cfi_offset 4, -24
 850              		.cfi_offset 5, -20
 851              		.cfi_offset 6, -16
 852              		.cfi_offset 7, -12
 853              		.cfi_offset 8, -8
 854              		.cfi_offset 14, -4
 855 0004 8046     		mov	r8, r0
 856 0006 0F46     		mov	r7, r1
 857 0008 1546     		mov	r5, r2
 858 000a 1E46     		mov	r6, r3
 154:component/lcd/lcd.c **** 	//HAL_TIM_Base_Start_IT(&htim3);
 155:component/lcd/lcd.c ****     while((*p<='~')&&(*p>=' '))
 859              		.loc 1 155 5 is_stmt 1 view .LVU224
 860              	.LVL83:
 861              	.L72:
 862              		.loc 1 155 10 view .LVU225
 863              		.loc 1 155 12 is_stmt 0 view .LVU226
 864 000c 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 865              		.loc 1 155 20 view .LVU227
 866 000e A2F12004 		sub	r4, r2, #32
 867 0012 E4B2     		uxtb	r4, r4
 868              		.loc 1 155 10 view .LVU228
 869 0014 5E2C     		cmp	r4, #94
 870 0016 0DD8     		bhi	.L75
 156:component/lcd/lcd.c ****     {
 157:component/lcd/lcd.c ****         //if(x>(128-(size/2))){x=0;y+=size;}
 158:component/lcd/lcd.c ****         //if(y>(64-size)){y=x=0;OLED_Clear();}
 159:component/lcd/lcd.c ****         LedMatrix_ShowChar(x,y,*p,size);
 871              		.loc 1 159 9 is_stmt 1 view .LVU229
 872 0018 3346     		mov	r3, r6
 873 001a 3946     		mov	r1, r7
 874 001c 4046     		mov	r0, r8
 875 001e FFF7FEFF 		bl	LedMatrix_ShowChar
 876              	.LVL84:
 160:component/lcd/lcd.c **** 		x+=font2size[size][1];
 877              		.loc 1 160 3 view .LVU230
 878              		.loc 1 160 21 is_stmt 0 view .LVU231
 879 0022 054C     		ldr	r4, .L76
 880 0024 04EB4604 		add	r4, r4, r6, lsl #1
 881 0028 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 882              		.loc 1 160 4 view .LVU232
 883 002a 4044     		add	r0, r0, r8
 884 002c 5FFA80F8 		uxtb	r8, r0
 885              	.LVL85:
 161:component/lcd/lcd.c ****         p++;
 886              		.loc 1 161 9 is_stmt 1 view .LVU233
 887              		.loc 1 161 10 is_stmt 0 view .LVU234
ARM GAS  /tmp/ccfCRRJc.s 			page 36


 888 0030 0135     		adds	r5, r5, #1
 889              	.LVL86:
 890              		.loc 1 161 10 view .LVU235
 891 0032 EBE7     		b	.L72
 892              	.L75:
 162:component/lcd/lcd.c ****     }
 163:component/lcd/lcd.c **** 	//HAL_TIM_Base_Stop_IT(&htim3);
 164:component/lcd/lcd.c **** }
 893              		.loc 1 164 1 view .LVU236
 894 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 895              	.LVL87:
 896              	.L77:
 897              		.loc 1 164 1 view .LVU237
 898              		.align	2
 899              	.L76:
 900 0038 00000000 		.word	.LANCHOR2
 901              		.cfi_endproc
 902              	.LFE405:
 904              		.section	.text.mypow,"ax",%progbits
 905              		.align	1
 906              		.global	mypow
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 910              		.fpu softvfp
 912              	mypow:
 913              	.LVL88:
 914              	.LFB406:
 165:component/lcd/lcd.c **** 
 166:component/lcd/lcd.c **** 
 167:component/lcd/lcd.c **** uint32_t mypow(uint8_t m,uint8_t n)
 168:component/lcd/lcd.c **** {
 915              		.loc 1 168 1 is_stmt 1 view -0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 920              		.loc 1 168 1 is_stmt 0 view .LVU239
 921 0000 0246     		mov	r2, r0
 169:component/lcd/lcd.c **** 	uint32_t result=1;	 
 922              		.loc 1 169 2 is_stmt 1 view .LVU240
 923              	.LVL89:
 170:component/lcd/lcd.c **** 	while(n--)result*=m;    
 924              		.loc 1 170 2 view .LVU241
 169:component/lcd/lcd.c **** 	uint32_t result=1;	 
 925              		.loc 1 169 11 is_stmt 0 view .LVU242
 926 0002 0120     		movs	r0, #1
 927              	.LVL90:
 928              	.L79:
 929              		.loc 1 170 7 is_stmt 1 discriminator 1 view .LVU243
 930              		.loc 1 170 9 is_stmt 0 discriminator 1 view .LVU244
 931 0004 4B1E     		subs	r3, r1, #1
 932 0006 DBB2     		uxtb	r3, r3
 933              	.LVL91:
 934              		.loc 1 170 7 discriminator 1 view .LVU245
 935 0008 19B1     		cbz	r1, .L81
 936              		.loc 1 170 12 is_stmt 1 discriminator 2 view .LVU246
ARM GAS  /tmp/ccfCRRJc.s 			page 37


 937              		.loc 1 170 18 is_stmt 0 discriminator 2 view .LVU247
 938 000a 02FB00F0 		mul	r0, r2, r0
 939              	.LVL92:
 940              		.loc 1 170 9 discriminator 2 view .LVU248
 941 000e 1946     		mov	r1, r3
 942 0010 F8E7     		b	.L79
 943              	.L81:
 171:component/lcd/lcd.c **** 	return result;
 172:component/lcd/lcd.c **** }	
 944              		.loc 1 172 1 view .LVU249
 945 0012 7047     		bx	lr
 946              		.cfi_endproc
 947              	.LFE406:
 949              		.section	.text.LedMatrix_ShowNum,"ax",%progbits
 950              		.align	1
 951              		.global	LedMatrix_ShowNum
 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 955              		.fpu softvfp
 957              	LedMatrix_ShowNum:
 958              	.LVL93:
 959              	.LFB407:
 173:component/lcd/lcd.c **** 
 174:component/lcd/lcd.c **** 
 175:component/lcd/lcd.c **** void LedMatrix_ShowNum(uint8_t x,uint8_t y,uint32_t num,uint8_t len,uint8_t size)
 176:component/lcd/lcd.c **** {         	
 960              		.loc 1 176 1 is_stmt 1 view -0
 961              		.cfi_startproc
 962              		@ args = 4, pretend = 0, frame = 0
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 964              		.loc 1 176 1 is_stmt 0 view .LVU251
 965 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 966              	.LCFI13:
 967              		.cfi_def_cfa_offset 40
 968              		.cfi_offset 3, -40
 969              		.cfi_offset 4, -36
 970              		.cfi_offset 5, -32
 971              		.cfi_offset 6, -28
 972              		.cfi_offset 7, -24
 973              		.cfi_offset 8, -20
 974              		.cfi_offset 9, -16
 975              		.cfi_offset 10, -12
 976              		.cfi_offset 11, -8
 977              		.cfi_offset 14, -4
 978 0004 8146     		mov	r9, r0
 979 0006 8846     		mov	r8, r1
 980 0008 1746     		mov	r7, r2
 981 000a 1D46     		mov	r5, r3
 982 000c 9DF828A0 		ldrb	r10, [sp, #40]	@ zero_extendqisi2
 177:component/lcd/lcd.c **** 	uint8_t t,temp;
 983              		.loc 1 177 2 is_stmt 1 view .LVU252
 178:component/lcd/lcd.c **** 	uint8_t enshow=0;
 984              		.loc 1 178 2 view .LVU253
 985              	.LVL94:
 179:component/lcd/lcd.c **** 	uint8_t offset=font2size[size][1];
 986              		.loc 1 179 2 view .LVU254
ARM GAS  /tmp/ccfCRRJc.s 			page 38


 987              		.loc 1 179 10 is_stmt 0 view .LVU255
 988 0010 1F4B     		ldr	r3, .L91
 989              	.LVL95:
 990              		.loc 1 179 10 view .LVU256
 991 0012 03EB4A03 		add	r3, r3, r10, lsl #1
 992 0016 93F801B0 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 993              	.LVL96:
 180:component/lcd/lcd.c **** 	
 181:component/lcd/lcd.c **** 	for(t=0;t<len;t++)
 994              		.loc 1 181 2 is_stmt 1 view .LVU257
 178:component/lcd/lcd.c **** 	uint8_t offset=font2size[size][1];
 995              		.loc 1 178 10 is_stmt 0 view .LVU258
 996 001a 0026     		movs	r6, #0
 997              		.loc 1 181 7 view .LVU259
 998 001c 3446     		mov	r4, r6
 999              		.loc 1 181 2 view .LVU260
 1000 001e 17E0     		b	.L83
 1001              	.LVL97:
 1002              	.L90:
 182:component/lcd/lcd.c **** 	{
 183:component/lcd/lcd.c **** 		temp=(num/mypow(10,len-t-1))%10;
 184:component/lcd/lcd.c **** 		if(enshow==0&&t<(len-1))
 185:component/lcd/lcd.c **** 		{
 186:component/lcd/lcd.c **** 			if(temp==0)
 187:component/lcd/lcd.c **** 			{
 188:component/lcd/lcd.c **** 				LedMatrix_ShowChar(x+(offset*t),y,'0',size);
 1003              		.loc 1 188 5 is_stmt 1 view .LVU261
 1004              		.loc 1 188 33 is_stmt 0 view .LVU262
 1005 0020 0BFB04F0 		mul	r0, fp, r4
 1006 0024 C0B2     		uxtb	r0, r0
 1007              		.loc 1 188 5 view .LVU263
 1008 0026 4844     		add	r0, r0, r9
 1009 0028 5346     		mov	r3, r10
 1010 002a 3022     		movs	r2, #48
 1011              	.LVL98:
 1012              		.loc 1 188 5 view .LVU264
 1013 002c 4146     		mov	r1, r8
 1014 002e C0B2     		uxtb	r0, r0
 1015 0030 FFF7FEFF 		bl	LedMatrix_ShowChar
 1016              	.LVL99:
 189:component/lcd/lcd.c **** 				continue;
 1017              		.loc 1 189 5 is_stmt 1 view .LVU265
 1018 0034 0AE0     		b	.L85
 1019              	.LVL100:
 1020              	.L84:
 190:component/lcd/lcd.c **** 			}else enshow=1; 
 191:component/lcd/lcd.c **** 		 	 
 192:component/lcd/lcd.c **** 		}
 193:component/lcd/lcd.c **** 	 	LedMatrix_ShowChar(x+(offset*t),y,temp+'0',size); 
 1021              		.loc 1 193 4 view .LVU266
 1022              		.loc 1 193 32 is_stmt 0 view .LVU267
 1023 0036 0BFB04F0 		mul	r0, fp, r4
 1024 003a C0B2     		uxtb	r0, r0
 1025              		.loc 1 193 4 view .LVU268
 1026 003c 3032     		adds	r2, r2, #48
 1027              	.LVL101:
 1028              		.loc 1 193 4 view .LVU269
ARM GAS  /tmp/ccfCRRJc.s 			page 39


 1029 003e 4844     		add	r0, r0, r9
 1030 0040 5346     		mov	r3, r10
 1031 0042 D2B2     		uxtb	r2, r2
 1032              	.LVL102:
 1033              		.loc 1 193 4 view .LVU270
 1034 0044 4146     		mov	r1, r8
 1035 0046 C0B2     		uxtb	r0, r0
 1036 0048 FFF7FEFF 		bl	LedMatrix_ShowChar
 1037              	.LVL103:
 1038              	.L85:
 181:component/lcd/lcd.c **** 	{
 1039              		.loc 1 181 16 is_stmt 1 discriminator 2 view .LVU271
 181:component/lcd/lcd.c **** 	{
 1040              		.loc 1 181 17 is_stmt 0 discriminator 2 view .LVU272
 1041 004c 0134     		adds	r4, r4, #1
 1042              	.LVL104:
 181:component/lcd/lcd.c **** 	{
 1043              		.loc 1 181 17 discriminator 2 view .LVU273
 1044 004e E4B2     		uxtb	r4, r4
 1045              	.LVL105:
 1046              	.L83:
 181:component/lcd/lcd.c **** 	{
 1047              		.loc 1 181 10 is_stmt 1 discriminator 1 view .LVU274
 181:component/lcd/lcd.c **** 	{
 1048              		.loc 1 181 2 is_stmt 0 discriminator 1 view .LVU275
 1049 0050 AC42     		cmp	r4, r5
 1050 0052 1AD2     		bcs	.L89
 183:component/lcd/lcd.c **** 		if(enshow==0&&t<(len-1))
 1051              		.loc 1 183 3 is_stmt 1 view .LVU276
 183:component/lcd/lcd.c **** 		if(enshow==0&&t<(len-1))
 1052              		.loc 1 183 25 is_stmt 0 view .LVU277
 1053 0054 291B     		subs	r1, r5, r4
 1054 0056 C9B2     		uxtb	r1, r1
 183:component/lcd/lcd.c **** 		if(enshow==0&&t<(len-1))
 1055              		.loc 1 183 13 view .LVU278
 1056 0058 0139     		subs	r1, r1, #1
 1057 005a C9B2     		uxtb	r1, r1
 1058 005c 0A20     		movs	r0, #10
 1059 005e FFF7FEFF 		bl	mypow
 1060              	.LVL106:
 183:component/lcd/lcd.c **** 		if(enshow==0&&t<(len-1))
 1061              		.loc 1 183 12 view .LVU279
 1062 0062 B7FBF0F0 		udiv	r0, r7, r0
 183:component/lcd/lcd.c **** 		if(enshow==0&&t<(len-1))
 1063              		.loc 1 183 31 view .LVU280
 1064 0066 0B4A     		ldr	r2, .L91+4
 1065 0068 A2FB0032 		umull	r3, r2, r2, r0
 1066 006c D208     		lsrs	r2, r2, #3
 1067 006e 02EB8202 		add	r2, r2, r2, lsl #2
 1068 0072 A0EB4202 		sub	r2, r0, r2, lsl #1
 183:component/lcd/lcd.c **** 		if(enshow==0&&t<(len-1))
 1069              		.loc 1 183 7 view .LVU281
 1070 0076 D2B2     		uxtb	r2, r2
 1071              	.LVL107:
 184:component/lcd/lcd.c **** 		{
 1072              		.loc 1 184 3 is_stmt 1 view .LVU282
 184:component/lcd/lcd.c **** 		{
ARM GAS  /tmp/ccfCRRJc.s 			page 40


 1073              		.loc 1 184 5 is_stmt 0 view .LVU283
 1074 0078 002E     		cmp	r6, #0
 1075 007a DCD1     		bne	.L84
 184:component/lcd/lcd.c **** 		{
 1076              		.loc 1 184 23 discriminator 1 view .LVU284
 1077 007c 6B1E     		subs	r3, r5, #1
 184:component/lcd/lcd.c **** 		{
 1078              		.loc 1 184 15 discriminator 1 view .LVU285
 1079 007e 9C42     		cmp	r4, r3
 1080 0080 D9DA     		bge	.L84
 186:component/lcd/lcd.c **** 			{
 1081              		.loc 1 186 4 is_stmt 1 view .LVU286
 186:component/lcd/lcd.c **** 			{
 1082              		.loc 1 186 6 is_stmt 0 view .LVU287
 1083 0082 002A     		cmp	r2, #0
 1084 0084 CCD0     		beq	.L90
 190:component/lcd/lcd.c **** 		 	 
 1085              		.loc 1 190 16 view .LVU288
 1086 0086 0126     		movs	r6, #1
 1087              	.LVL108:
 190:component/lcd/lcd.c **** 		 	 
 1088              		.loc 1 190 16 view .LVU289
 1089 0088 D5E7     		b	.L84
 1090              	.LVL109:
 1091              	.L89:
 194:component/lcd/lcd.c **** 		//x+=offset;
 195:component/lcd/lcd.c **** 	}
 196:component/lcd/lcd.c **** }
 1092              		.loc 1 196 1 view .LVU290
 1093 008a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1094              	.LVL110:
 1095              	.L92:
 1096              		.loc 1 196 1 view .LVU291
 1097 008e 00BF     		.align	2
 1098              	.L91:
 1099 0090 00000000 		.word	.LANCHOR2
 1100 0094 CDCCCCCC 		.word	-858993459
 1101              		.cfi_endproc
 1102              	.LFE407:
 1104              		.section	.text.LedMatrix_RollStart,"ax",%progbits
 1105              		.align	1
 1106              		.global	LedMatrix_RollStart
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1110              		.fpu softvfp
 1112              	LedMatrix_RollStart:
 1113              	.LVL111:
 1114              	.LFB408:
 197:component/lcd/lcd.c **** 
 198:component/lcd/lcd.c **** 
 199:component/lcd/lcd.c **** 
 200:component/lcd/lcd.c **** 
 201:component/lcd/lcd.c **** 
 202:component/lcd/lcd.c **** uint8_t LedMatrix_RollStart(uint8_t x,uint8_t y,uint8_t width,char *p,uint8_t size)
 203:component/lcd/lcd.c **** {
 1115              		.loc 1 203 1 is_stmt 1 view -0
ARM GAS  /tmp/ccfCRRJc.s 			page 41


 1116              		.cfi_startproc
 1117              		@ args = 4, pretend = 0, frame = 0
 1118              		@ frame_needed = 0, uses_anonymous_args = 0
 1119              		@ link register save eliminated.
 1120              		.loc 1 203 1 is_stmt 0 view .LVU293
 1121 0000 30B4     		push	{r4, r5}
 1122              	.LCFI14:
 1123              		.cfi_def_cfa_offset 8
 1124              		.cfi_offset 4, -8
 1125              		.cfi_offset 5, -4
 1126 0002 9DF80850 		ldrb	r5, [sp, #8]	@ zero_extendqisi2
 204:component/lcd/lcd.c **** 	uint8_t i=0;
 1127              		.loc 1 204 2 is_stmt 1 view .LVU294
 1128              	.LVL112:
 205:component/lcd/lcd.c **** 	
 206:component/lcd/lcd.c **** 	rollctrl.width = width;
 1129              		.loc 1 206 2 view .LVU295
 1130              		.loc 1 206 17 is_stmt 0 view .LVU296
 1131 0006 144C     		ldr	r4, .L100
 1132 0008 84F8CC20 		strb	r2, [r4, #204]
 207:component/lcd/lcd.c **** 	rollctrl.size = size;
 1133              		.loc 1 207 2 is_stmt 1 view .LVU297
 1134              		.loc 1 207 16 is_stmt 0 view .LVU298
 1135 000c 84F8C850 		strb	r5, [r4, #200]
 208:component/lcd/lcd.c **** 	rollctrl.x = x;
 1136              		.loc 1 208 2 is_stmt 1 view .LVU299
 1137              		.loc 1 208 13 is_stmt 0 view .LVU300
 1138 0010 84F8D000 		strb	r0, [r4, #208]
 209:component/lcd/lcd.c **** 	rollctrl.y = y;
 1139              		.loc 1 209 2 is_stmt 1 view .LVU301
 1140              		.loc 1 209 13 is_stmt 0 view .LVU302
 1141 0014 84F8D110 		strb	r1, [r4, #209]
 210:component/lcd/lcd.c **** 	while((*p<='~')&&(*p>=' '))
 1142              		.loc 1 210 2 is_stmt 1 view .LVU303
 204:component/lcd/lcd.c **** 	
 1143              		.loc 1 204 10 is_stmt 0 view .LVU304
 1144 0018 0021     		movs	r1, #0
 1145              	.LVL113:
 1146              	.L94:
 1147              		.loc 1 210 7 is_stmt 1 view .LVU305
 1148              		.loc 1 210 9 is_stmt 0 view .LVU306
 1149 001a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1150              		.loc 1 210 17 view .LVU307
 1151 001c A0F12002 		sub	r2, r0, #32
 1152 0020 D2B2     		uxtb	r2, r2
 1153              		.loc 1 210 7 view .LVU308
 1154 0022 5E2A     		cmp	r2, #94
 1155 0024 08D8     		bhi	.L99
 211:component/lcd/lcd.c **** 	{
 212:component/lcd/lcd.c **** 		rollctrl.string[i++] = *p;
 1156              		.loc 1 212 3 is_stmt 1 view .LVU309
 1157              		.loc 1 212 20 is_stmt 0 view .LVU310
 1158 0026 4A1C     		adds	r2, r1, #1
 1159 0028 D2B2     		uxtb	r2, r2
 1160              	.LVL114:
 1161              		.loc 1 212 24 view .LVU311
 1162 002a 0B4C     		ldr	r4, .L100
ARM GAS  /tmp/ccfCRRJc.s 			page 42


 1163              		.loc 1 212 24 view .LVU312
 1164 002c 6054     		strb	r0, [r4, r1]
 213:component/lcd/lcd.c **** 		p++;
 1165              		.loc 1 213 3 is_stmt 1 view .LVU313
 1166              		.loc 1 213 4 is_stmt 0 view .LVU314
 1167 002e 0133     		adds	r3, r3, #1
 1168              	.LVL115:
 214:component/lcd/lcd.c **** 		if(i>ROLL_STRING_MAX) return 1;
 1169              		.loc 1 214 3 is_stmt 1 view .LVU315
 1170              		.loc 1 214 5 is_stmt 0 view .LVU316
 1171 0030 C82A     		cmp	r2, #200
 1172 0032 0FD8     		bhi	.L97
 212:component/lcd/lcd.c **** 		p++;
 1173              		.loc 1 212 20 view .LVU317
 1174 0034 1146     		mov	r1, r2
 1175 0036 F0E7     		b	.L94
 1176              	.LVL116:
 1177              	.L99:
 215:component/lcd/lcd.c **** 	}
 216:component/lcd/lcd.c **** 	rollctrl.length = i*font2size[rollctrl.size][1];
 1178              		.loc 1 216 2 is_stmt 1 view .LVU318
 1179              		.loc 1 216 46 is_stmt 0 view .LVU319
 1180 0038 084B     		ldr	r3, .L100+4
 1181              	.LVL117:
 1182              		.loc 1 216 46 view .LVU320
 1183 003a 03EB4503 		add	r3, r3, r5, lsl #1
 1184 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1185              		.loc 1 216 21 view .LVU321
 1186 0040 01FB03F1 		mul	r1, r1, r3
 1187              	.LVL118:
 1188              		.loc 1 216 18 view .LVU322
 1189 0044 044B     		ldr	r3, .L100
 1190 0046 A3F8CA10 		strh	r1, [r3, #202]	@ movhi
 217:component/lcd/lcd.c **** 	rollctrl.offset = 0;
 1191              		.loc 1 217 2 is_stmt 1 view .LVU323
 1192              		.loc 1 217 18 is_stmt 0 view .LVU324
 1193 004a 0020     		movs	r0, #0
 1194 004c A3F8CE00 		strh	r0, [r3, #206]	@ movhi
 218:component/lcd/lcd.c **** 	return 0;
 1195              		.loc 1 218 2 is_stmt 1 view .LVU325
 1196              	.L95:
 219:component/lcd/lcd.c **** }
 1197              		.loc 1 219 1 is_stmt 0 view .LVU326
 1198 0050 30BC     		pop	{r4, r5}
 1199              	.LCFI15:
 1200              		.cfi_remember_state
 1201              		.cfi_restore 5
 1202              		.cfi_restore 4
 1203              		.cfi_def_cfa_offset 0
 1204              	.LVL119:
 1205              		.loc 1 219 1 view .LVU327
 1206 0052 7047     		bx	lr
 1207              	.LVL120:
 1208              	.L97:
 1209              	.LCFI16:
 1210              		.cfi_restore_state
 214:component/lcd/lcd.c **** 	}
ARM GAS  /tmp/ccfCRRJc.s 			page 43


 1211              		.loc 1 214 32 view .LVU328
 1212 0054 0120     		movs	r0, #1
 1213 0056 FBE7     		b	.L95
 1214              	.L101:
 1215              		.align	2
 1216              	.L100:
 1217 0058 00000000 		.word	rollctrl
 1218 005c 00000000 		.word	.LANCHOR2
 1219              		.cfi_endproc
 1220              	.LFE408:
 1222              		.section	.text.LedMatrix_RollStringExce,"ax",%progbits
 1223              		.align	1
 1224              		.global	LedMatrix_RollStringExce
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1228              		.fpu softvfp
 1230              	LedMatrix_RollStringExce:
 1231              	.LFB409:
 220:component/lcd/lcd.c **** 
 221:component/lcd/lcd.c **** 
 222:component/lcd/lcd.c **** 
 223:component/lcd/lcd.c **** void LedMatrix_RollStringExce(void)
 224:component/lcd/lcd.c **** {
 1232              		.loc 1 224 1 is_stmt 1 view -0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 24
 1235              		@ frame_needed = 0, uses_anonymous_args = 0
 1236 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1237              	.LCFI17:
 1238              		.cfi_def_cfa_offset 36
 1239              		.cfi_offset 4, -36
 1240              		.cfi_offset 5, -32
 1241              		.cfi_offset 6, -28
 1242              		.cfi_offset 7, -24
 1243              		.cfi_offset 8, -20
 1244              		.cfi_offset 9, -16
 1245              		.cfi_offset 10, -12
 1246              		.cfi_offset 11, -8
 1247              		.cfi_offset 14, -4
 1248 0004 87B0     		sub	sp, sp, #28
 1249              	.LCFI18:
 1250              		.cfi_def_cfa_offset 64
 225:component/lcd/lcd.c **** 	uint8_t x=rollctrl.x;
 1251              		.loc 1 225 2 view .LVU330
 1252              		.loc 1 225 10 is_stmt 0 view .LVU331
 1253 0006 9D48     		ldr	r0, .L139
 1254 0008 90F8D070 		ldrb	r7, [r0, #208]	@ zero_extendqisi2
 1255              	.LVL121:
 226:component/lcd/lcd.c **** 	uint8_t i;
 1256              		.loc 1 226 2 is_stmt 1 view .LVU332
 227:component/lcd/lcd.c **** 	uint8_t width = font2size[rollctrl.size][1];
 1257              		.loc 1 227 2 view .LVU333
 1258              		.loc 1 227 36 is_stmt 0 view .LVU334
 1259 000c 90F8C820 		ldrb	r2, [r0, #200]	@ zero_extendqisi2
 1260              		.loc 1 227 10 view .LVU335
 1261 0010 9B4B     		ldr	r3, .L139+4
ARM GAS  /tmp/ccfCRRJc.s 			page 44


 1262 0012 03EB4201 		add	r1, r3, r2, lsl #1
 1263 0016 91F801B0 		ldrb	fp, [r1, #1]	@ zero_extendqisi2
 1264              	.LVL122:
 228:component/lcd/lcd.c **** 	uint8_t csize=(font2size[rollctrl.size][0]/8+((font2size[rollctrl.size][0]%8)?1:0))*width;
 1265              		.loc 1 228 2 is_stmt 1 view .LVU336
 1266              		.loc 1 228 41 is_stmt 0 view .LVU337
 1267 001a 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 1268              		.loc 1 228 81 view .LVU338
 1269 001e 13F00702 		ands	r2, r3, #7
 1270 0022 18BF     		it	ne
 1271 0024 0122     		movne	r2, #1
 1272              		.loc 1 228 10 view .LVU339
 1273 0026 02EBD302 		add	r2, r2, r3, lsr #3
 1274 002a 0BFB02F3 		mul	r3, fp, r2
 1275 002e DEB2     		uxtb	r6, r3
 1276              	.LVL123:
 229:component/lcd/lcd.c **** 	uint8_t chr = rollctrl.offset/(uint16_t)width;
 1277              		.loc 1 229 2 is_stmt 1 view .LVU340
 1278              		.loc 1 229 24 is_stmt 0 view .LVU341
 1279 0030 B0F8CE10 		ldrh	r1, [r0, #206]
 1280              		.loc 1 229 31 view .LVU342
 1281 0034 91FBFBF3 		sdiv	r3, r1, fp
 1282              		.loc 1 229 10 view .LVU343
 1283 0038 5FFA83FA 		uxtb	r10, r3
 1284              	.LVL124:
 230:component/lcd/lcd.c **** 	uint8_t s1 = rollctrl.offset%(uint16_t)width;
 1285              		.loc 1 230 2 is_stmt 1 view .LVU344
 1286              		.loc 1 230 30 is_stmt 0 view .LVU345
 1287 003c 0BFB1313 		mls	r3, fp, r3, r1
 1288              	.LVL125:
 231:component/lcd/lcd.c **** 	uint8_t s2;
 1289              		.loc 1 231 2 is_stmt 1 view .LVU346
 232:component/lcd/lcd.c **** 	uint8_t s3;
 1290              		.loc 1 232 2 view .LVU347
 233:component/lcd/lcd.c **** 	
 234:component/lcd/lcd.c **** 	uint8_t diachar = rollctrl.string[chr]-' ';
 1291              		.loc 1 234 2 view .LVU348
 1292              		.loc 1 234 35 is_stmt 0 view .LVU349
 1293 0040 10F80A10 		ldrb	r1, [r0, r10]	@ zero_extendqisi2
 1294              		.loc 1 234 10 view .LVU350
 1295 0044 2039     		subs	r1, r1, #32
 1296 0046 C9B2     		uxtb	r1, r1
 1297 0048 0391     		str	r1, [sp, #12]
 1298              	.LVL126:
 235:component/lcd/lcd.c **** 	uint8_t y=rollctrl.y;
 1299              		.loc 1 235 2 is_stmt 1 view .LVU351
 1300              		.loc 1 235 10 is_stmt 0 view .LVU352
 1301 004a 90F8D180 		ldrb	r8, [r0, #209]	@ zero_extendqisi2
 1302              	.LVL127:
 236:component/lcd/lcd.c **** 	uint8_t y0=y;
 1303              		.loc 1 236 2 is_stmt 1 view .LVU353
 237:component/lcd/lcd.c **** 	
 238:component/lcd/lcd.c **** 	if(s1!=0)
 1304              		.loc 1 238 2 view .LVU354
 1305              		.loc 1 238 4 is_stmt 0 view .LVU355
 1306 004e 13F0FF01 		ands	r1, r3, #255
 1307 0052 74D0     		beq	.L103
ARM GAS  /tmp/ccfCRRJc.s 			page 45


 239:component/lcd/lcd.c **** 	{
 240:component/lcd/lcd.c **** 		chr++;
 1308              		.loc 1 240 3 is_stmt 1 view .LVU356
 1309              		.loc 1 240 6 is_stmt 0 view .LVU357
 1310 0054 0AF1010A 		add	r10, r10, #1
 1311              	.LVL128:
 1312              		.loc 1 240 6 view .LVU358
 1313 0058 5FFA8AFA 		uxtb	r10, r10
 1314              	.LVL129:
 241:component/lcd/lcd.c **** 		s2 = (rollctrl.width-width+s1)/(uint16_t)width;
 1315              		.loc 1 241 3 is_stmt 1 view .LVU359
 1316              		.loc 1 241 17 is_stmt 0 view .LVU360
 1317 005c 90F8CC40 		ldrb	r4, [r0, #204]	@ zero_extendqisi2
 1318              		.loc 1 241 23 view .LVU361
 1319 0060 A4EB0B05 		sub	r5, r4, fp
 1320              		.loc 1 241 29 view .LVU362
 1321 0064 D8B2     		uxtb	r0, r3
 1322 0066 2844     		add	r0, r0, r5
 1323              		.loc 1 241 33 view .LVU363
 1324 0068 90FBFBF0 		sdiv	r0, r0, fp
 1325              		.loc 1 241 6 view .LVU364
 1326 006c C0B2     		uxtb	r0, r0
 1327 006e 0190     		str	r0, [sp, #4]
 1328              	.LVL130:
 242:component/lcd/lcd.c **** 		s3 = rollctrl.width-width+s1-(s2*width);
 1329              		.loc 1 242 3 is_stmt 1 view .LVU365
 1330              		.loc 1 242 22 is_stmt 0 view .LVU366
 1331 0070 EBB2     		uxtb	r3, r5
 1332              	.LVL131:
 1333              		.loc 1 242 28 view .LVU367
 1334 0072 0B44     		add	r3, r3, r1
 1335 0074 DBB2     		uxtb	r3, r3
 1336              		.loc 1 242 35 view .LVU368
 1337 0076 00FB0BF0 		mul	r0, r0, fp
 1338              	.LVL132:
 1339              		.loc 1 242 35 view .LVU369
 1340 007a C0B2     		uxtb	r0, r0
 1341              		.loc 1 242 6 view .LVU370
 1342 007c 1B1A     		subs	r3, r3, r0
 1343 007e DBB2     		uxtb	r3, r3
 1344 0080 0293     		str	r3, [sp, #8]
 1345              	.LVL133:
 243:component/lcd/lcd.c **** 		s1 = (font2size[rollctrl.size][0]/8+((font2size[rollctrl.size][0]%8)?1:0))*s1;
 1346              		.loc 1 243 3 is_stmt 1 view .LVU371
 1347              		.loc 1 243 6 is_stmt 0 view .LVU372
 1348 0082 01FB02F2 		mul	r2, r1, r2
 1349 0086 5FFA82F9 		uxtb	r9, r2
 1350              	.LVL134:
 244:component/lcd/lcd.c **** 		for(i=s1;i<csize;i++)
 1351              		.loc 1 244 3 is_stmt 1 view .LVU373
 235:component/lcd/lcd.c **** 	uint8_t y0=y;
 1352              		.loc 1 235 10 is_stmt 0 view .LVU374
 1353 008a 4446     		mov	r4, r8
 1354 008c CDF810A0 		str	r10, [sp, #16]
 1355 0090 CDF814B0 		str	fp, [sp, #20]
 1356 0094 B346     		mov	fp, r6
 1357              	.LVL135:
ARM GAS  /tmp/ccfCRRJc.s 			page 46


 235:component/lcd/lcd.c **** 	uint8_t y0=y;
 1358              		.loc 1 235 10 view .LVU375
 1359 0096 DDF80CA0 		ldr	r10, [sp, #12]
 1360              	.LVL136:
 1361              		.loc 1 244 3 view .LVU376
 1362 009a 3BE0     		b	.L104
 1363              	.LVL137:
 1364              	.L105:
 1365              	.LBB38:
 245:component/lcd/lcd.c **** 		{
 246:component/lcd/lcd.c **** 			uint8_t temp,t1;
 247:component/lcd/lcd.c **** 			if(rollctrl.size==0)temp=asc2_0806[diachar][i];
 248:component/lcd/lcd.c **** 			else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1366              		.loc 1 248 9 is_stmt 1 view .LVU377
 1367              		.loc 1 248 11 is_stmt 0 view .LVU378
 1368 009c 012B     		cmp	r3, #1
 1369 009e 08D0     		beq	.L131
 249:component/lcd/lcd.c **** 			else if(rollctrl.size==2)temp=asc2_1608[diachar][i];
 1370              		.loc 1 249 9 is_stmt 1 view .LVU379
 1371              		.loc 1 249 11 is_stmt 0 view .LVU380
 1372 00a0 022B     		cmp	r3, #2
 1373 00a2 40F0E780 		bne	.L102
 1374              		.loc 1 249 29 is_stmt 1 discriminator 1 view .LVU381
 1375              		.loc 1 249 33 is_stmt 0 discriminator 1 view .LVU382
 1376 00a6 774B     		ldr	r3, .L139+8
 1377 00a8 03EB0A13 		add	r3, r3, r10, lsl #4
 1378 00ac 13F80950 		ldrb	r5, [r3, r9]	@ zero_extendqisi2
 1379              	.LVL138:
 1380              		.loc 1 249 33 discriminator 1 view .LVU383
 1381 00b0 3EE0     		b	.L106
 1382              	.LVL139:
 1383              	.L131:
 248:component/lcd/lcd.c **** 			else if(rollctrl.size==2)temp=asc2_1608[diachar][i];
 1384              		.loc 1 248 29 is_stmt 1 discriminator 1 view .LVU384
 248:component/lcd/lcd.c **** 			else if(rollctrl.size==2)temp=asc2_1608[diachar][i];
 1385              		.loc 1 248 33 is_stmt 0 discriminator 1 view .LVU385
 1386 00b2 0AEB4A03 		add	r3, r10, r10, lsl #1
 1387 00b6 9A00     		lsls	r2, r3, #2
 1388 00b8 734B     		ldr	r3, .L139+12
 1389 00ba 1344     		add	r3, r3, r2
 1390 00bc 13F80950 		ldrb	r5, [r3, r9]	@ zero_extendqisi2
 1391              	.LVL140:
 248:component/lcd/lcd.c **** 			else if(rollctrl.size==2)temp=asc2_1608[diachar][i];
 1392              		.loc 1 248 33 discriminator 1 view .LVU386
 1393 00c0 36E0     		b	.L106
 1394              	.LVL141:
 1395              	.L133:
 250:component/lcd/lcd.c **** 			else return;
 251:component/lcd/lcd.c **** 			for(t1=0;t1<8;t1++)
 252:component/lcd/lcd.c **** 			{
 253:component/lcd/lcd.c **** 				if(temp&0x80)LedMatrix_DrawPoint(x,y,POINT_COLOR);
 1396              		.loc 1 253 18 is_stmt 1 discriminator 1 view .LVU387
 1397 00c2 724B     		ldr	r3, .L139+16
 1398 00c4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1399 00c6 2146     		mov	r1, r4
 1400 00c8 3846     		mov	r0, r7
 1401 00ca FFF7FEFF 		bl	LedMatrix_DrawPoint
ARM GAS  /tmp/ccfCRRJc.s 			page 47


 1402              	.LVL142:
 1403              	.L111:
 254:component/lcd/lcd.c **** 				else LedMatrix_DrawPoint(x,y,BACK_COLOR);
 255:component/lcd/lcd.c **** 				temp<<=1;
 1404              		.loc 1 255 5 view .LVU388
 1405              		.loc 1 255 9 is_stmt 0 view .LVU389
 1406 00ce 6D00     		lsls	r5, r5, #1
 1407              	.LVL143:
 1408              		.loc 1 255 9 view .LVU390
 1409 00d0 EDB2     		uxtb	r5, r5
 1410              	.LVL144:
 256:component/lcd/lcd.c **** 				y++;
 1411              		.loc 1 256 5 is_stmt 1 view .LVU391
 1412              		.loc 1 256 6 is_stmt 0 view .LVU392
 1413 00d2 0134     		adds	r4, r4, #1
 1414              	.LVL145:
 1415              		.loc 1 256 6 view .LVU393
 1416 00d4 E4B2     		uxtb	r4, r4
 1417              	.LVL146:
 257:component/lcd/lcd.c **** 				if((y-y0)==font2size[rollctrl.size][0])
 1418              		.loc 1 257 5 is_stmt 1 view .LVU394
 1419              		.loc 1 257 10 is_stmt 0 view .LVU395
 1420 00d6 A4EB0802 		sub	r2, r4, r8
 1421              		.loc 1 257 34 view .LVU396
 1422 00da 684B     		ldr	r3, .L139
 1423 00dc 93F8C810 		ldrb	r1, [r3, #200]	@ zero_extendqisi2
 1424              		.loc 1 257 40 view .LVU397
 1425 00e0 674B     		ldr	r3, .L139+4
 1426 00e2 13F81130 		ldrb	r3, [r3, r1, lsl #1]	@ zero_extendqisi2
 1427              		.loc 1 257 7 view .LVU398
 1428 00e6 9A42     		cmp	r2, r3
 1429 00e8 0DD0     		beq	.L132
 251:component/lcd/lcd.c **** 			{
 1430              		.loc 1 251 18 is_stmt 1 discriminator 2 view .LVU399
 251:component/lcd/lcd.c **** 			{
 1431              		.loc 1 251 20 is_stmt 0 discriminator 2 view .LVU400
 1432 00ea 0136     		adds	r6, r6, #1
 1433              	.LVL147:
 251:component/lcd/lcd.c **** 			{
 1434              		.loc 1 251 20 discriminator 2 view .LVU401
 1435 00ec F6B2     		uxtb	r6, r6
 1436              	.LVL148:
 1437              	.L109:
 251:component/lcd/lcd.c **** 			{
 1438              		.loc 1 251 13 is_stmt 1 discriminator 1 view .LVU402
 251:component/lcd/lcd.c **** 			{
 1439              		.loc 1 251 4 is_stmt 0 discriminator 1 view .LVU403
 1440 00ee 072E     		cmp	r6, #7
 1441 00f0 0CD8     		bhi	.L113
 253:component/lcd/lcd.c **** 				else LedMatrix_DrawPoint(x,y,BACK_COLOR);
 1442              		.loc 1 253 5 is_stmt 1 view .LVU404
 253:component/lcd/lcd.c **** 				else LedMatrix_DrawPoint(x,y,BACK_COLOR);
 1443              		.loc 1 253 7 is_stmt 0 view .LVU405
 1444 00f2 15F0800F 		tst	r5, #128
 1445 00f6 E4D1     		bne	.L133
 254:component/lcd/lcd.c **** 				temp<<=1;
 1446              		.loc 1 254 10 is_stmt 1 view .LVU406
ARM GAS  /tmp/ccfCRRJc.s 			page 48


 1447 00f8 654B     		ldr	r3, .L139+20
 1448 00fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1449 00fc 2146     		mov	r1, r4
 1450 00fe 3846     		mov	r0, r7
 1451 0100 FFF7FEFF 		bl	LedMatrix_DrawPoint
 1452              	.LVL149:
 1453 0104 E3E7     		b	.L111
 1454              	.L132:
 258:component/lcd/lcd.c **** 				{
 259:component/lcd/lcd.c **** 					y=y0;
 1455              		.loc 1 259 6 view .LVU407
 1456              	.LVL150:
 260:component/lcd/lcd.c **** 					x++;
 1457              		.loc 1 260 6 view .LVU408
 1458              		.loc 1 260 7 is_stmt 0 view .LVU409
 1459 0106 0137     		adds	r7, r7, #1
 1460              	.LVL151:
 1461              		.loc 1 260 7 view .LVU410
 1462 0108 FFB2     		uxtb	r7, r7
 1463              	.LVL152:
 261:component/lcd/lcd.c **** 					break;
 1464              		.loc 1 261 6 is_stmt 1 view .LVU411
 259:component/lcd/lcd.c **** 					x++;
 1465              		.loc 1 259 7 is_stmt 0 view .LVU412
 1466 010a 4446     		mov	r4, r8
 1467              	.LVL153:
 1468              	.L113:
 259:component/lcd/lcd.c **** 					x++;
 1469              		.loc 1 259 7 view .LVU413
 1470              	.LBE38:
 244:component/lcd/lcd.c **** 		{
 1471              		.loc 1 244 20 is_stmt 1 discriminator 2 view .LVU414
 244:component/lcd/lcd.c **** 		{
 1472              		.loc 1 244 21 is_stmt 0 discriminator 2 view .LVU415
 1473 010c 09F10109 		add	r9, r9, #1
 1474              	.LVL154:
 244:component/lcd/lcd.c **** 		{
 1475              		.loc 1 244 21 discriminator 2 view .LVU416
 1476 0110 5FFA89F9 		uxtb	r9, r9
 1477              	.LVL155:
 1478              	.L104:
 244:component/lcd/lcd.c **** 		{
 1479              		.loc 1 244 12 is_stmt 1 discriminator 1 view .LVU417
 244:component/lcd/lcd.c **** 		{
 1480              		.loc 1 244 3 is_stmt 0 discriminator 1 view .LVU418
 1481 0114 D945     		cmp	r9, fp
 1482 0116 0DD2     		bcs	.L134
 1483              	.LBB39:
 246:component/lcd/lcd.c **** 			if(rollctrl.size==0)temp=asc2_0806[diachar][i];
 1484              		.loc 1 246 4 is_stmt 1 view .LVU419
 247:component/lcd/lcd.c **** 			else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1485              		.loc 1 247 4 view .LVU420
 247:component/lcd/lcd.c **** 			else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1486              		.loc 1 247 15 is_stmt 0 view .LVU421
 1487 0118 584B     		ldr	r3, .L139
 1488 011a 93F8C830 		ldrb	r3, [r3, #200]	@ zero_extendqisi2
 247:component/lcd/lcd.c **** 			else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
ARM GAS  /tmp/ccfCRRJc.s 			page 49


 1489              		.loc 1 247 6 view .LVU422
 1490 011e 002B     		cmp	r3, #0
 1491 0120 BCD1     		bne	.L105
 247:component/lcd/lcd.c **** 			else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1492              		.loc 1 247 24 is_stmt 1 discriminator 1 view .LVU423
 247:component/lcd/lcd.c **** 			else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1493              		.loc 1 247 28 is_stmt 0 discriminator 1 view .LVU424
 1494 0122 0AEB4A03 		add	r3, r10, r10, lsl #1
 1495 0126 5A00     		lsls	r2, r3, #1
 1496 0128 5A4B     		ldr	r3, .L139+24
 1497 012a 1344     		add	r3, r3, r2
 1498 012c 13F80950 		ldrb	r5, [r3, r9]	@ zero_extendqisi2
 1499              	.LVL156:
 1500              	.L106:
 247:component/lcd/lcd.c **** 			else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1501              		.loc 1 247 28 discriminator 1 view .LVU425
 1502              	.LBE39:
 224:component/lcd/lcd.c **** 	uint8_t x=rollctrl.x;
 1503              		.loc 1 224 1 discriminator 1 view .LVU426
 1504 0130 0026     		movs	r6, #0
 1505 0132 DCE7     		b	.L109
 1506              	.LVL157:
 1507              	.L134:
 224:component/lcd/lcd.c **** 	uint8_t x=rollctrl.x;
 1508              		.loc 1 224 1 discriminator 1 view .LVU427
 1509 0134 DDF810A0 		ldr	r10, [sp, #16]
 1510 0138 DDF814B0 		ldr	fp, [sp, #20]
 1511              	.LVL158:
 224:component/lcd/lcd.c **** 	uint8_t x=rollctrl.x;
 1512              		.loc 1 224 1 discriminator 1 view .LVU428
 1513 013c 0CE0     		b	.L116
 1514              	.LVL159:
 1515              	.L103:
 262:component/lcd/lcd.c **** 				}
 263:component/lcd/lcd.c **** 			}
 264:component/lcd/lcd.c **** 		}
 265:component/lcd/lcd.c **** 	}
 266:component/lcd/lcd.c **** 	else
 267:component/lcd/lcd.c **** 	{
 268:component/lcd/lcd.c **** 		s2 = (rollctrl.width)/(uint16_t)width;
 1516              		.loc 1 268 3 is_stmt 1 view .LVU429
 1517              		.loc 1 268 17 is_stmt 0 view .LVU430
 1518 013e 4F4B     		ldr	r3, .L139
 1519              	.LVL160:
 1520              		.loc 1 268 17 view .LVU431
 1521 0140 93F8CC30 		ldrb	r3, [r3, #204]	@ zero_extendqisi2
 1522              		.loc 1 268 6 view .LVU432
 1523 0144 B3FBFBF2 		udiv	r2, r3, fp
 1524 0148 0192     		str	r2, [sp, #4]
 1525              	.LVL161:
 269:component/lcd/lcd.c **** 		s3 = rollctrl.width-(s2*width);
 1526              		.loc 1 269 3 is_stmt 1 view .LVU433
 1527              		.loc 1 269 26 is_stmt 0 view .LVU434
 1528 014a 02FB0BF2 		mul	r2, r2, fp
 1529              	.LVL162:
 1530              		.loc 1 269 26 view .LVU435
 1531 014e D2B2     		uxtb	r2, r2
ARM GAS  /tmp/ccfCRRJc.s 			page 50


 1532              		.loc 1 269 6 view .LVU436
 1533 0150 9B1A     		subs	r3, r3, r2
 1534 0152 DBB2     		uxtb	r3, r3
 1535 0154 0293     		str	r3, [sp, #8]
 1536              	.LVL163:
 235:component/lcd/lcd.c **** 	uint8_t y0=y;
 1537              		.loc 1 235 10 view .LVU437
 1538 0156 4446     		mov	r4, r8
 1539              	.LVL164:
 1540              	.L116:
 270:component/lcd/lcd.c **** 	}
 271:component/lcd/lcd.c **** 	for(i=0;i<s2;i++)
 1541              		.loc 1 271 2 is_stmt 1 view .LVU438
 1542              		.loc 1 271 7 is_stmt 0 view .LVU439
 1543 0158 0025     		movs	r5, #0
 1544 015a 019E     		ldr	r6, [sp, #4]
 1545              		.loc 1 271 2 view .LVU440
 1546 015c 11E0     		b	.L117
 1547              	.LVL165:
 1548              	.L118:
 272:component/lcd/lcd.c **** 	{
 273:component/lcd/lcd.c **** 		LedMatrix_ShowChar(x, rollctrl.y, *(rollctrl.string+chr), rollctrl.size);
 1549              		.loc 1 273 3 is_stmt 1 discriminator 3 view .LVU441
 1550              		.loc 1 273 54 is_stmt 0 discriminator 3 view .LVU442
 1551 015e 4749     		ldr	r1, .L139
 1552              		.loc 1 273 3 discriminator 3 view .LVU443
 1553 0160 91F8C830 		ldrb	r3, [r1, #200]	@ zero_extendqisi2
 1554 0164 11F80A20 		ldrb	r2, [r1, r10]	@ zero_extendqisi2
 1555 0168 91F8D110 		ldrb	r1, [r1, #209]	@ zero_extendqisi2
 1556 016c 3846     		mov	r0, r7
 1557 016e FFF7FEFF 		bl	LedMatrix_ShowChar
 1558              	.LVL166:
 274:component/lcd/lcd.c **** 		x+=width;
 1559              		.loc 1 274 3 is_stmt 1 discriminator 3 view .LVU444
 1560              		.loc 1 274 4 is_stmt 0 discriminator 3 view .LVU445
 1561 0172 5F44     		add	r7, r7, fp
 1562              	.LVL167:
 1563              		.loc 1 274 4 discriminator 3 view .LVU446
 1564 0174 FFB2     		uxtb	r7, r7
 1565              	.LVL168:
 275:component/lcd/lcd.c **** 		chr++;
 1566              		.loc 1 275 3 is_stmt 1 discriminator 3 view .LVU447
 1567              		.loc 1 275 6 is_stmt 0 discriminator 3 view .LVU448
 1568 0176 0AF1010A 		add	r10, r10, #1
 1569              	.LVL169:
 1570              		.loc 1 275 6 discriminator 3 view .LVU449
 1571 017a 5FFA8AFA 		uxtb	r10, r10
 1572              	.LVL170:
 271:component/lcd/lcd.c **** 	{
 1573              		.loc 1 271 15 is_stmt 1 discriminator 3 view .LVU450
 271:component/lcd/lcd.c **** 	{
 1574              		.loc 1 271 16 is_stmt 0 discriminator 3 view .LVU451
 1575 017e 0135     		adds	r5, r5, #1
 1576              	.LVL171:
 271:component/lcd/lcd.c **** 	{
 1577              		.loc 1 271 16 discriminator 3 view .LVU452
 1578 0180 EDB2     		uxtb	r5, r5
ARM GAS  /tmp/ccfCRRJc.s 			page 51


 1579              	.LVL172:
 1580              	.L117:
 271:component/lcd/lcd.c **** 	{
 1581              		.loc 1 271 10 is_stmt 1 discriminator 1 view .LVU453
 271:component/lcd/lcd.c **** 	{
 1582              		.loc 1 271 2 is_stmt 0 discriminator 1 view .LVU454
 1583 0182 B542     		cmp	r5, r6
 1584 0184 EBD3     		bcc	.L118
 276:component/lcd/lcd.c **** 	}
 277:component/lcd/lcd.c **** 	diachar = rollctrl.string[chr]-' ';
 1585              		.loc 1 277 2 is_stmt 1 view .LVU455
 1586              		.loc 1 277 27 is_stmt 0 view .LVU456
 1587 0186 3D4B     		ldr	r3, .L139
 1588 0188 13F80AA0 		ldrb	r10, [r3, r10]	@ zero_extendqisi2
 1589              	.LVL173:
 1590              		.loc 1 277 10 view .LVU457
 1591 018c AAF1200A 		sub	r10, r10, #32
 1592 0190 5FFA8AFA 		uxtb	r10, r10
 1593              	.LVL174:
 278:component/lcd/lcd.c **** 	s3 = (font2size[rollctrl.size][0]/8+((font2size[rollctrl.size][0]%8)?1:0))*s3;
 1594              		.loc 1 278 2 is_stmt 1 view .LVU458
 1595              		.loc 1 278 26 is_stmt 0 view .LVU459
 1596 0194 93F8C820 		ldrb	r2, [r3, #200]	@ zero_extendqisi2
 1597              		.loc 1 278 32 view .LVU460
 1598 0198 394B     		ldr	r3, .L139+4
 1599 019a 13F812B0 		ldrb	fp, [r3, r2, lsl #1]	@ zero_extendqisi2
 1600              		.loc 1 278 72 view .LVU461
 1601 019e 1BF00703 		ands	r3, fp, #7
 1602 01a2 18BF     		it	ne
 1603 01a4 0123     		movne	r3, #1
 1604              		.loc 1 278 37 view .LVU462
 1605 01a6 03EBDB0B 		add	fp, r3, fp, lsr #3
 1606              		.loc 1 278 5 view .LVU463
 1607 01aa 029B     		ldr	r3, [sp, #8]
 1608 01ac 0BFB03FB 		mul	fp, fp, r3
 1609 01b0 5FFA8BFB 		uxtb	fp, fp
 1610              	.LVL175:
 279:component/lcd/lcd.c **** 	for(i=0;i<s3;i++)
 1611              		.loc 1 279 2 is_stmt 1 view .LVU464
 1612              		.loc 1 279 7 is_stmt 0 view .LVU465
 1613 01b4 4FF00009 		mov	r9, #0
 1614              		.loc 1 279 2 view .LVU466
 1615 01b8 3AE0     		b	.L119
 1616              	.LVL176:
 1617              	.L120:
 1618              	.LBB40:
 280:component/lcd/lcd.c **** 	{
 281:component/lcd/lcd.c **** 		uint8_t temp,t1;
 282:component/lcd/lcd.c **** 		if(rollctrl.size==0)temp=asc2_0806[diachar][i];
 283:component/lcd/lcd.c **** 		else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1619              		.loc 1 283 8 is_stmt 1 view .LVU467
 1620              		.loc 1 283 10 is_stmt 0 view .LVU468
 1621 01ba 012B     		cmp	r3, #1
 1622 01bc 07D0     		beq	.L135
 284:component/lcd/lcd.c **** 		else if(rollctrl.size==2)temp=asc2_1608[diachar][i];
 1623              		.loc 1 284 8 is_stmt 1 view .LVU469
 1624              		.loc 1 284 10 is_stmt 0 view .LVU470
ARM GAS  /tmp/ccfCRRJc.s 			page 52


 1625 01be 022B     		cmp	r3, #2
 1626 01c0 58D1     		bne	.L102
 1627              		.loc 1 284 28 is_stmt 1 discriminator 1 view .LVU471
 1628              		.loc 1 284 32 is_stmt 0 discriminator 1 view .LVU472
 1629 01c2 304B     		ldr	r3, .L139+8
 1630 01c4 03EB0A13 		add	r3, r3, r10, lsl #4
 1631 01c8 13F80950 		ldrb	r5, [r3, r9]	@ zero_extendqisi2
 1632              	.LVL177:
 1633              		.loc 1 284 32 discriminator 1 view .LVU473
 1634 01cc 3EE0     		b	.L121
 1635              	.LVL178:
 1636              	.L135:
 283:component/lcd/lcd.c **** 		else if(rollctrl.size==2)temp=asc2_1608[diachar][i];
 1637              		.loc 1 283 28 is_stmt 1 discriminator 1 view .LVU474
 283:component/lcd/lcd.c **** 		else if(rollctrl.size==2)temp=asc2_1608[diachar][i];
 1638              		.loc 1 283 32 is_stmt 0 discriminator 1 view .LVU475
 1639 01ce 0AEB4A03 		add	r3, r10, r10, lsl #1
 1640 01d2 9A00     		lsls	r2, r3, #2
 1641 01d4 2C4B     		ldr	r3, .L139+12
 1642 01d6 1344     		add	r3, r3, r2
 1643 01d8 13F80950 		ldrb	r5, [r3, r9]	@ zero_extendqisi2
 1644              	.LVL179:
 283:component/lcd/lcd.c **** 		else if(rollctrl.size==2)temp=asc2_1608[diachar][i];
 1645              		.loc 1 283 32 discriminator 1 view .LVU476
 1646 01dc 36E0     		b	.L121
 1647              	.LVL180:
 1648              	.L137:
 285:component/lcd/lcd.c **** 		else return;
 286:component/lcd/lcd.c ****         for(t1=0;t1<8;t1++)
 287:component/lcd/lcd.c **** 		{
 288:component/lcd/lcd.c **** 			if(temp&0x80)LedMatrix_DrawPoint(x,y,POINT_COLOR);
 1649              		.loc 1 288 17 is_stmt 1 discriminator 1 view .LVU477
 1650 01de 2B4B     		ldr	r3, .L139+16
 1651 01e0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1652 01e2 2146     		mov	r1, r4
 1653 01e4 3846     		mov	r0, r7
 1654 01e6 FFF7FEFF 		bl	LedMatrix_DrawPoint
 1655              	.LVL181:
 1656              	.L125:
 289:component/lcd/lcd.c **** 			else LedMatrix_DrawPoint(x,y,BACK_COLOR);
 290:component/lcd/lcd.c **** 			temp<<=1;
 1657              		.loc 1 290 4 view .LVU478
 1658              		.loc 1 290 8 is_stmt 0 view .LVU479
 1659 01ea 6D00     		lsls	r5, r5, #1
 1660              	.LVL182:
 1661              		.loc 1 290 8 view .LVU480
 1662 01ec EDB2     		uxtb	r5, r5
 1663              	.LVL183:
 291:component/lcd/lcd.c **** 			y++;
 1664              		.loc 1 291 4 is_stmt 1 view .LVU481
 1665              		.loc 1 291 5 is_stmt 0 view .LVU482
 1666 01ee 0134     		adds	r4, r4, #1
 1667              	.LVL184:
 1668              		.loc 1 291 5 view .LVU483
 1669 01f0 E4B2     		uxtb	r4, r4
 1670              	.LVL185:
 292:component/lcd/lcd.c **** 			if((y-y0)==font2size[rollctrl.size][0])
ARM GAS  /tmp/ccfCRRJc.s 			page 53


 1671              		.loc 1 292 4 is_stmt 1 view .LVU484
 1672              		.loc 1 292 9 is_stmt 0 view .LVU485
 1673 01f2 A4EB0802 		sub	r2, r4, r8
 1674              		.loc 1 292 33 view .LVU486
 1675 01f6 214B     		ldr	r3, .L139
 1676 01f8 93F8C810 		ldrb	r1, [r3, #200]	@ zero_extendqisi2
 1677              		.loc 1 292 39 view .LVU487
 1678 01fc 204B     		ldr	r3, .L139+4
 1679 01fe 13F81130 		ldrb	r3, [r3, r1, lsl #1]	@ zero_extendqisi2
 1680              		.loc 1 292 6 view .LVU488
 1681 0202 9A42     		cmp	r2, r3
 1682 0204 0DD0     		beq	.L136
 286:component/lcd/lcd.c **** 		{
 1683              		.loc 1 286 23 is_stmt 1 discriminator 2 view .LVU489
 286:component/lcd/lcd.c **** 		{
 1684              		.loc 1 286 25 is_stmt 0 discriminator 2 view .LVU490
 1685 0206 0136     		adds	r6, r6, #1
 1686              	.LVL186:
 286:component/lcd/lcd.c **** 		{
 1687              		.loc 1 286 25 discriminator 2 view .LVU491
 1688 0208 F6B2     		uxtb	r6, r6
 1689              	.LVL187:
 1690              	.L123:
 286:component/lcd/lcd.c **** 		{
 1691              		.loc 1 286 18 is_stmt 1 discriminator 1 view .LVU492
 286:component/lcd/lcd.c **** 		{
 1692              		.loc 1 286 9 is_stmt 0 discriminator 1 view .LVU493
 1693 020a 072E     		cmp	r6, #7
 1694 020c 0CD8     		bhi	.L127
 288:component/lcd/lcd.c **** 			else LedMatrix_DrawPoint(x,y,BACK_COLOR);
 1695              		.loc 1 288 4 is_stmt 1 view .LVU494
 288:component/lcd/lcd.c **** 			else LedMatrix_DrawPoint(x,y,BACK_COLOR);
 1696              		.loc 1 288 6 is_stmt 0 view .LVU495
 1697 020e 15F0800F 		tst	r5, #128
 1698 0212 E4D1     		bne	.L137
 289:component/lcd/lcd.c **** 			temp<<=1;
 1699              		.loc 1 289 9 is_stmt 1 view .LVU496
 1700 0214 1E4B     		ldr	r3, .L139+20
 1701 0216 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1702 0218 2146     		mov	r1, r4
 1703 021a 3846     		mov	r0, r7
 1704 021c FFF7FEFF 		bl	LedMatrix_DrawPoint
 1705              	.LVL188:
 1706 0220 E3E7     		b	.L125
 1707              	.L136:
 293:component/lcd/lcd.c **** 			{
 294:component/lcd/lcd.c **** 				y=y0;
 1708              		.loc 1 294 5 view .LVU497
 1709              	.LVL189:
 295:component/lcd/lcd.c **** 				x++;
 1710              		.loc 1 295 5 view .LVU498
 1711              		.loc 1 295 6 is_stmt 0 view .LVU499
 1712 0222 0137     		adds	r7, r7, #1
 1713              	.LVL190:
 1714              		.loc 1 295 6 view .LVU500
 1715 0224 FFB2     		uxtb	r7, r7
 1716              	.LVL191:
ARM GAS  /tmp/ccfCRRJc.s 			page 54


 296:component/lcd/lcd.c **** 				break;
 1717              		.loc 1 296 5 is_stmt 1 view .LVU501
 294:component/lcd/lcd.c **** 				x++;
 1718              		.loc 1 294 6 is_stmt 0 view .LVU502
 1719 0226 4446     		mov	r4, r8
 1720              	.LVL192:
 1721              	.L127:
 294:component/lcd/lcd.c **** 				x++;
 1722              		.loc 1 294 6 view .LVU503
 1723              	.LBE40:
 279:component/lcd/lcd.c **** 	{
 1724              		.loc 1 279 15 is_stmt 1 discriminator 2 view .LVU504
 279:component/lcd/lcd.c **** 	{
 1725              		.loc 1 279 16 is_stmt 0 discriminator 2 view .LVU505
 1726 0228 09F10109 		add	r9, r9, #1
 1727              	.LVL193:
 279:component/lcd/lcd.c **** 	{
 1728              		.loc 1 279 16 discriminator 2 view .LVU506
 1729 022c 5FFA89F9 		uxtb	r9, r9
 1730              	.LVL194:
 1731              	.L119:
 279:component/lcd/lcd.c **** 	{
 1732              		.loc 1 279 10 is_stmt 1 discriminator 1 view .LVU507
 279:component/lcd/lcd.c **** 	{
 1733              		.loc 1 279 2 is_stmt 0 discriminator 1 view .LVU508
 1734 0230 D945     		cmp	r9, fp
 1735 0232 0DD2     		bcs	.L138
 1736              	.LBB41:
 281:component/lcd/lcd.c **** 		if(rollctrl.size==0)temp=asc2_0806[diachar][i];
 1737              		.loc 1 281 3 is_stmt 1 view .LVU509
 282:component/lcd/lcd.c **** 		else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1738              		.loc 1 282 3 view .LVU510
 282:component/lcd/lcd.c **** 		else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1739              		.loc 1 282 14 is_stmt 0 view .LVU511
 1740 0234 114B     		ldr	r3, .L139
 1741 0236 93F8C830 		ldrb	r3, [r3, #200]	@ zero_extendqisi2
 282:component/lcd/lcd.c **** 		else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1742              		.loc 1 282 5 view .LVU512
 1743 023a 002B     		cmp	r3, #0
 1744 023c BDD1     		bne	.L120
 282:component/lcd/lcd.c **** 		else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1745              		.loc 1 282 23 is_stmt 1 discriminator 1 view .LVU513
 282:component/lcd/lcd.c **** 		else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1746              		.loc 1 282 27 is_stmt 0 discriminator 1 view .LVU514
 1747 023e 0AEB4A03 		add	r3, r10, r10, lsl #1
 1748 0242 5A00     		lsls	r2, r3, #1
 1749 0244 134B     		ldr	r3, .L139+24
 1750 0246 1344     		add	r3, r3, r2
 1751 0248 13F80950 		ldrb	r5, [r3, r9]	@ zero_extendqisi2
 1752              	.LVL195:
 1753              	.L121:
 282:component/lcd/lcd.c **** 		else if(rollctrl.size==1)temp=asc2_1206[diachar][i];
 1754              		.loc 1 282 27 discriminator 1 view .LVU515
 1755              	.LBE41:
 271:component/lcd/lcd.c **** 	{
 1756              		.loc 1 271 7 discriminator 1 view .LVU516
 1757 024c 0026     		movs	r6, #0
ARM GAS  /tmp/ccfCRRJc.s 			page 55


 1758 024e DCE7     		b	.L123
 1759              	.LVL196:
 1760              	.L138:
 297:component/lcd/lcd.c **** 			}
 298:component/lcd/lcd.c **** 		}
 299:component/lcd/lcd.c **** 	}
 300:component/lcd/lcd.c **** 	
 301:component/lcd/lcd.c **** 	if(++rollctrl.offset>(rollctrl.length-rollctrl.width))rollctrl.offset=0;
 1761              		.loc 1 301 2 is_stmt 1 view .LVU517
 1762              		.loc 1 301 15 is_stmt 0 view .LVU518
 1763 0250 0A4A     		ldr	r2, .L139
 1764 0252 B2F8CE30 		ldrh	r3, [r2, #206]
 1765              		.loc 1 301 5 view .LVU519
 1766 0256 0133     		adds	r3, r3, #1
 1767 0258 9BB2     		uxth	r3, r3
 1768              		.loc 1 301 4 view .LVU520
 1769 025a A2F8CE30 		strh	r3, [r2, #206]	@ movhi
 1770              		.loc 1 301 32 view .LVU521
 1771 025e B2F8CA10 		ldrh	r1, [r2, #202]
 1772              		.loc 1 301 48 view .LVU522
 1773 0262 92F8CC20 		ldrb	r2, [r2, #204]	@ zero_extendqisi2
 1774              		.loc 1 301 39 view .LVU523
 1775 0266 8A1A     		subs	r2, r1, r2
 1776              		.loc 1 301 4 view .LVU524
 1777 0268 9342     		cmp	r3, r2
 1778 026a 03DD     		ble	.L102
 1779              		.loc 1 301 56 is_stmt 1 discriminator 1 view .LVU525
 1780              		.loc 1 301 71 is_stmt 0 discriminator 1 view .LVU526
 1781 026c 034B     		ldr	r3, .L139
 1782 026e 0022     		movs	r2, #0
 1783 0270 A3F8CE20 		strh	r2, [r3, #206]	@ movhi
 1784              	.LVL197:
 1785              	.L102:
 302:component/lcd/lcd.c **** }
 1786              		.loc 1 302 1 view .LVU527
 1787 0274 07B0     		add	sp, sp, #28
 1788              	.LCFI19:
 1789              		.cfi_def_cfa_offset 36
 1790              		@ sp needed
 1791 0276 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1792              	.LVL198:
 1793              	.L140:
 1794              		.loc 1 302 1 view .LVU528
 1795 027a 00BF     		.align	2
 1796              	.L139:
 1797 027c 00000000 		.word	rollctrl
 1798 0280 00000000 		.word	.LANCHOR2
 1799 0284 00000000 		.word	.LANCHOR5
 1800 0288 00000000 		.word	.LANCHOR4
 1801 028c 00000000 		.word	.LANCHOR0
 1802 0290 00000000 		.word	.LANCHOR1
 1803 0294 00000000 		.word	.LANCHOR3
 1804              		.cfi_endproc
 1805              	.LFE409:
 1807              		.section	.text.LedMatrix_DrawBMP,"ax",%progbits
 1808              		.align	1
 1809              		.global	LedMatrix_DrawBMP
ARM GAS  /tmp/ccfCRRJc.s 			page 56


 1810              		.syntax unified
 1811              		.thumb
 1812              		.thumb_func
 1813              		.fpu softvfp
 1815              	LedMatrix_DrawBMP:
 1816              	.LVL199:
 1817              	.LFB410:
 303:component/lcd/lcd.c **** 
 304:component/lcd/lcd.c **** 
 305:component/lcd/lcd.c **** 
 306:component/lcd/lcd.c **** 
 307:component/lcd/lcd.c **** void LedMatrix_DrawBMP(uint8_t x0, uint8_t y0,uint8_t x1, uint8_t y1,const uint8_t BMP[])
 308:component/lcd/lcd.c **** {
 1818              		.loc 1 308 1 is_stmt 1 view -0
 1819              		.cfi_startproc
 1820              		@ args = 4, pretend = 0, frame = 0
 1821              		@ frame_needed = 0, uses_anonymous_args = 0
 1822              		@ link register save eliminated.
 309:component/lcd/lcd.c **** 	unsigned char x,y;
 1823              		.loc 1 309 2 view .LVU530
 310:component/lcd/lcd.c **** 	
 311:component/lcd/lcd.c **** //	if(y1%8==0) y=y1/8;
 312:component/lcd/lcd.c **** //	else y=y1/8+1;
 313:component/lcd/lcd.c **** 	for(y=y0;y<y1;y++)
 1824              		.loc 1 313 2 view .LVU531
 1825              		.loc 1 313 11 view .LVU532
 1826              		.loc 1 313 2 is_stmt 0 view .LVU533
 1827 0000 9942     		cmp	r1, r3
 1828 0002 0DD2     		bcs	.L149
 308:component/lcd/lcd.c **** 	unsigned char x,y;
 1829              		.loc 1 308 1 view .LVU534
 1830 0004 10B4     		push	{r4}
 1831              	.LCFI20:
 1832              		.cfi_def_cfa_offset 4
 1833              		.cfi_offset 4, -4
 1834 0006 07E0     		b	.L145
 1835              	.LVL200:
 1836              	.L143:
 314:component/lcd/lcd.c **** 	{	
 315:component/lcd/lcd.c **** 		for(x=x0;x<x1;x++)
 316:component/lcd/lcd.c **** 		{
 317:component/lcd/lcd.c **** 			//OLED_GRAM[x][y] = BMP[j++];
 318:component/lcd/lcd.c **** 		}
 1837              		.loc 1 318 3 is_stmt 1 discriminator 3 view .LVU535
 315:component/lcd/lcd.c **** 		{
 1838              		.loc 1 315 17 discriminator 3 view .LVU536
 315:component/lcd/lcd.c **** 		{
 1839              		.loc 1 315 18 is_stmt 0 discriminator 3 view .LVU537
 1840 0008 0134     		adds	r4, r4, #1
 1841              	.LVL201:
 315:component/lcd/lcd.c **** 		{
 1842              		.loc 1 315 18 discriminator 3 view .LVU538
 1843 000a E4B2     		uxtb	r4, r4
 1844              	.LVL202:
 1845              	.L144:
 315:component/lcd/lcd.c **** 		{
 1846              		.loc 1 315 12 is_stmt 1 discriminator 1 view .LVU539
ARM GAS  /tmp/ccfCRRJc.s 			page 57


 315:component/lcd/lcd.c **** 		{
 1847              		.loc 1 315 3 is_stmt 0 discriminator 1 view .LVU540
 1848 000c 9442     		cmp	r4, r2
 1849 000e FBD3     		bcc	.L143
 313:component/lcd/lcd.c **** 	{	
 1850              		.loc 1 313 16 is_stmt 1 discriminator 2 view .LVU541
 313:component/lcd/lcd.c **** 	{	
 1851              		.loc 1 313 17 is_stmt 0 discriminator 2 view .LVU542
 1852 0010 0131     		adds	r1, r1, #1
 1853              	.LVL203:
 313:component/lcd/lcd.c **** 	{	
 1854              		.loc 1 313 17 discriminator 2 view .LVU543
 1855 0012 C9B2     		uxtb	r1, r1
 1856              	.LVL204:
 313:component/lcd/lcd.c **** 	{	
 1857              		.loc 1 313 11 is_stmt 1 discriminator 2 view .LVU544
 313:component/lcd/lcd.c **** 	{	
 1858              		.loc 1 313 2 is_stmt 0 discriminator 2 view .LVU545
 1859 0014 9942     		cmp	r1, r3
 1860 0016 01D2     		bcs	.L150
 1861              	.LVL205:
 1862              	.L145:
 315:component/lcd/lcd.c **** 		{
 1863              		.loc 1 315 8 view .LVU546
 1864 0018 0446     		mov	r4, r0
 1865 001a F7E7     		b	.L144
 1866              	.LVL206:
 1867              	.L150:
 319:component/lcd/lcd.c **** 	}
 320:component/lcd/lcd.c **** }
 1868              		.loc 1 320 1 view .LVU547
 1869 001c 10BC     		pop	{r4}
 1870              	.LCFI21:
 1871              		.cfi_restore 4
 1872              		.cfi_def_cfa_offset 0
 1873              	.LVL207:
 1874              		.loc 1 320 1 view .LVU548
 1875 001e 7047     		bx	lr
 1876              	.LVL208:
 1877              	.L149:
 1878              		.loc 1 320 1 view .LVU549
 1879 0020 7047     		bx	lr
 1880              		.cfi_endproc
 1881              	.LFE410:
 1883              		.section	.text.LedMatrix_DrawLine,"ax",%progbits
 1884              		.align	1
 1885              		.global	LedMatrix_DrawLine
 1886              		.syntax unified
 1887              		.thumb
 1888              		.thumb_func
 1889              		.fpu softvfp
 1891              	LedMatrix_DrawLine:
 1892              	.LVL209:
 1893              	.LFB411:
 321:component/lcd/lcd.c **** 
 322:component/lcd/lcd.c **** 
 323:component/lcd/lcd.c **** void LedMatrix_DrawLine(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2)
ARM GAS  /tmp/ccfCRRJc.s 			page 58


 324:component/lcd/lcd.c **** {
 1894              		.loc 1 324 1 is_stmt 1 view -0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 8
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 1898              		.loc 1 324 1 is_stmt 0 view .LVU551
 1899 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1900              	.LCFI22:
 1901              		.cfi_def_cfa_offset 36
 1902              		.cfi_offset 4, -36
 1903              		.cfi_offset 5, -32
 1904              		.cfi_offset 6, -28
 1905              		.cfi_offset 7, -24
 1906              		.cfi_offset 8, -20
 1907              		.cfi_offset 9, -16
 1908              		.cfi_offset 10, -12
 1909              		.cfi_offset 11, -8
 1910              		.cfi_offset 14, -4
 1911 0004 83B0     		sub	sp, sp, #12
 1912              	.LCFI23:
 1913              		.cfi_def_cfa_offset 48
 325:component/lcd/lcd.c **** 	uint16_t t; 
 1914              		.loc 1 325 2 is_stmt 1 view .LVU552
 326:component/lcd/lcd.c **** 	int xerr=0,yerr=0,delta_x,delta_y,distance; 
 1915              		.loc 1 326 2 view .LVU553
 1916              	.LVL210:
 327:component/lcd/lcd.c **** 	int incx,incy,uRow,uCol; 
 1917              		.loc 1 327 2 view .LVU554
 328:component/lcd/lcd.c **** 	delta_x=x2-x1;
 1918              		.loc 1 328 2 view .LVU555
 1919              		.loc 1 328 12 is_stmt 0 view .LVU556
 1920 0006 8046     		mov	r8, r0
 1921              		.loc 1 328 9 view .LVU557
 1922 0008 A2EB000A 		sub	r10, r2, r0
 1923              	.LVL211:
 329:component/lcd/lcd.c **** 	delta_y=y2-y1; 
 1924              		.loc 1 329 2 is_stmt 1 view .LVU558
 1925              		.loc 1 329 12 is_stmt 0 view .LVU559
 1926 000c 8946     		mov	r9, r1
 1927              		.loc 1 329 9 view .LVU560
 1928 000e A3EB010B 		sub	fp, r3, r1
 1929              	.LVL212:
 330:component/lcd/lcd.c **** 	uRow=x1; 
 1930              		.loc 1 330 2 is_stmt 1 view .LVU561
 331:component/lcd/lcd.c **** 	uCol=y1; 
 1931              		.loc 1 331 2 view .LVU562
 332:component/lcd/lcd.c **** 	if(delta_x>0)incx=1; 
 1932              		.loc 1 332 2 view .LVU563
 1933              		.loc 1 332 4 is_stmt 0 view .LVU564
 1934 0012 BAF1000F 		cmp	r10, #0
 1935 0016 0DDD     		ble	.L165
 1936              		.loc 1 332 19 view .LVU565
 1937 0018 0122     		movs	r2, #1
 1938              	.LVL213:
 1939              		.loc 1 332 19 view .LVU566
 1940 001a 0092     		str	r2, [sp]
 1941              	.L152:
ARM GAS  /tmp/ccfCRRJc.s 			page 59


 1942              	.LVL214:
 333:component/lcd/lcd.c **** 	else if(delta_x==0)incx=0;
 334:component/lcd/lcd.c **** 	else {incx=-1;delta_x=-delta_x;}
 335:component/lcd/lcd.c **** 	if(delta_y>0)incy=1;
 1943              		.loc 1 335 2 is_stmt 1 view .LVU567
 1944              		.loc 1 335 4 is_stmt 0 view .LVU568
 1945 001c BBF1000F 		cmp	fp, #0
 1946 0020 14DD     		ble	.L166
 1947              		.loc 1 335 19 view .LVU569
 1948 0022 0123     		movs	r3, #1
 1949              	.LVL215:
 1950              		.loc 1 335 19 view .LVU570
 1951 0024 0193     		str	r3, [sp, #4]
 1952              	.L153:
 1953              	.LVL216:
 336:component/lcd/lcd.c **** 	else if(delta_y==0)incy=0;
 337:component/lcd/lcd.c **** 	else{incy=-1;delta_y=-delta_y;}
 338:component/lcd/lcd.c **** 	if( delta_x>delta_y)distance=delta_x;
 1954              		.loc 1 338 2 is_stmt 1 view .LVU571
 1955              		.loc 1 338 4 is_stmt 0 view .LVU572
 1956 0026 DA45     		cmp	r10, fp
 1957 0028 1CDD     		ble	.L163
 1958              		.loc 1 338 30 view .LVU573
 1959 002a 5646     		mov	r6, r10
 1960              	.L154:
 1961              	.LVL217:
 339:component/lcd/lcd.c **** 	else distance=delta_y;
 340:component/lcd/lcd.c **** 	for(t=0;t<=distance+1;t++ )
 1962              		.loc 1 340 2 is_stmt 1 view .LVU574
 326:component/lcd/lcd.c **** 	int incx,incy,uRow,uCol; 
 1963              		.loc 1 326 13 is_stmt 0 view .LVU575
 1964 002c 0025     		movs	r5, #0
 326:component/lcd/lcd.c **** 	int incx,incy,uRow,uCol; 
 1965              		.loc 1 326 6 view .LVU576
 1966 002e 2F46     		mov	r7, r5
 1967              		.loc 1 340 7 view .LVU577
 1968 0030 2C46     		mov	r4, r5
 1969              		.loc 1 340 2 view .LVU578
 1970 0032 1BE0     		b	.L155
 1971              	.LVL218:
 1972              	.L165:
 333:component/lcd/lcd.c **** 	else {incx=-1;delta_x=-delta_x;}
 1973              		.loc 1 333 7 is_stmt 1 view .LVU579
 333:component/lcd/lcd.c **** 	else {incx=-1;delta_x=-delta_x;}
 1974              		.loc 1 333 9 is_stmt 0 view .LVU580
 1975 0034 BAF1000F 		cmp	r10, #0
 1976 0038 05D0     		beq	.L160
 334:component/lcd/lcd.c **** 	if(delta_y>0)incy=1;
 1977              		.loc 1 334 8 is_stmt 1 view .LVU581
 1978              	.LVL219:
 334:component/lcd/lcd.c **** 	if(delta_y>0)incy=1;
 1979              		.loc 1 334 16 view .LVU582
 334:component/lcd/lcd.c **** 	if(delta_y>0)incy=1;
 1980              		.loc 1 334 23 is_stmt 0 view .LVU583
 1981 003a A0EB020A 		sub	r10, r0, r2
 1982              	.LVL220:
 334:component/lcd/lcd.c **** 	if(delta_y>0)incy=1;
ARM GAS  /tmp/ccfCRRJc.s 			page 60


 1983              		.loc 1 334 12 view .LVU584
 1984 003e 4FF0FF32 		mov	r2, #-1
 1985              	.LVL221:
 334:component/lcd/lcd.c **** 	if(delta_y>0)incy=1;
 1986              		.loc 1 334 12 view .LVU585
 1987 0042 0092     		str	r2, [sp]
 1988 0044 EAE7     		b	.L152
 1989              	.LVL222:
 1990              	.L160:
 333:component/lcd/lcd.c **** 	else {incx=-1;delta_x=-delta_x;}
 1991              		.loc 1 333 25 view .LVU586
 1992 0046 CDF800A0 		str	r10, [sp]
 1993 004a E7E7     		b	.L152
 1994              	.LVL223:
 1995              	.L166:
 336:component/lcd/lcd.c **** 	else{incy=-1;delta_y=-delta_y;}
 1996              		.loc 1 336 7 is_stmt 1 view .LVU587
 336:component/lcd/lcd.c **** 	else{incy=-1;delta_y=-delta_y;}
 1997              		.loc 1 336 9 is_stmt 0 view .LVU588
 1998 004c BBF1000F 		cmp	fp, #0
 1999 0050 05D0     		beq	.L162
 337:component/lcd/lcd.c **** 	if( delta_x>delta_y)distance=delta_x;
 2000              		.loc 1 337 7 is_stmt 1 view .LVU589
 2001              	.LVL224:
 337:component/lcd/lcd.c **** 	if( delta_x>delta_y)distance=delta_x;
 2002              		.loc 1 337 15 view .LVU590
 337:component/lcd/lcd.c **** 	if( delta_x>delta_y)distance=delta_x;
 2003              		.loc 1 337 22 is_stmt 0 view .LVU591
 2004 0052 A1EB030B 		sub	fp, r1, r3
 2005              	.LVL225:
 337:component/lcd/lcd.c **** 	if( delta_x>delta_y)distance=delta_x;
 2006              		.loc 1 337 11 view .LVU592
 2007 0056 4FF0FF33 		mov	r3, #-1
 2008              	.LVL226:
 337:component/lcd/lcd.c **** 	if( delta_x>delta_y)distance=delta_x;
 2009              		.loc 1 337 11 view .LVU593
 2010 005a 0193     		str	r3, [sp, #4]
 2011 005c E3E7     		b	.L153
 2012              	.LVL227:
 2013              	.L162:
 336:component/lcd/lcd.c **** 	else{incy=-1;delta_y=-delta_y;}
 2014              		.loc 1 336 25 view .LVU594
 2015 005e CDF804B0 		str	fp, [sp, #4]
 2016 0062 E0E7     		b	.L153
 2017              	.LVL228:
 2018              	.L163:
 339:component/lcd/lcd.c **** 	for(t=0;t<=distance+1;t++ )
 2019              		.loc 1 339 15 view .LVU595
 2020 0064 5E46     		mov	r6, fp
 2021 0066 E1E7     		b	.L154
 2022              	.LVL229:
 2023              	.L157:
 2024              		.loc 1 340 24 is_stmt 1 discriminator 2 view .LVU596
 2025              		.loc 1 340 25 is_stmt 0 discriminator 2 view .LVU597
 2026 0068 0134     		adds	r4, r4, #1
 2027              	.LVL230:
 2028              		.loc 1 340 25 discriminator 2 view .LVU598
ARM GAS  /tmp/ccfCRRJc.s 			page 61


 2029 006a A4B2     		uxth	r4, r4
 2030              	.LVL231:
 2031              	.L155:
 2032              		.loc 1 340 10 is_stmt 1 discriminator 1 view .LVU599
 2033              		.loc 1 340 21 is_stmt 0 discriminator 1 view .LVU600
 2034 006c 731C     		adds	r3, r6, #1
 2035              		.loc 1 340 2 discriminator 1 view .LVU601
 2036 006e 9C42     		cmp	r4, r3
 2037 0070 14DC     		bgt	.L167
 341:component/lcd/lcd.c **** 	{
 342:component/lcd/lcd.c **** 		LedMatrix_DrawPoint(uRow,uCol,POINT_COLOR);
 2038              		.loc 1 342 3 is_stmt 1 view .LVU602
 2039 0072 0C4B     		ldr	r3, .L168
 2040 0074 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2041 0076 5FFA89F1 		uxtb	r1, r9
 2042 007a 5FFA88F0 		uxtb	r0, r8
 2043 007e FFF7FEFF 		bl	LedMatrix_DrawPoint
 2044              	.LVL232:
 343:component/lcd/lcd.c **** 		xerr+=delta_x ;
 2045              		.loc 1 343 3 view .LVU603
 2046              		.loc 1 343 7 is_stmt 0 view .LVU604
 2047 0082 5744     		add	r7, r7, r10
 2048              	.LVL233:
 344:component/lcd/lcd.c **** 		yerr+=delta_y ;
 2049              		.loc 1 344 3 is_stmt 1 view .LVU605
 2050              		.loc 1 344 7 is_stmt 0 view .LVU606
 2051 0084 5D44     		add	r5, r5, fp
 2052              	.LVL234:
 345:component/lcd/lcd.c **** 		if(xerr>distance)
 2053              		.loc 1 345 3 is_stmt 1 view .LVU607
 2054              		.loc 1 345 5 is_stmt 0 view .LVU608
 2055 0086 BE42     		cmp	r6, r7
 2056 0088 02DA     		bge	.L156
 346:component/lcd/lcd.c **** 		{
 347:component/lcd/lcd.c **** 			xerr-=distance;
 2057              		.loc 1 347 4 is_stmt 1 view .LVU609
 2058              		.loc 1 347 8 is_stmt 0 view .LVU610
 2059 008a BF1B     		subs	r7, r7, r6
 2060              	.LVL235:
 348:component/lcd/lcd.c **** 			uRow+=incx;
 2061              		.loc 1 348 4 is_stmt 1 view .LVU611
 2062              		.loc 1 348 8 is_stmt 0 view .LVU612
 2063 008c 009B     		ldr	r3, [sp]
 2064 008e 9844     		add	r8, r8, r3
 2065              	.LVL236:
 2066              	.L156:
 349:component/lcd/lcd.c **** 		}
 350:component/lcd/lcd.c **** 		if(yerr>distance)
 2067              		.loc 1 350 3 is_stmt 1 view .LVU613
 2068              		.loc 1 350 5 is_stmt 0 view .LVU614
 2069 0090 AE42     		cmp	r6, r5
 2070 0092 E9DA     		bge	.L157
 351:component/lcd/lcd.c **** 		{
 352:component/lcd/lcd.c **** 			yerr-=distance;
 2071              		.loc 1 352 4 is_stmt 1 view .LVU615
 2072              		.loc 1 352 8 is_stmt 0 view .LVU616
 2073 0094 AD1B     		subs	r5, r5, r6
ARM GAS  /tmp/ccfCRRJc.s 			page 62


 2074              	.LVL237:
 353:component/lcd/lcd.c **** 			uCol+=incy;
 2075              		.loc 1 353 4 is_stmt 1 view .LVU617
 2076              		.loc 1 353 8 is_stmt 0 view .LVU618
 2077 0096 019B     		ldr	r3, [sp, #4]
 2078 0098 9944     		add	r9, r9, r3
 2079              	.LVL238:
 2080              		.loc 1 353 8 view .LVU619
 2081 009a E5E7     		b	.L157
 2082              	.L167:
 354:component/lcd/lcd.c **** 		}
 355:component/lcd/lcd.c **** 	}
 356:component/lcd/lcd.c **** }
 2083              		.loc 1 356 1 view .LVU620
 2084 009c 03B0     		add	sp, sp, #12
 2085              	.LCFI24:
 2086              		.cfi_def_cfa_offset 36
 2087              	.LVL239:
 2088              		.loc 1 356 1 view .LVU621
 2089              		@ sp needed
 2090 009e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2091              	.LVL240:
 2092              	.L169:
 2093              		.loc 1 356 1 view .LVU622
 2094 00a2 00BF     		.align	2
 2095              	.L168:
 2096 00a4 00000000 		.word	.LANCHOR0
 2097              		.cfi_endproc
 2098              	.LFE411:
 2100              		.section	.text.LedMatrix_DrawRectangle,"ax",%progbits
 2101              		.align	1
 2102              		.global	LedMatrix_DrawRectangle
 2103              		.syntax unified
 2104              		.thumb
 2105              		.thumb_func
 2106              		.fpu softvfp
 2108              	LedMatrix_DrawRectangle:
 2109              	.LVL241:
 2110              	.LFB412:
 357:component/lcd/lcd.c **** 
 358:component/lcd/lcd.c **** 
 359:component/lcd/lcd.c **** void LedMatrix_DrawRectangle(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2)
 360:component/lcd/lcd.c **** {
 2111              		.loc 1 360 1 is_stmt 1 view -0
 2112              		.cfi_startproc
 2113              		@ args = 0, pretend = 0, frame = 0
 2114              		@ frame_needed = 0, uses_anonymous_args = 0
 2115              		.loc 1 360 1 is_stmt 0 view .LVU624
 2116 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2117              	.LCFI25:
 2118              		.cfi_def_cfa_offset 24
 2119              		.cfi_offset 3, -24
 2120              		.cfi_offset 4, -20
 2121              		.cfi_offset 5, -16
 2122              		.cfi_offset 6, -12
 2123              		.cfi_offset 7, -8
 2124              		.cfi_offset 14, -4
ARM GAS  /tmp/ccfCRRJc.s 			page 63


 2125 0002 0746     		mov	r7, r0
 2126 0004 0E46     		mov	r6, r1
 2127 0006 1546     		mov	r5, r2
 2128 0008 1C46     		mov	r4, r3
 361:component/lcd/lcd.c **** 	LedMatrix_DrawLine(x1,y1,x2,y1);
 2129              		.loc 1 361 2 is_stmt 1 view .LVU625
 2130 000a 0B46     		mov	r3, r1
 2131              	.LVL242:
 2132              		.loc 1 361 2 is_stmt 0 view .LVU626
 2133 000c FFF7FEFF 		bl	LedMatrix_DrawLine
 2134              	.LVL243:
 362:component/lcd/lcd.c **** 	LedMatrix_DrawLine(x1,y1,x1,y2);
 2135              		.loc 1 362 2 is_stmt 1 view .LVU627
 2136 0010 2346     		mov	r3, r4
 2137 0012 3A46     		mov	r2, r7
 2138 0014 3146     		mov	r1, r6
 2139 0016 3846     		mov	r0, r7
 2140 0018 FFF7FEFF 		bl	LedMatrix_DrawLine
 2141              	.LVL244:
 363:component/lcd/lcd.c **** 	LedMatrix_DrawLine(x1,y2,x2,y2);
 2142              		.loc 1 363 2 view .LVU628
 2143 001c 2346     		mov	r3, r4
 2144 001e 2A46     		mov	r2, r5
 2145 0020 2146     		mov	r1, r4
 2146 0022 3846     		mov	r0, r7
 2147 0024 FFF7FEFF 		bl	LedMatrix_DrawLine
 2148              	.LVL245:
 364:component/lcd/lcd.c **** 	LedMatrix_DrawLine(x2,y1,x2,y2);
 2149              		.loc 1 364 2 view .LVU629
 2150 0028 2346     		mov	r3, r4
 2151 002a 2A46     		mov	r2, r5
 2152 002c 3146     		mov	r1, r6
 2153 002e 2846     		mov	r0, r5
 2154 0030 FFF7FEFF 		bl	LedMatrix_DrawLine
 2155              	.LVL246:
 365:component/lcd/lcd.c **** }
 2156              		.loc 1 365 1 is_stmt 0 view .LVU630
 2157 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2158              		.cfi_endproc
 2159              	.LFE412:
 2161              		.section	.text.LedMatrix_Draw_Circle,"ax",%progbits
 2162              		.align	1
 2163              		.global	LedMatrix_Draw_Circle
 2164              		.syntax unified
 2165              		.thumb
 2166              		.thumb_func
 2167              		.fpu softvfp
 2169              	LedMatrix_Draw_Circle:
 2170              	.LVL247:
 2171              	.LFB413:
 366:component/lcd/lcd.c **** 
 367:component/lcd/lcd.c **** 
 368:component/lcd/lcd.c **** void LedMatrix_Draw_Circle(uint16_t x0,uint16_t y0,uint8_t r)
 369:component/lcd/lcd.c **** {
 2172              		.loc 1 369 1 is_stmt 1 view -0
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /tmp/ccfCRRJc.s 			page 64


 2175              		@ frame_needed = 0, uses_anonymous_args = 0
 2176              		.loc 1 369 1 is_stmt 0 view .LVU632
 2177 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2178              	.LCFI26:
 2179              		.cfi_def_cfa_offset 36
 2180              		.cfi_offset 4, -36
 2181              		.cfi_offset 5, -32
 2182              		.cfi_offset 6, -28
 2183              		.cfi_offset 7, -24
 2184              		.cfi_offset 8, -20
 2185              		.cfi_offset 9, -16
 2186              		.cfi_offset 10, -12
 2187              		.cfi_offset 11, -8
 2188              		.cfi_offset 14, -4
 2189 0004 89B0     		sub	sp, sp, #36
 2190              	.LCFI27:
 2191              		.cfi_def_cfa_offset 72
 2192 0006 0690     		str	r0, [sp, #24]
 2193 0008 0791     		str	r1, [sp, #28]
 2194 000a 0192     		str	r2, [sp, #4]
 370:component/lcd/lcd.c **** 	int a,b;
 2195              		.loc 1 370 2 is_stmt 1 view .LVU633
 371:component/lcd/lcd.c **** 	int di;
 2196              		.loc 1 371 2 view .LVU634
 372:component/lcd/lcd.c **** 	a=0;b=r;	  
 2197              		.loc 1 372 2 view .LVU635
 2198              	.LVL248:
 2199              		.loc 1 372 6 view .LVU636
 373:component/lcd/lcd.c **** 	di=3-(r<<1);   
 2200              		.loc 1 373 2 view .LVU637
 2201              		.loc 1 373 9 is_stmt 0 view .LVU638
 2202 000c 5300     		lsls	r3, r2, #1
 2203              		.loc 1 373 4 view .LVU639
 2204 000e C3F10303 		rsb	r3, r3, #3
 2205 0012 0293     		str	r3, [sp, #8]
 2206              	.LVL249:
 374:component/lcd/lcd.c **** 	while(a<=b)
 2207              		.loc 1 374 2 is_stmt 1 view .LVU640
 372:component/lcd/lcd.c **** 	a=0;b=r;	  
 2208              		.loc 1 372 3 is_stmt 0 view .LVU641
 2209 0014 4FF00008 		mov	r8, #0
 2210              		.loc 1 374 7 view .LVU642
 2211 0018 04E0     		b	.L173
 2212              	.LVL250:
 2213              	.L179:
 375:component/lcd/lcd.c **** 	{
 376:component/lcd/lcd.c **** 		LedMatrix_DrawPoint(x0+a,y0-b,POINT_COLOR);
 377:component/lcd/lcd.c ****  		LedMatrix_DrawPoint(x0+b,y0-a,POINT_COLOR);           
 378:component/lcd/lcd.c **** 		LedMatrix_DrawPoint(x0+b,y0+a,POINT_COLOR);               
 379:component/lcd/lcd.c **** 		LedMatrix_DrawPoint(x0+a,y0+b,POINT_COLOR); 
 380:component/lcd/lcd.c **** 		LedMatrix_DrawPoint(x0-a,y0+b,POINT_COLOR);       
 381:component/lcd/lcd.c ****  		LedMatrix_DrawPoint(x0-b,y0+a,POINT_COLOR);             
 382:component/lcd/lcd.c **** 		LedMatrix_DrawPoint(x0-a,y0-b,POINT_COLOR);             
 383:component/lcd/lcd.c ****   		LedMatrix_DrawPoint(x0-b,y0-a,POINT_COLOR);     	         
 384:component/lcd/lcd.c **** 		a++;
 385:component/lcd/lcd.c **** 		if(di<0)di +=4*a+6;	  
 2214              		.loc 1 385 11 is_stmt 1 discriminator 1 view .LVU643
ARM GAS  /tmp/ccfCRRJc.s 			page 65


 2215              		.loc 1 385 17 is_stmt 0 discriminator 1 view .LVU644
 2216 001a 4FEA8803 		lsl	r3, r8, #2
 2217              		.loc 1 385 19 discriminator 1 view .LVU645
 2218 001e 0633     		adds	r3, r3, #6
 2219              		.loc 1 385 14 discriminator 1 view .LVU646
 2220 0020 1A44     		add	r2, r2, r3
 2221 0022 0292     		str	r2, [sp, #8]
 2222              	.LVL251:
 2223              	.L173:
 374:component/lcd/lcd.c **** 	while(a<=b)
 2224              		.loc 1 374 7 is_stmt 1 view .LVU647
 2225 0024 019B     		ldr	r3, [sp, #4]
 2226 0026 9845     		cmp	r8, r3
 2227 0028 59DC     		bgt	.L178
 376:component/lcd/lcd.c ****  		LedMatrix_DrawPoint(x0+b,y0-a,POINT_COLOR);           
 2228              		.loc 1 376 3 view .LVU648
 2229 002a 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 2230 002e 5FFA88F6 		uxtb	r6, r8
 2231 0032 A319     		adds	r3, r4, r6
 2232 0034 D8B2     		uxtb	r0, r3
 2233 0036 9DF81C50 		ldrb	r5, [sp, #28]	@ zero_extendqisi2
 2234 003a 9DF804A0 		ldrb	r10, [sp, #4]	@ zero_extendqisi2
 2235 003e A5EB0A03 		sub	r3, r5, r10
 2236 0042 DBB2     		uxtb	r3, r3
 2237 0044 274F     		ldr	r7, .L180
 2238 0046 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2239 0048 0493     		str	r3, [sp, #16]
 2240 004a 1946     		mov	r1, r3
 2241 004c 0390     		str	r0, [sp, #12]
 2242 004e FFF7FEFF 		bl	LedMatrix_DrawPoint
 2243              	.LVL252:
 377:component/lcd/lcd.c **** 		LedMatrix_DrawPoint(x0+b,y0+a,POINT_COLOR);               
 2244              		.loc 1 377 4 view .LVU649
 2245 0052 04EB0A0B 		add	fp, r4, r10
 2246 0056 5FFA8BFB 		uxtb	fp, fp
 2247 005a AB1B     		subs	r3, r5, r6
 2248 005c DAB2     		uxtb	r2, r3
 2249 005e 1346     		mov	r3, r2
 2250 0060 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2251 0062 0593     		str	r3, [sp, #20]
 2252 0064 1946     		mov	r1, r3
 2253 0066 5846     		mov	r0, fp
 2254 0068 FFF7FEFF 		bl	LedMatrix_DrawPoint
 2255              	.LVL253:
 378:component/lcd/lcd.c **** 		LedMatrix_DrawPoint(x0+a,y0+b,POINT_COLOR); 
 2256              		.loc 1 378 3 view .LVU650
 2257 006c 06EB0509 		add	r9, r6, r5
 2258 0070 5FFA89F9 		uxtb	r9, r9
 2259 0074 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2260 0076 4946     		mov	r1, r9
 2261 0078 5846     		mov	r0, fp
 2262 007a FFF7FEFF 		bl	LedMatrix_DrawPoint
 2263              	.LVL254:
 379:component/lcd/lcd.c **** 		LedMatrix_DrawPoint(x0-a,y0+b,POINT_COLOR);       
 2264              		.loc 1 379 3 view .LVU651
 2265 007e 5544     		add	r5, r5, r10
 2266 0080 EDB2     		uxtb	r5, r5
ARM GAS  /tmp/ccfCRRJc.s 			page 66


 2267 0082 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2268 0084 2946     		mov	r1, r5
 2269 0086 0398     		ldr	r0, [sp, #12]
 2270 0088 FFF7FEFF 		bl	LedMatrix_DrawPoint
 2271              	.LVL255:
 380:component/lcd/lcd.c ****  		LedMatrix_DrawPoint(x0-b,y0+a,POINT_COLOR);             
 2272              		.loc 1 380 3 view .LVU652
 2273 008c A61B     		subs	r6, r4, r6
 2274 008e F6B2     		uxtb	r6, r6
 2275 0090 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2276 0092 2946     		mov	r1, r5
 2277 0094 3046     		mov	r0, r6
 2278 0096 FFF7FEFF 		bl	LedMatrix_DrawPoint
 2279              	.LVL256:
 381:component/lcd/lcd.c **** 		LedMatrix_DrawPoint(x0-a,y0-b,POINT_COLOR);             
 2280              		.loc 1 381 4 view .LVU653
 2281 009a A4EB0A04 		sub	r4, r4, r10
 2282 009e E4B2     		uxtb	r4, r4
 2283 00a0 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2284 00a2 4946     		mov	r1, r9
 2285 00a4 2046     		mov	r0, r4
 2286 00a6 FFF7FEFF 		bl	LedMatrix_DrawPoint
 2287              	.LVL257:
 382:component/lcd/lcd.c ****   		LedMatrix_DrawPoint(x0-b,y0-a,POINT_COLOR);     	         
 2288              		.loc 1 382 3 view .LVU654
 2289 00aa 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2290 00ac 0499     		ldr	r1, [sp, #16]
 2291 00ae 3046     		mov	r0, r6
 2292 00b0 FFF7FEFF 		bl	LedMatrix_DrawPoint
 2293              	.LVL258:
 383:component/lcd/lcd.c **** 		a++;
 2294              		.loc 1 383 5 view .LVU655
 2295 00b4 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2296 00b6 0599     		ldr	r1, [sp, #20]
 2297 00b8 2046     		mov	r0, r4
 2298 00ba FFF7FEFF 		bl	LedMatrix_DrawPoint
 2299              	.LVL259:
 384:component/lcd/lcd.c **** 		if(di<0)di +=4*a+6;	  
 2300              		.loc 1 384 3 view .LVU656
 384:component/lcd/lcd.c **** 		if(di<0)di +=4*a+6;	  
 2301              		.loc 1 384 4 is_stmt 0 view .LVU657
 2302 00be 08F10108 		add	r8, r8, #1
 2303              	.LVL260:
 2304              		.loc 1 385 3 is_stmt 1 view .LVU658
 2305              		.loc 1 385 5 is_stmt 0 view .LVU659
 2306 00c2 029A     		ldr	r2, [sp, #8]
 2307 00c4 002A     		cmp	r2, #0
 2308 00c6 A8DB     		blt	.L179
 386:component/lcd/lcd.c **** 		else
 387:component/lcd/lcd.c **** 		{
 388:component/lcd/lcd.c **** 			di+=10+4*(a-b);   
 2309              		.loc 1 388 4 is_stmt 1 view .LVU660
 2310              		.loc 1 388 15 is_stmt 0 view .LVU661
 2311 00c8 019A     		ldr	r2, [sp, #4]
 2312 00ca A8EB0203 		sub	r3, r8, r2
 2313              		.loc 1 388 12 view .LVU662
 2314 00ce 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccfCRRJc.s 			page 67


 2315              		.loc 1 388 10 view .LVU663
 2316 00d0 0A33     		adds	r3, r3, #10
 2317              		.loc 1 388 6 view .LVU664
 2318 00d2 0299     		ldr	r1, [sp, #8]
 2319 00d4 1944     		add	r1, r1, r3
 2320 00d6 0291     		str	r1, [sp, #8]
 2321              	.LVL261:
 389:component/lcd/lcd.c **** 			b--;
 2322              		.loc 1 389 4 is_stmt 1 view .LVU665
 2323              		.loc 1 389 5 is_stmt 0 view .LVU666
 2324 00d8 531E     		subs	r3, r2, #1
 2325 00da 0193     		str	r3, [sp, #4]
 2326              	.LVL262:
 2327              		.loc 1 389 5 view .LVU667
 2328 00dc A2E7     		b	.L173
 2329              	.LVL263:
 2330              	.L178:
 390:component/lcd/lcd.c **** 		}
 391:component/lcd/lcd.c **** 	}
 392:component/lcd/lcd.c **** }
 2331              		.loc 1 392 1 view .LVU668
 2332 00de 09B0     		add	sp, sp, #36
 2333              	.LCFI28:
 2334              		.cfi_def_cfa_offset 36
 2335              		@ sp needed
 2336 00e0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2337              	.LVL264:
 2338              	.L181:
 2339              		.loc 1 392 1 view .LVU669
 2340              		.align	2
 2341              	.L180:
 2342 00e4 00000000 		.word	.LANCHOR0
 2343              		.cfi_endproc
 2344              	.LFE413:
 2346              		.comm	lcdbuf,513,4
 2347              		.global	sw
 2348              		.global	BACK_COLOR
 2349              		.global	POINT_COLOR
 2350              		.comm	rollctrl,210,4
 2351              		.global	asc_num_1608
 2352              		.global	asc2_1608
 2353              		.global	asc2_1206
 2354              		.global	asc2_0806
 2355              		.global	GBK_16
 2356              		.global	font2size
 2357              		.section	.bss.BACK_COLOR,"aw",%nobits
 2358              		.set	.LANCHOR1,. + 0
 2361              	BACK_COLOR:
 2362 0000 00       		.space	1
 2363              		.section	.data.POINT_COLOR,"aw"
 2364              		.set	.LANCHOR0,. + 0
 2367              	POINT_COLOR:
 2368 0000 02       		.byte	2
 2369              		.section	.rodata.GBK_16,"a"
 2370              		.align	2
 2373              	GBK_16:
 2374 0000 00000000 		.ascii	"\000\000\000\000\000\004\001\004\001\010\021\020\021"
ARM GAS  /tmp/ccfCRRJc.s 			page 68


 2374      00040104 
 2374      01081110 
 2374      11
 2375 000d 601FC011 		.ascii	"`\037\300\021 \022\020\002\010\002\014\000\004\000\004"
 2375      20121002 
 2375      08020C00 
 2375      040004
 2376 001c 00000000 		.ascii	"\000\000\000\000"
 2377 0020 E5A4     		.ascii	"\345\244"
 2378 0022 00000000 		.ascii	"\000\000\000\000\000\000\000\200\010\200\020\2005\000"
 2378      00000080 
 2378      08801080 
 2378      3500
 2379 0030 15001500 		.ascii	"\025\000\025\000\021\370\000\004\000\002\000\002\000"
 2379      11F80004 
 2379      00020002 
 2379      00
 2380 003d 06000200 		.ascii	"\006\000\002\000\000"
 2380      00
 2381 0042 E6B0     		.ascii	"\346\260"
 2382 0044 00000000 		.ascii	"\000\000\000\000\001\000\013\004\027\370\031\000\021"
 2382      01000B04 
 2382      17F81900 
 2382      11
 2383 0051 00010203 		.ascii	"\000\001\002\003\344\014\030\023\340\024\010\027\374"
 2383      E40C1813 
 2383      E0140817 
 2383      FC
 2384 005e 00060000 		.ascii	"\000\006\000\000\000\000"
 2384      0000
 2385 0064 E9A2     		.ascii	"\351\242"
 2386 0066 00000020 		.ascii	"\000\000\000 \000 \002D?\376\004\200\004\000\037\376"
 2386      00200244 
 2386      3FFE0480 
 2386      04001FFE 
 2387 0076 104414A4 		.ascii	"\020D\024\244\026\230<\350\020\014\000\004\000\004\000"
 2387      16983CE8 
 2387      100C0004 
 2387      000400
 2388 0085 00       		.ascii	"\000"
 2389 0086 E68A     		.ascii	"\346\212"
 2390 0088 00000000 		.ascii	"\000\000\000\000\001\004\001\004\001\3709h-\3765\010"
 2390      01040104 
 2390      01F83968 
 2390      2DFE3508 
 2391 0098 35242658 		.ascii	"5$&X:\370\"\214\002\004\000\004\000\000\000\000"
 2391      3AF8228C 
 2391      02040004 
 2391      00000000 
 2392 00a8 E69C     		.ascii	"\346\234"
 2393 00aa 00000000 		.ascii	"\000\000\000\000\000\374\020@\020@\027\260\025\250u"
 2393      00FC1040 
 2393      104017B0 
 2393      15A875
 2394 00b9 A816B01C 		.ascii	"\250\026\260\034\240\020\202\020\202\020\376\000\200"
 2394      A0108210 
 2394      8210FE00 
ARM GAS  /tmp/ccfCRRJc.s 			page 69


 2394      80
 2395 00c6 00000000 		.ascii	"\000\000\000\000"
 2396 00ca E9AB     		.ascii	"\351\253"
 2397 00cc 00000080 		.ascii	"\000\000\000\200\001\000\002\004\035\3700\000\000\010"
 2397      01000204 
 2397      1DF83000 
 2397      0008
 2398 00da 07F008A0 		.ascii	"\007\360\010\240\037(1\310! \002\030\000\014\000\014"
 2398      1F2831C8 
 2398      21200218 
 2398      000C000C 
 2399 00ea 0000     		.ascii	"\000\000"
 2400 00ec E4BD     		.ascii	"\344\275"
 2401 00ee 00000000 		.ascii	"\000\000\000\000\002\014\020p\030D\000\004\020|\037"
 2401      020C1070 
 2401      18440004 
 2401      107C1F
 2402 00fd 44157816 		.ascii	"D\025x\026H\026t.D\030\370\000H\000\000\000\000"
 2402      4816742E 
 2402      4418F800 
 2402      48000000 
 2402      00
 2403 010e E6B8     		.ascii	"\346\270"
 2404 0110 00000004 		.ascii	"\000\000\000\004\000\010\0000\017\302\011\002\015\002"
 2404      00080030 
 2404      0FC20902 
 2404      0D02
 2405 011e 0FB46AC8 		.ascii	"\017\264j\310\033x\024D\022\006\000\002\000\002\000"
 2405      1B781444 
 2405      12060002 
 2405      000200
 2406 012d 020000   		.ascii	"\002\000\000"
 2407 0130 E5BA     		.ascii	"\345\272"
 2408 0132 00000000 		.ascii	"\000\000\000\000\002\034\020`\020\004\020\004\0374\025"
 2408      021C1060 
 2408      10041004 
 2408      1F3415
 2409 0141 BC15C41A 		.ascii	"\274\025\304\032\204\022\374>$\020\304\000\004\000\004"
 2409      8412FC3E 
 2409      2410C400 
 2409      040004
 2410 0150 0000     		.ascii	"\000\000"
 2411 0152 E6B9     		.ascii	"\346\271"
 2412 0154 00003000 		.ascii	"\000\0000\000H\0000\000\000\000\003\360\016\030\010"
 2412      48003000 
 2412      000003F0 
 2412      0E1808
 2413 0163 0C100410 		.ascii	"\014\020\004\020\004\020\004\020\004\010\014\0148\000"
 2413      04100410 
 2413      04080C0C 
 2413      3800
 2414 0171 000000   		.ascii	"\000\000\000"
 2415 0174 E284     		.ascii	"\342\204"
 2416 0176 00000080 		.ascii	"\000\000\000\200\000\200\010\240\012\270\011(+P\025"
 2416      008008A0 
 2416      0AB80928 
 2416      2B5015
ARM GAS  /tmp/ccfCRRJc.s 			page 70


 2417 0185 70010010 		.ascii	"p\001\000\020\000\037\376\022\000\025\000\031\340\000"
 2417      001FFE12 
 2417      00150019 
 2417      E000
 2418 0193 400000   		.ascii	"@\000\000"
 2419 0196 E983     		.ascii	"\351\203"
 2420 0198 00000000 		.ascii	"\000\000\000\000\000\200\001D\006H\034\260@\300@\206"
 2420      00800144 
 2420      06481CB0 
 2420      40C04086 
 2421 01a8 308608BC 		.ascii	"0\206\010\274\004\300\003\000\003\000\001\000\001\000"
 2421      04C00300 
 2421      03000100 
 2421      0100
 2422 01b6 0000     		.ascii	"\000\000"
 2423 01b8 E588     		.ascii	"\345\210"
 2424 01ba 00000000 		.ascii	"\000\000\000\000\017\360\011\020\020\020\037\340\001"
 2424      0FF00910 
 2424      10101FE0 
 2424      01
 2425 01c7 00010405 		.ascii	"\000\001\004\005\370m\260V\220\022\202\002\376\002\000"
 2425      F86DB056 
 2425      90128202 
 2425      FE0200
 2426 01d6 02000000 		.ascii	"\002\000\000\000"
 2427 01da E699     		.ascii	"\346\231"
 2428 01dc 00000000 		.ascii	"\000\000\000\000\000\000\017\370 \0000\000\003\340\022"
 2428      00000FF8 
 2428      20003000 
 2428      03E012
 2429 01eb A014A017 		.ascii	"\240\024\240\027\360\020\000 \004?\376\000\000\000\000"
 2429      F0100020 
 2429      043FFE00 
 2429      000000
 2430 01fa 0000     		.ascii	"\000\000"
 2431 01fc E997     		.ascii	"\351\227"
 2432 01fe 00000000 		.ascii	"\000\000\000\000\000\000\000\001\001\"\011\"\022D*\244"
 2432      00000001 
 2432      01220922 
 2432      12442AA4 
 2433 020e 65382990 		.ascii	"e8)\2200\240 \300\000\200\000\000\000\000\000\000"
 2433      30A020C0 
 2433      00800000 
 2433      00000000 
 2434 021e E5A4     		.ascii	"\345\244"
 2435 0220 00000000 		.ascii	"\000\000\000\000\000\200\000\204\000\214\010\270\011"
 2435      00800084 
 2435      008C08B8 
 2435      09
 2436 022d 48098811 		.ascii	"H\011\210\021\010\021\010\0210\001\030\001\014\001\000"
 2436      08110811 
 2436      30011801 
 2436      0C0100
 2437 023c 01000000 		.ascii	"\001\000\000\000"
 2438 0240 E4BA     		.ascii	"\344\272"
 2439 0242 00000000 		.ascii	"\000\000\000\000\000\000\037\370\021\000\037\0000\014"
 2439      00001FF8 
ARM GAS  /tmp/ccfCRRJc.s 			page 71


 2439      11001F00 
 2439      300C
 2440 0250 00301FC0 		.ascii	"\0000\037\300\022\200\020\200\020\004\037\376\000\000"
 2440      12801080 
 2440      10041FFE 
 2440      0000
 2441 025e 00000000 		.ascii	"\000\000\000\000"
 2442 0262 E998     		.ascii	"\351\230"
 2443 0264 00000000 		.ascii	"\000\000\000\000\006\000\004\000\006\274&\242(4?\274"
 2443      06000400 
 2443      06BC26A2 
 2443      28343FBC 
 2444 0274 28544D54 		.ascii	"(TMTHF\010|\024\000\010\000\000\000\000\000"
 2444      4846087C 
 2444      14000800 
 2444      00000000 
 2445 0284 E99B     		.ascii	"\351\233"
 2446 0286 00000000 		.ascii	"\000\000\000\000\037\374\020\000\037\0001\000\010\240"
 2446      1FFC1000 
 2446      1F003100 
 2446      08A0
 2447 0294 0BA00CA0 		.ascii	"\013\240\014\240;\376\011 \021 \021 \000 \000\000\000"
 2447      3BFE0920 
 2447      11201120 
 2447      00200000 
 2447      00
 2448 02a5 00       		.ascii	"\000"
 2449 02a6 E998     		.ascii	"\351\230"
 2450 02a8 00000000 		.ascii	"\000\000\000\000\001\360\001\000\011 \011 \011\000\037"
 2450      01F00100 
 2450      09200920 
 2450      09001F
 2451 02b7 F0120012 		.ascii	"\360\022\000\022\240\022\240\002\006\003\374\003\000"
 2451      A012A002 
 2451      0603FC03 
 2451      00
 2452 02c4 00000000 		.ascii	"\000\000\000\000"
 2453 02c8 E99B     		.ascii	"\351\233"
 2454 02ca 00000080 		.ascii	"\000\000\000\200\001\000\002\010\035\360\020 \000 \005"
 2454      01000208 
 2454      1DF01020 
 2454      002005
 2455 02d9 4001407F 		.ascii	"@\001@\177\376!@\005@\030@\000@\000\000\000\000"
 2455      FE214005 
 2455      40184000 
 2455      40000000 
 2455      00
 2456 02ea E4BC     		.ascii	"\344\274"
 2457 02ec 00000000 		.ascii	"\000\000\000\000\010 \010@\010\200\011\014\017\360y"
 2457      08200840 
 2457      0880090C 
 2457      0FF079
 2458 02fb 5049400A 		.ascii	"PI@\012\000\013\376\020\000\020\000\020\000\000\000"
 2458      000BFE10 
 2458      00100010 
 2458      000000
 2459 030a 0000     		.ascii	"\000\000"
ARM GAS  /tmp/ccfCRRJc.s 			page 72


 2460 030c E69C     		.ascii	"\346\234"
 2461 030e 00000010 		.ascii	"\000\000\000\020\010p\006\210\001\020\001`\003\200\001"
 2461      08700688 
 2461      01100160 
 2461      038001
 2462 031d 043FFE01 		.ascii	"\004?\376\001\200\002@\014 \0040\000\020\000\020\000"
 2462      8002400C 
 2462      20043000 
 2462      10001000 
 2463 032d 00       		.ascii	"\000"
 2464 032e E586     		.ascii	"\345\206"
 2465 0330 00000000 		.ascii	"\000\000\000\000\006\000\010 \015|(\252(\262?\252(\222"
 2465      06000820 
 2465      0D7C28AA 
 2465      28B23FAA 
 2465      2892
 2466 0342 2AF20C82 		.ascii	"*\362\014\202\020\002\030\002\010\014\000\000\000\000"
 2466      10021802 
 2466      080C0000 
 2466      0000
 2467 0350 E99B     		.ascii	"\351\233"
 2468 0352 00000000 		.ascii	"\000\000\000\000\000`\000\300\000\000\000\000\000\010"
 2468      006000C0 
 2468      00000000 
 2468      0008
 2469 0360 378C1878 		.ascii	"7\214\030x\000\000\000\000\001\000\001\200\000\300\000"
 2469      00000000 
 2469      01000180 
 2469      00C000
 2470 036f 000000   		.ascii	"\000\000\000"
 2471 0372 E5B0     		.ascii	"\345\260"
 2472 0374 00000000 		.ascii	"\000\000\000\000\000\000\007\000\004\300\004@\004@\177"
 2472      00000700 
 2472      04C00440 
 2472      04407F
 2473 0383 FE248004 		.ascii	"\376$\200\004\200\010\200\015\200\016\000\000\000\000"
 2473      8008800D 
 2473      800E0000 
 2473      0000
 2474 0391 000000   		.ascii	"\000\000\000"
 2475 0394 E4B8     		.ascii	"\344\270"
 2476 0396 00000000 		.ascii	"\000\000\000\000\001 \016 \002@?\374\004\200\001@\001"
 2476      01200E20 
 2476      02403FFC 
 2476      04800140 
 2476      01
 2477 03a7 6001507E 		.ascii	"`\001P~B\013\376\012\200\002\200\002\000\000\000"
 2477      420BFE0A 
 2477      80028002 
 2477      000000
 2478 03b6 E789     		.ascii	"\347\211"
 2479 03b8 00000000 		.ascii	"\000\000\000\000\000\000\001\002\001\004\001\010\001"
 2479      00000102 
 2479      01040108 
 2479      01
 2480 03c5 303FC001 		.ascii	"0?\300\001`\002\020\002\014\002\004\002\004\000\002"
 2480      60021002 
ARM GAS  /tmp/ccfCRRJc.s 			page 73


 2480      0C020402 
 2480      040002
 2481 03d4 00000000 		.ascii	"\000\000\000\000"
 2482 03d8 E5A4     		.ascii	"\345\244"
 2483 03da 00000000 		.ascii	"\000\000\000\000\000\010\000T1d/\3305\2426\276+\270"
 2483      00080054 
 2483      31642FD8 
 2483      35A236BE 
 2483      2BB8
 2484 03ec 4ED432A4 		.ascii	"N\3242\244\001\020\000\030\000\010\000\000\000\000"
 2484      01100018 
 2484      00080000 
 2484      0000
 2485 03fa E69A     		.ascii	"\346\232"
 2486 03fc 00000000 		.ascii	"\000\000\000\000\001\360\001\000\011 \011 \011\000\037"
 2486      01F00100 
 2486      09200920 
 2486      09001F
 2487 040b F0120012 		.ascii	"\360\022\000\022\240\022\240\002\006\003\374\003\000"
 2487      A012A002 
 2487      0603FC03 
 2487      00
 2488 0418 00000000 		.ascii	"\000\000\000\000"
 2489 041c E99B     		.ascii	"\351\233"
 2490 041e 00000000 		.ascii	"\000\000\000\000\0000\030`\011\200\000\014\000\330\007"
 2490      00301860 
 2490      0980000C 
 2490      00D807
 2491 042d 400C847B 		.ascii	"@\014\204{\376\012\200\010\240\010\220\000\230\000\000"
 2491      FE0A8008 
 2491      A0089000 
 2491      980000
 2492 043c 0000     		.ascii	"\000\000"
 2493 043e E586     		.ascii	"\345\206"
 2494 0440 00000000 		.ascii	"\000\000\000\000\000@\000B\000D\005H\004\260\177\300"
 2494      00400042 
 2494      00440548 
 2494      04B07FC0 
 2495 0450 09A00A98 		.ascii	"\011\240\012\230\016\214\000\206\000\206\000\202\000"
 2495      0E8C0086 
 2495      00860082 
 2495      00
 2496 045d 000000   		.ascii	"\000\000\000"
 2497 0460 E5A4     		.ascii	"\345\244"
 2498 0462 00000000 		.ascii	"\000\000\000\000\003\000\004\000\006\242\007\252$*?"
 2498      03000400 
 2498      06A207AA 
 2498      242A3F
 2499 0471 AA242A26 		.ascii	"\252$*&*\012\274\0100\014\000\004\000\004\000\000\000"
 2499      2A0ABC08 
 2499      300C0004 
 2499      00040000 
 2499      00
 2500 0482 E99B     		.ascii	"\351\233"
 2501 0484 00000000 		.ascii	"\000\000\000\000\003\034\020`\020 \010 \014 \021@*B"
 2501      031C1060 
 2501      10200820 
ARM GAS  /tmp/ccfCRRJc.s 			page 74


 2501      0C201140 
 2501      2A42
 2502 0496 6AFE2740 		.ascii	"j\376'@\012@\020@\000@\000@\000\000"
 2502      0A401040 
 2502      00400040 
 2502      0000
 2503 04a4 E6B5     		.ascii	"\346\265"
 2504 04a6 00000000 		.ascii	"\000\000\000\000\000\000\003\002\006\002\000\022\000"
 2504      00000302 
 2504      06020012 
 2504      00
 2505 04b3 143F9C00 		.ascii	"\024?\234\000d\000$\010$\010\004\004\004\000\004\000"
 2505      64002408 
 2505      24080404 
 2505      04000400 
 2506 04c3 000000   		.ascii	"\000\000\000"
 2507 04c6 E5B0     		.ascii	"\345\260"
 2508 04c8 00000020 		.ascii	"\000\000\000 \000@\002H\013\3644\210\004\000\000\024"
 2508      00400248 
 2508      0BF43488 
 2508      04000014 
 2509 04d8 01640B98 		.ascii	"\001d\013\230\025$\031\306\021\006\001\370\001\000\000"
 2509      152419C6 
 2509      110601F8 
 2509      010000
 2510 04e7 00       		.ascii	"\000"
 2511 04e8 E689     		.ascii	"\346\211"
 2512 04ea 00000000 		.ascii	"\000\000\000\000\003\304\022B\022~\034@\020\004\000"
 2512      03C41242 
 2512      127E1C40 
 2512      100400
 2513 04f9 C41CA414 		.ascii	"\304\034\244\024\244\027\370\024\250\031X\021\214\000"
 2513      A417F814 
 2513      A8195811 
 2513      8C00
 2514 0507 000000   		.ascii	"\000\000\000"
 2515 050a E5BC     		.ascii	"\345\274"
 2516 050c 00000000 		.ascii	"\000\000\000\000\002\020\021p\030B\000\002\001\202\000"
 2516      02101170 
 2516      18420002 
 2516      018200
 2517 051b 0400083F 		.ascii	"\004\000\010?\220\000 \001\300\004\000\004\000\000\000"
 2517      90002001 
 2517      C0040004 
 2517      000000
 2518 052a 0000     		.ascii	"\000\000"
 2519 052c E6B2     		.ascii	"\346\262"
 2520 052e 00000000 		.ascii	"\000\000\000\000\000\000\003\002\006\002\000\022\000"
 2520      00000302 
 2520      06020012 
 2520      00
 2521 053b 143F9C00 		.ascii	"\024?\234\000d\000$\010$\010\004\004\004\000\004\000"
 2521      64002408 
 2521      24080404 
 2521      04000400 
 2522 054b 000000   		.ascii	"\000\000\000"
 2523 054e E5B0     		.ascii	"\345\260"
ARM GAS  /tmp/ccfCRRJc.s 			page 75


 2524 0550 00000000 		.ascii	"\000\000\000\000\000\010\000T1d/\3305\2426\276+\270"
 2524      00080054 
 2524      31642FD8 
 2524      35A236BE 
 2524      2BB8
 2525 0562 4ED432A4 		.ascii	"N\3242\244\001\020\000\030\000\010\000\000\000\000"
 2525      01100018 
 2525      00080000 
 2525      0000
 2526 0570 E69A     		.ascii	"\346\232"
 2527 0572 00000000 		.ascii	"\000\000\000\000\016\010\010P\012R\014\254+\270=j)\323"
 2527      0E080850 
 2527      0A520CAC 
 2527      2BB83D6A 
 2527      29D3
 2528 0584 1B3C1028 		.ascii	"\033<\020(\0200\030\020\000\020\000\000\000\000"
 2528      10301810 
 2528      00100000 
 2528      0000
 2529 0592 E99B     		.ascii	"\351\233"
 2530 0594 00000004 		.ascii	"\000\000\000\004\000\224\014\250\011\362/~(\202>\342"
 2530      00940CA8 
 2530      09F22F7E 
 2530      28823EE2 
 2531 05a4 289A58FC 		.ascii	"(\232X\374\023l\021d\031\204\020\004\000\000\000\000"
 2531      136C1164 
 2531      19841004 
 2531      00000000 
 2532 05b4 E99C     		.ascii	"\351\234"
 2533 05b6 00000004 		.ascii	"\000\000\000\004\000\010\000p\037\210\020\020\021 \020"
 2533      00080070 
 2533      1F881010 
 2533      112010
 2534 05c5 C01F6024 		.ascii	"\300\037`$0/\3400\030\000\014\000\004\000\034\000\000"
 2534      302FE030 
 2534      18000C00 
 2534      04001C00 
 2534      00
 2535 05d6 E9A3     		.ascii	"\351\243"
 2536 05d8 00000008 		.ascii	"\000\000\000\010\003\360\014\020\021`\023\300\024 \037"
 2536      03F00C10 
 2536      116013C0 
 2536      14201F
 2537 05e7 F000481F 		.ascii	"\360\000H\037\224\025d\025\204\037\244\000\204\000\214"
 2537      94156415 
 2537      841FA400 
 2537      84008C
 2538 05f6 0000     		.ascii	"\000\000"
 2539 05f8 E9A3     		.ascii	"\351\243"
 2540 05fa 00000030 		.ascii	"\000\000\0000\010`\010\200\000\200\001 \002 \015(x\254"
 2540      08600880 
 2540      00800120 
 2540      02200D28 
 2540      78AC
 2541 060c 04360260 		.ascii	"\0046\002`\003\000\001\000\000\200\000\000\000\000"
 2541      03000100 
 2541      00800000 
ARM GAS  /tmp/ccfCRRJc.s 			page 76


 2541      0000
 2542 061a E586     		.ascii	"\345\206"
 2543 061c 00000000 		.ascii	"\000\000\000\000\000\202\000\214\005 ?\340\011\034\010"
 2543      0082008C 
 2543      05203FE0 
 2543      091C08
 2544 062b 2005C07F 		.ascii	" \005\300\177\214\004\000\017\300\010(\000d\000\000"
 2544      8C04000F 
 2544      C0082800 
 2544      640000
 2545 063a 0000     		.ascii	"\000\000"
 2546 063c E783     		.ascii	"\347\203"
 2547 063e 00000000 		.ascii	"\000\000\000\000\000\010\001\010\001\020\001`\005\200"
 2547      00080108 
 2547      01100160 
 2547      0580
 2548 064c 7FFF0A80 		.ascii	"\177\377\012\200\002`\0020\000\030\000\030\000\010\000"
 2548      02600230 
 2548      00180018 
 2548      000800
 2549 065b 080000   		.ascii	"\010\000\000"
 2550 065e E69C     		.ascii	"\346\234"
 2551 0660 00000040 		.ascii	"\000\000\000@\001D\002H\014p3\300\004\240\004\230\000"
 2551      01440248 
 2551      0C7033C0 
 2551      04A00498 
 2551      00
 2552 0671 8001F001 		.ascii	"\200\001\360\001\020\001\020\002 \003\340\001\000\000"
 2552      10011002 
 2552      2003E001 
 2552      0000
 2553 067f 00       		.ascii	"\000"
 2554 0680 E79F     		.ascii	"\347\237"
 2555 0682 00000040 		.ascii	"\000\000\000@\000@\000\200\003 \006 \030 q\"\021L\010"
 2555      00400080 
 2555      03200620 
 2555      18207122 
 2555      114C08
 2556 0695 70040003 		.ascii	"p\004\000\003\000\001\200\001\200\000\200\000\000"
 2556      00018001 
 2556      80008000 
 2556      00
 2557 06a2 E4BB     		.ascii	"\344\273"
 2558 06a4 00000000 		.ascii	"\000\000\000\000\015\340\012@\012@\020B\017\304\000"
 2558      0DE00A40 
 2558      0A401042 
 2558      0FC400
 2559 06b3 183BE014 		.ascii	"\030;\340\024\200$\200$\2047\0168\370\000\000\000\000"
 2559      80248024 
 2559      84370E38 
 2559      F8000000 
 2559      00
 2560 06c4 E698     		.ascii	"\346\230"
 2561 06c6 00000004 		.ascii	"\000\000\000\004\000\010\0000\017\300\0150\011,\011"
 2561      00080030 
 2561      0FC00D30 
 2561      092C09
ARM GAS  /tmp/ccfCRRJc.s 			page 77


 2562 06d5 24112431 		.ascii	"$\021$1$\"D\002|\002`\002\000\000\000\000\000"
 2562      24224402 
 2562      7C026002 
 2562      00000000 
 2562      00
 2563 06e6 E590     		.ascii	"\345\220"
 2564 06e8 00000000 		.ascii	"\000\000\000\000\000\004\001\004\001\010\021\020\021"
 2564      00040104 
 2564      01081110 
 2564      11
 2565 06f5 601FC011 		.ascii	"`\037\300\021 \022\020\002\010\002\014\000\004\000\004"
 2565      20121002 
 2565      08020C00 
 2565      040004
 2566 0704 00000000 		.ascii	"\000\000\000\000"
 2567 0708 E5A4     		.ascii	"\345\244"
 2568 070a 00000000 		.ascii	"\000\000\000\000\000\204\000\210\000\260 \340<\220*"
 2568      00840088 
 2568      00B020E0 
 2568      3C902A
 2569 0719 9023F825 		.ascii	"\220#\370%$9D\001\006\001\002\000\002\000\000\000\000"
 2569      24394401 
 2569      06010200 
 2569      02000000 
 2569      00
 2570 072a E698     		.ascii	"\346\230"
 2571 072c 00000000 		.ascii	"\000\000\000\000\000\020\002 \014@\010\200\013~}\004"
 2571      00100220 
 2571      0C400880 
 2571      0B7E7D04 
 2572 073c 288808C0 		.ascii	"(\210\010\300\0170\031\030\010\010\000\010\000\010\000"
 2572      0F301918 
 2572      08080008 
 2572      000800
 2573 074b 00       		.ascii	"\000"
 2574 074c E586     		.ascii	"\345\206"
 2575 074e 00000020 		.ascii	"\000\000\000 \000 \000\300\001\004\006\014\0008 \310"
 2575      002000C0 
 2575      0104060C 
 2575      003820C8 
 2576 075e 10080C08 		.ascii	"\020\010\014\010\002\034\001\204\000\200\000\200\000"
 2576      021C0184 
 2576      00800080 
 2576      00
 2577 076b 000000   		.ascii	"\000\000\000"
 2578 076e E585     		.ascii	"\345\205"
 2579 0770 00000004 		.ascii	"\000\000\000\004\000\010\0000\037\300\020\004\021\010"
 2579      00080030 
 2579      1FC01004 
 2579      1108
 2580 077e 11301FC0 		.ascii	"\0210\037\300\025\004\022\006#\374#\000\000\000\000"
 2580      15041206 
 2580      23FC2300 
 2580      000000
 2581 078d 000000   		.ascii	"\000\000\000"
 2582 0790 E58E     		.ascii	"\345\216"
 2583 0792 00000000 		.ascii	"\000\000\000\000\000@\004@\004@\033\300j@\022@\037\377"
ARM GAS  /tmp/ccfCRRJc.s 			page 78


 2583      00400440 
 2583      04401BC0 
 2583      6A401240 
 2583      1FFF
 2584 07a4 12801280 		.ascii	"\022\200\022\200\004\200\000\200\000\200\000\200\000"
 2584      04800080 
 2584      00800080 
 2584      00
 2585 07b1 00       		.ascii	"\000"
 2586 07b2 E5B9     		.ascii	"\345\271"
 2587 07b4 00000000 		.ascii	"\000\000\000\000\000\004\000\004\001x\011\210\010\010"
 2587      00040004 
 2587      01780988 
 2587      0808
 2588 07c2 080817F8 		.ascii	"\010\010\027\370\020\210\021\010\021\010\000\010\000"
 2588      10881108 
 2588      11080008 
 2588      00
 2589 07cf 08000800 		.ascii	"\010\000\010\000\000"
 2589      00
 2590 07d4 E6AD     		.ascii	"\346\255"
 2591 07d6 0000000C 		.ascii	"\000\000\000\014\000\360\037@\022D\037\374\001\000\001"
 2591      00F01F40 
 2591      12441FFC 
 2591      010001
 2592 07e5 001F7815 		.ascii	"\000\037x\025T\012h=\204\012~\012\000\002\000\000\000"
 2592      540A683D 
 2592      840A7E0A 
 2592      00020000 
 2592      00
 2593 07f6 E885     		.ascii	"\350\205"
 2594 07f8 00000000 		.ascii	"\000\000\000\000\000\002\000\004\000\030\021\340\036"
 2594      00020004 
 2594      001811E0 
 2594      1E
 2595 0805 40124012 		.ascii	"@\022@\022\200 \004?\3760\000\000\000\000\000\000\000"
 2595      8020043F 
 2595      FE300000 
 2595      00000000 
 2595      00
 2596 0816 0000     		.ascii	"\000\000"
 2597 0818 E69C     		.ascii	"\346\234"
 2598 081a 00000000 		.ascii	"\000\000\000\000\000\000\000\000\014p\013\210\010\210"
 2598      00000000 
 2598      0C700B88 
 2598      0888
 2599 0828 09101110 		.ascii	"\011\020\021\020\020\010\037\374\030\000\000\000\000"
 2599      10081FFC 
 2599      18000000 
 2599      00
 2600 0835 00000000 		.ascii	"\000\000\000\000\000"
 2600      00
 2601 083a E697     		.ascii	"\346\227"
 2602 083c 00000000 		.ascii	"\000\000\000\000\000\"\000\"\000\302\034\322\032R\032"
 2602      00220022 
 2602      00C21CD2 
 2602      1A521A
ARM GAS  /tmp/ccfCRRJc.s 			page 79


 2603 084b 541BFC22 		.ascii	"T\033\374\"\224$\2048\204\000\004\000\004\000\004\000"
 2603      94248438 
 2603      84000400 
 2603      04000400 
 2604 085b 00       		.ascii	"\000"
 2605 085c E698     		.ascii	"\346\230"
 2606 085e 00000020 		.ascii	"\000\000\000 \000$\000(\037\360\012\240\012\240?\331"
 2606      00240028 
 2606      1FF00AA0 
 2606      0AA03FD9 
 2607 086e 00460018 		.ascii	"\000F\000\030\017\340\011@\011D\037\376\000\000\000"
 2607      0FE00940 
 2607      09441FFE 
 2607      000000
 2608 087d 00       		.ascii	"\000"
 2609 087e E69C     		.ascii	"\346\234"
 2610 0880 00000008 		.ascii	"\000\000\000\010\006\010\010\020\015(-H)\324?6(\230"
 2610      06080810 
 2610      0D282D48 
 2610      29D43F36 
 2610      2898
 2611 0892 4D500C20 		.ascii	"MP\014 \020 \030\020\010\020\000\020\000\000"
 2611      10201810 
 2611      08100010 
 2611      0000
 2612 08a0 E99B     		.ascii	"\351\233"
 2613 08a2 00000080 		.ascii	"\000\000\000\200\000\200\000\200\000\200\000\200\000"
 2613      00800080 
 2613      00800080 
 2613      00
 2614 08af 80008000 		.ascii	"\200\000\200\000\200\001\000\001\000\001\000\001\000"
 2614      80010001 
 2614      00010001 
 2614      00
 2615 08bc 01000100 		.ascii	"\001\000\001\000\000\000"
 2615      0000
 2616 08c2 E4B8     		.ascii	"\344\270"
 2617 08c4 00000000 		.ascii	"\000\000\000\000\000\010\000\020\000\020\004\020\004"
 2617      00080010 
 2617      00100410 
 2617      04
 2618 08d1 10041008 		.ascii	"\020\004\020\010\020\010\020\010\020\010\020\0000\000"
 2618      10081008 
 2618      10081000 
 2618      3000
 2619 08df 30001000 		.ascii	"0\000\020\000\000"
 2619      00
 2620 08e4 E4BA     		.ascii	"\344\272"
 2621 08e6 00000000 		.ascii	"\000\000\000\000\000\010\000\010\000\010\010\210\010"
 2621      00080008 
 2621      00080888 
 2621      08
 2622 08f3 88088818 		.ascii	"\210\010\210\030\210\021\010\021\010\020\020\000\020"
 2622      88110811 
 2622      08101000 
 2622      10
 2623 0900 00180008 		.ascii	"\000\030\000\010\000\000"
ARM GAS  /tmp/ccfCRRJc.s 			page 80


 2623      0000
 2624 0906 E4B8     		.ascii	"\344\270"
 2625 0908 00000000 		.ascii	"\000\000\000\000\007\000\004\360\004P\005\220\016\020"
 2625      070004F0 
 2625      04500590 
 2625      0E10
 2626 0916 08100F10 		.ascii	"\010\020\017\020\010\240\010\240\010\230\030\360\017"
 2626      08A008A0 
 2626      089818F0 
 2626      0F
 2627 0923 00000000 		.ascii	"\000\000\000\000\000"
 2627      00
 2628 0928 E59B     		.ascii	"\345\233"
 2629 092a 00000004 		.ascii	"\000\000\000\004\000\004\000\004\000\204\010\230\010"
 2629      00040004 
 2629      00840898 
 2629      08
 2630 0937 E80F0810 		.ascii	"\350\017\010\020\210\021\030\021\350\020\210\000\010"
 2630      88111811 
 2630      E8108800 
 2630      08
 2631 0944 00080008 		.ascii	"\000\010\000\010\000\000"
 2631      0000
 2632 094a E4BA     		.ascii	"\344\272"
 2633 094c 00000000 		.ascii	"\000\000\000\000\001\004\001\004\001\030\0010\001 \021"
 2633      01040104 
 2633      01180130 
 2633      012011
 2634 095b 00090002 		.ascii	"\000\011\000\002@\002 \0020\002\030\002\000\002\000"
 2634      40022002 
 2634      30021802 
 2634      000200
 2635 096a 0000     		.ascii	"\000\000"
 2636 096c E585     		.ascii	"\345\205"
 2637 096e 00000000 		.ascii	"\000\000\000\000\000@\000@\000\200\000\200?\360\001"
 2637      00400040 
 2637      00800080 
 2637      3FF001
 2638 097d 08010802 		.ascii	"\010\001\010\002\010\002\010\002\010\004\010\004\030"
 2638      08020802 
 2638      08040804 
 2638      18
 2639 098a 00000000 		.ascii	"\000\000\000\000"
 2640 098e E4B8     		.ascii	"\344\270"
 2641 0990 00000008 		.ascii	"\000\000\000\010\000\020\000 \000@\001\200\000\000\010"
 2641      00100020 
 2641      00400180 
 2641      000008
 2642 099f 00060001 		.ascii	"\000\006\000\001\200\000\300\0000\000\020\000\020\000"
 2642      8000C000 
 2642      30001000 
 2642      1000
 2643 09ad 000000   		.ascii	"\000\000\000"
 2644 09b0 E585     		.ascii	"\345\205"
 2645 09b2 00000004 		.ascii	"\000\000\000\004\000\010\001\020\002 \002\300?\000\""
 2645      00080110 
 2645      022002C0 
ARM GAS  /tmp/ccfCRRJc.s 			page 81


 2645      3F0022
 2646 09c1 0004F007 		.ascii	"\000\004\360\007\010\004\004\000\004\000\004\000\014"
 2646      08040400 
 2646      04000400 
 2646      0C
 2647 09ce 003C0000 		.ascii	"\000<\000\000"
 2648 09d2 E4B9     		.ascii	"\344\271"
 2649 09d4 00000000 		.ascii	"\000\000\000\000\001\000\001\000\001\000\001\000\002"
 2649      01000100 
 2649      01000100 
 2649      02
 2650 09e1 00620C3F 		.ascii	"\000b\014?\360\002\000\002\000\002\000\002\000\002\000"
 2650      F0020002 
 2650      00020002 
 2650      000200
 2651 09f0 00000000 		.ascii	"\000\000\000\000"
 2652 09f4 E58D     		.ascii	"\345\215"
 2653 09f6 00000010 		.ascii	"\000\000\000\020\002 \002@\002\200\005\376&\200\005"
 2653      02200240 
 2653      028005FE 
 2653      268005
 2654 0a05 48001000 		.ascii	"H\000\020\000`\003\200\006\010\004\030\007\360\004\000"
 2654      60038006 
 2654      08041807 
 2654      F00400
 2655 0a14 0000     		.ascii	"\000\000"
 2656 0a16 E588     		.ascii	"\345\210"
 2657 0a18 00000100 		.ascii	"\000\000\001\000\001\000\001\000\017\240\001X\001D\002"
 2657      01000100 
 2657      0FA00158 
 2657      014402
 2658 0a27 48020802 		.ascii	"H\002\010\002\014?\370\002\000\002\000\002\000\000\000"
 2658      0C3FF802 
 2658      00020002 
 2658      000000
 2659 0a36 0000     		.ascii	"\000\000"
 2660 0a38 E794     		.ascii	"\347\224"
 2661 0a3a 00000000 		.ascii	"\000\000\000\000\004\000\007\300\004\240\005 ?\370%"
 2661      040007C0 
 2661      04A00520 
 2661      3FF825
 2662 0a49 44054408 		.ascii	"D\005D\010D\017\204\016\004\000\004\000\034\000\000"
 2662      440F840E 
 2662      04000400 
 2662      1C0000
 2663 0a58 0000     		.ascii	"\000\000"
 2664 0a5a E794     		.ascii	"\347\224"
 2665 0a5c 00000004 		.ascii	"\000\000\000\004\000\030\000`\037\210\020\010\020\010"
 2665      00180060 
 2665      1F881008 
 2665      1008
 2666 0a6a 108810B8 		.ascii	"\020\210\020\270\027\310\021\010!H\000(\000\010\000"
 2666      17C81108 
 2666      21480028 
 2666      000800
 2667 0a79 080000   		.ascii	"\010\000\000"
 2668 0a7c E58E     		.ascii	"\345\216"
ARM GAS  /tmp/ccfCRRJc.s 			page 82


 2669 0a7e 00000200 		.ascii	"\000\000\002\000\003\034\020\360\010\000\000\004\000"
 2669      031C10F0 
 2669      08000004 
 2669      00
 2670 0a8b B805800E 		.ascii	"\270\005\200\016\374)\000\013x\013\004\010\004\000\004"
 2670      FC29000B 
 2670      780B0408 
 2670      040004
 2671 0a9a 000C0000 		.ascii	"\000\014\000\000"
 2672 0a9e E6B5     		.ascii	"\346\265"
 2673 0aa0 00000020 		.ascii	"\000\000\000 \004 \004 \007\300\004D\010H\002\220\002"
 2673      04200420 
 2673      07C00444 
 2673      08480290 
 2673      02
 2674 0ab1 2003C03E 		.ascii	" \003\300>\014\002\014\004x\007\200\000\000\000\000"
 2674      0C020C04 
 2674      78078000 
 2674      000000
 2675 0ac0 E58A     		.ascii	"\345\212"
 2676 0ac2 00000020 		.ascii	"\000\000\000 \000 \005\240\006 \022\240\035\240v\276"
 2676      002005A0 
 2676      062012A0 
 2676      1DA076BE 
 2677 0ad2 25602920 		.ascii	"%`)   \012 \001@\000@\000@\000\000"
 2677      20200A20 
 2677      01400040 
 2677      00400000 
 2678 0ae2 E78E     		.ascii	"\347\216"
 2679 0ae4 00000000 		.ascii	"\000\000\000\000\001\002\001\002\001\302>\2526\3326"
 2679      01020102 
 2679      01C23EAA 
 2679      36DA36
 2680 0af3 FE36AA2B 		.ascii	"\3766\252+*3\302\"\202\002\002\002\000\002\000\000\000"
 2680      2A33C222 
 2680      82020202 
 2680      00020000 
 2680      00
 2681 0b04 E987     		.ascii	"\351\207"
 2682 0b06 00000000 		.ascii	"\000\000\000\000\000\000\037\374\020 \021@\023\200\024"
 2682      00001FFC 
 2682      10201140 
 2682      138014
 2683 0b15 4011C013 		.ascii	"@\021\300\023\000\024\2100\004\037\374\000\000\000\000"
 2683      00148830 
 2683      041FFC00 
 2683      000000
 2684 0b24 0000     		.ascii	"\000\000"
 2685 0b26 E7BD     		.ascii	"\347\275"
 2686 0b28 00000008 		.ascii	"\000\000\000\010\002H\015\310\021P\006\020\000 \002"
 2686      02480DC8 
 2686      11500610 
 2686      002002
 2687 0b37 5C0D5235 		.ascii	"\\\015R5\222\007\244\004\\\000P\000 \000\000\000\000"
 2687      9207A404 
 2687      5C005000 
 2687      20000000 
ARM GAS  /tmp/ccfCRRJc.s 			page 83


 2687      00
 2688 0b48 E7BB     		.ascii	"\347\273"
 2689 0b4a 00000000 		.ascii	"\000\000\000\000\000\000\003\370\021\010\021\004\021"
 2689      000003F8 
 2689      11081104 
 2689      11
 2690 0b57 0412043C 		.ascii	"\004\022\004<\004\020\004\000\004\000\014\000\010\000"
 2690      04100400 
 2690      04000C00 
 2690      0800
 2691 0b65 38000000 		.ascii	"8\000\000\000\000"
 2691      00
 2692 0b6a E5B7     		.ascii	"\345\267"
 2693 0b6c 00000008 		.ascii	"\000\000\000\010\000\010\021\370\010\010\000H\011D\017"
 2693      000811F8 
 2693      08080048 
 2693      09440F
 2694 0b7b 4479442F 		.ascii	"DyD/\374\021F\022F\000F\000\204\000\004\000\000"
 2694      FC114612 
 2694      46004600 
 2694      84000400 
 2694      00
 2695 0b8c E8BF     		.ascii	"\350\277"
 2696 0b8e 00000020 		.ascii	"\000\000\000 \002 \002@\177\376\004\240\000\"\000\242"
 2696      02200240 
 2696      7FFE04A0 
 2696      002200A2 
 2697 0b9e 07B424EC 		.ascii	"\007\264$\354;8\014\250\011$\001B\000@\000\000"
 2697      3B380CA8 
 2697      09240142 
 2697      00400000 
 2698 0bae E68E     		.ascii	"\346\216"
 2699 0bb0 00000000 		.ascii	"\000\000\000\000\017\370\012H\006\220?\360\012\224\020"
 2699      0FF80A48 
 2699      06903FF0 
 2699      0A9410
 2700 0bbf 98003007 		.ascii	"\230\0000\007\300\011\000\021~1\200\002\000\000\000"
 2700      C0090011 
 2700      7E318002 
 2700      000000
 2701 0bce 0000     		.ascii	"\000\000"
 2702 0bd0 E696     		.ascii	"\346\226"
 2703 0bd2 00000100 		.ascii	"\000\000\001\000\001\000\001\004\001\030\011\340\037"
 2703      01000104 
 2703      011809E0 
 2703      1F
 2704 0bdf 00110011 		.ascii	"\000\021\000\021\000\037\374\021\000\021\000\002\000"
 2704      001FFC11 
 2704      00110002 
 2704      00
 2705 0bec 02000000 		.ascii	"\002\000\000\000\000\000"
 2705      0000
 2706 0bf2 E5BC     		.ascii	"\345\274"
 2707 0bf4 00000000 		.ascii	"\000\000\000\000\000@\000@\000D<H\027\360)@)@9@\"\376"
 2707      00400040 
 2707      00443C48 
 2707      17F02940 
ARM GAS  /tmp/ccfCRRJc.s 			page 84


 2707      29403940 
 2708 0c0a 06400280 		.ascii	"\006@\002\200\000\200\000\200\000\000"
 2708      00800080 
 2708      0000
 2709 0c14 E5BC     		.ascii	"\345\274"
 2710 0c16 00000000 		.ascii	"\000\000\000\000\003\000\004\000$8\027 \006\240z\377"
 2710      03000400 
 2710      24381720 
 2710      06A07AFF 
 2711 0c26 0AC01B48 		.ascii	"\012\300\033H*L*x\014\000\014\000\000\000\000\000"
 2711      2A4C2A78 
 2711      0C000C00 
 2711      00000000 
 2712 0c36 E5B8     		.ascii	"\345\270"
 2713 0c38 00000000 		.ascii	"\000\000\000\000\004\000\004\002\005\302\005\"\025\252"
 2713      04000402 
 2713      05C20522 
 2713      15AA
 2714 0c46 3FFC2A54 		.ascii	"?\374*TjT\013\304\013\004\010\004\010\000\010\000\000"
 2714      6A540BC4 
 2714      0B040804 
 2714      08000800 
 2714      00
 2715 0c57 00       		.ascii	"\000"
 2716 0c58 E987     		.ascii	"\351\207"
 2717 0c5a 00000008 		.ascii	"\000\000\000\010\000\010\021\370\010\010\000H\011D\017"
 2717      000811F8 
 2717      08080048 
 2717      09440F
 2718 0c69 4479442F 		.ascii	"DyD/\374\021F\022F\000F\000\204\000\004\000\000"
 2718      FC114612 
 2718      46004600 
 2718      84000400 
 2718      00
 2719 0c7a E8BF     		.ascii	"\350\277"
 2720 0c7c 00000000 		.ascii	"\000\000\000\000\000\004\001\010\001\020\021`\023\200"
 2720      00040108 
 2720      01101160 
 2720      1380
 2721 0c8a 1E70128C 		.ascii	"\036p\022\214\022\004\002\004\002\004\000\004\000\004"
 2721      12040204 
 2721      02040004 
 2721      0004
 2722 0c98 001C0000 		.ascii	"\000\034\000\000"
 2723 0c9c E697     		.ascii	"\346\227"
 2724 0c9e 00000000 		.ascii	"\000\000\000\000\002\030\003p\020@\010D\000H\000X\002"
 2724      02180370 
 2724      10400844 
 2724      00480058 
 2724      02
 2725 0caf 683F8804 		.ascii	"h?\210\004\210\004\260\000\234\000\200\000\200\000\000"
 2725      8804B000 
 2725      9C008000 
 2725      800000
 2726 0cbe E6B3     		.ascii	"\346\263"
 2727 0cc0 00000000 		.ascii	"\000\000\000\000\000\202\010\202\011B\012z\014j\177"
 2727      00820882 
ARM GAS  /tmp/ccfCRRJc.s 			page 85


 2727      09420A7A 
 2727      0C6A7F
 2728 0ccf AA08AA14 		.ascii	"\252\010\252\024\264\022\304\021\004\001\004\000\200"
 2728      B412C411 
 2728      04010400 
 2728      80
 2729 0cdc 00000000 		.ascii	"\000\000\000\000"
 2730 0ce0 E69F     		.ascii	"\346\237"
 2731 0ce2 00000104 		.ascii	"\000\000\001\004\001\010\001\020\001 \005\300\027~\035"
 2731      01080110 
 2731      012005C0 
 2731      177E1D
 2732 0cf1 6A256C2A 		.ascii	"j%l*\204J\202\002\376\002\000\002\000\002\000\000\000"
 2732      844A8202 
 2732      FE020002 
 2732      00020000 
 2732      00
 2733 0d02 E79C     		.ascii	"\347\234"
 2734 0d04 00000000 		.ascii	"\000\000\000\000\000\000\000<\017 \021 \033xU\310>P"
 2734      0000003C 
 2734      0F201120 
 2734      1B7855C8 
 2734      3E50
 2735 0d16 12701342 		.ascii	"\022p\023B\034B\000~\000\000\000\000\000\000"
 2735      1C42007E 
 2735      00000000 
 2735      0000
 2736 0d24 E7A6     		.ascii	"\347\246"
 2737 0d26 00000008 		.ascii	"\000\000\000\010\001\010\023\360\020\010\000H\020\210"
 2737      010813F0 
 2737      10080048 
 2737      1088
 2738 0d34 11081204 		.ascii	"\021\010\022\004\037\344\020\004\021\004\021\204\000"
 2738      1FE41004 
 2738      11041184 
 2738      00
 2739 0d41 C4000400 		.ascii	"\304\000\004\000\000"
 2739      00
 2740 0d46 E8BF     		.ascii	"\350\277"
 2741 0d48 00000000 		.ascii	"\000\000\000\000\010 \010@\010\200\011\014\017\360y"
 2741      08200840 
 2741      0880090C 
 2741      0FF079
 2742 0d57 5049400A 		.ascii	"PI@\012\000\013\376\020\000\020\000\020\000\000\000"
 2742      000BFE10 
 2742      00100010 
 2742      000000
 2743 0d66 0000     		.ascii	"\000\000"
 2744 0d68 E69C     		.ascii	"\346\234"
 2745 0d6a 00000000 		.ascii	"\000\000\000\000\000\004\000\004\000\004\002\210\002"
 2745      00040004 
 2745      00040288 
 2745      02
 2746 0d77 68220812 		.ascii	"h\"\010\022\030\022h\004\210\004\010\000\010\000\010"
 2746      18126804 
 2746      88040800 
 2746      080008
ARM GAS  /tmp/ccfCRRJc.s 			page 86


 2747 0d86 00080000 		.ascii	"\000\010\000\000"
 2748 0d8a E7AB     		.ascii	"\347\253"
 2749 0d8c 00000008 		.ascii	"\000\000\000\010\000\010\001\020\001 \025\354\0272y"
 2749      00080110 
 2749      012015EC 
 2749      173279
 2750 0d9b 5415541A 		.ascii	"T\025T\032\376\"\240\002@\000 \0000\000\000\000\000"
 2750      FE22A002 
 2750      40002000 
 2750      30000000 
 2750      00
 2751 0dac E698     		.ascii	"\346\230"
 2752 0dae 00000000 		.ascii	"\000\000\000\000\002\020\002\020\002`\003\200\002\004"
 2752      02100210 
 2752      02600380 
 2752      0204
 2753 0dbc 3FFE0100 		.ascii	"?\376\001\000\002\200\004@\030`\0000\000 \000\000\000"
 2753      02800440 
 2753      18600030 
 2753      00200000 
 2753      00
 2754 0dcd 00       		.ascii	"\000"
 2755 0dce E6B0     		.ascii	"\346\260"
 2756 0dd0 00000380 		.ascii	"\000\000\003\200\000\0007\374(\000\014\000\004\030\005"
 2756      000037FC 
 2756      28000C00 
 2756      041805
 2757 0ddf 80054425 		.ascii	"\200\005D%~\005@\007\200\011\020\010\010\000\000\000"
 2757      7E054007 
 2757      80091008 
 2757      08000000 
 2758 0def 00       		.ascii	"\000"
 2759 0df0 E683     		.ascii	"\346\203"
 2760 0df2 00000000 		.ascii	"\000\000\000\000\001\000\001\002\005\262?\352\010,\010"
 2760      01000102 
 2760      05B23FEA 
 2760      082C08
 2761 0e01 FC0B2C3E 		.ascii	"\374\013,><\016$\011\006\000\200\000\200\001\200\000"
 2761      3C0E2409 
 2761      06008000 
 2761      80018000 
 2762 0e11 00       		.ascii	"\000"
 2763 0e12 E89B     		.ascii	"\350\233"
 2764 0e14 00000000 		.ascii	"\000\000\000\000\000\200\001D\006H\034\260@\300@\206"
 2764      00800144 
 2764      06481CB0 
 2764      40C04086 
 2765 0e24 308608BC 		.ascii	"0\206\010\274\004\300\003\000\003\000\001\000\001\000"
 2765      04C00300 
 2765      03000100 
 2765      0100
 2766 0e32 0000     		.ascii	"\000\000"
 2767 0e34 E588     		.ascii	"\345\210"
 2768 0e36 00000000 		.ascii	"\000\000\000\000\002\014\000p\020\200\001\000\001\000"
 2768      020C0070 
 2768      10800100 
 2768      0100
ARM GAS  /tmp/ccfCRRJc.s 			page 87


 2769 0e44 15FC16B0 		.ascii	"\025\374\026\260~\220\032\202*\376\002\000\002\000\002"
 2769      7E901A82 
 2769      2AFE0200 
 2769      020002
 2770 0e53 000000   		.ascii	"\000\000\000"
 2771 0e56 E6B8     		.ascii	"\346\270"
 2772 0e58 00000000 		.ascii	"\000\000\000\000\015\340\012@\012@\020B\017\304\000"
 2772      0DE00A40 
 2772      0A401042 
 2772      0FC400
 2773 0e67 183BE014 		.ascii	"\030;\340\024\200$\200$\2047\0168\370\000\000\000\000"
 2773      80248024 
 2773      84370E38 
 2773      F8000000 
 2773      00
 2774 0e78 E698     		.ascii	"\346\230"
 2775 0e7a 00000000 		.ascii	"\000\000\000\000\000\020\004 \030`\020\276\003\"\004"
 2775      00100420 
 2775      186010BE 
 2775      032204
 2776 0e89 24022401 		.ascii	"$\002$\001,\020\260\030P\000`\000 \000 \000\000"
 2776      2C10B018 
 2776      50006000 
 2776      20002000 
 2776      00
 2777 0e9a E8B0     		.ascii	"\350\260"
 2778 0e9c 00000000 		.ascii	"\000\000\000\000\000\004\020\010'\022%\342:\264-\254"
 2778      00041008 
 2778      271225E2 
 2778      3AB42DAC 
 2779 0eac 2DD82FA4 		.ascii	"-\330/\244(\002@\002\000\003\000\001\000\000\000\000"
 2779      28024002 
 2779      00030001 
 2779      00000000 
 2780 0ebc E5A4     		.ascii	"\345\244"
 2781 0ebe 00000000 		.ascii	"\000\000\000\000\002\034\020`\010\000\010|\010@9\340"
 2781      021C1060 
 2781      0800087C 
 2781      084039E0 
 2782 0ece 09680E70 		.ascii	"\011h\016p{\340\012\224\022\206\000\370\000\000\000"
 2782      7BE00A94 
 2782      128600F8 
 2782      000000
 2783 0edd 00       		.ascii	"\000"
 2784 0ede E6BB     		.ascii	"\346\273"
 2785 0ee0 00000000 		.ascii	"\000\000\000\000\000@\004@\004@(|<D\010D\011D\014D8"
 2785      00400440 
 2785      0440287C 
 2785      3C440844 
 2785      09440C44 
 2786 0ef5 84088410 		.ascii	"\204\010\204\020\204\000\200\000\000\000\000"
 2786      84008000 
 2786      000000
 2787 0f00 E88A     		.ascii	"\350\212"
 2788 0f02 00000010 		.ascii	"\000\000\000\020\001 \012@\013\200\037\370$\200\002"
 2788      01200A40 
 2788      0B801FF8 
ARM GAS  /tmp/ccfCRRJc.s 			page 88


 2788      248002
 2789 0f11 0003C002 		.ascii	"\000\003\300\002@;~$\200\004\200\007\200\004\000\000"
 2789      403B7E24 
 2789      80048007 
 2789      80040000 
 2790 0f21 00       		.ascii	"\000"
 2791 0f22 E7A7     		.ascii	"\347\247"
 2792 0f24 00000004 		.ascii	"\000\000\000\004\000\004\000\004\001\004\023$\025$\031"
 2792      00040004 
 2792      01041324 
 2792      152419
 2793 0f33 FC11A421 		.ascii	"\374\021\244!$&$#\004\000\010\000\004\000\004\000\000"
 2793      24262423 
 2793      04000800 
 2793      04000400 
 2793      00
 2794 0f44 E887     		.ascii	"\350\207"
 2795 0f46 00000000 		.ascii	"\000\000\000\000\000D\000D H<\2205\2747\312:\242+\242"
 2795      00440044 
 2795      20483C90 
 2795      35BC37CA 
 2795      3AA22BA2 
 2796 0f5a 76BF2080 		.ascii	"v\277 \200\000\200\000\200\000\200\000\000"
 2796      00800080 
 2796      00800000 
 2797 0f66 E69A     		.ascii	"\346\232"
 2798 0f68 00000110 		.ascii	"\000\000\001\020\001 \001@\011\200\027\3742@\001\010"
 2798      01200140 
 2798      098017FC 
 2798      32400108 
 2799 0f78 011023E0 		.ascii	"\001\020#\340\034@\001 \006\030\000\010\000\010\000"
 2799      1C400120 
 2799      06180008 
 2799      000800
 2800 0f87 00       		.ascii	"\000"
 2801 0f88 E7A7     		.ascii	"\347\247"
 2802 0f8a 00000004 		.ascii	"\000\000\000\004\000\204\003\010<\220\"`\007\240\006"
 2802      00840308 
 2802      3C902260 
 2802      07A006
 2803 0f99 10001820 		.ascii	"\020\000\030 x?\204\002\006\003\004\001\002\000\000"
 2803      783F8402 
 2803      06030401 
 2803      020000
 2804 0fa8 0000     		.ascii	"\000\000"
 2805 0faa E5A4     		.ascii	"\345\244"
 2806 0fac 00000000 		.ascii	"\000\000\000\000\000\000\003\000\003\374\006H\012H2"
 2806      00000300 
 2806      03FC0648 
 2806      0A4832
 2807 0fbb 48028802 		.ascii	"H\002\210\002\010\004\010\004\034\007\340\000\000\000"
 2807      08040804 
 2807      1C07E000 
 2807      0000
 2808 0fc9 000000   		.ascii	"\000\000\000"
 2809 0fcc E799     		.ascii	"\347\231"
 2810 0fce 00000004 		.ascii	"\000\000\000\004\006\034\010\324\012\254.\324)\320>"
ARM GAS  /tmp/ccfCRRJc.s 			page 89


 2810      061C08D4 
 2810      0AAC2ED4 
 2810      29D03E
 2811 0fdd 50289E09 		.ascii	"P(\236\011j\021j\021\256\030\030\010\020\000\020\000"
 2811      6A116A11 
 2811      AE181808 
 2811      10001000 
 2812 0fed 00       		.ascii	"\000"
 2813 0fee E99C     		.ascii	"\351\234"
 2814 0ff0 00000000 		.ascii	"\000\000\000\000\000\004\030D\010H\013pW\300sT\037\332"
 2814      00041844 
 2814      08480B70 
 2814      57C07354 
 2814      1FDA
 2815 1002 15A01490 		.ascii	"\025\240\024\220\030\230\020\010\000\010\000\000\000"
 2815      18981008 
 2815      00080000 
 2815      00
 2816 100f 00       		.ascii	"\000"
 2817 1010 E5AF     		.ascii	"\345\257"
 2818 1012 00000000 		.ascii	"\000\000\000\000\006\010\0100\004 \011\374(P?\000(|"
 2818      06080830 
 2818      042009FC 
 2818      28503F00 
 2818      287C
 2819 1024 2E6C0D84 		.ascii	".l\015\204\020\266\030\314\010\000\000\000\000\000"
 2819      10B618CC 
 2819      08000000 
 2819      0000
 2820 1032 E99C     		.ascii	"\351\234"
 2821 1034 00000000 		.ascii	"\000\000\000\000\037\374\021\000?\000!\000\000\260\011"
 2821      1FFC1100 
 2821      3F002100 
 2821      00B009
 2822 1043 50765015 		.ascii	"PvP\025\377\032P\021\020\001\000\001\000\001\000\000"
 2822      FF1A5011 
 2822      10010001 
 2822      00010000 
 2823 1053 00       		.ascii	"\000"
 2824 1054 E999     		.ascii	"\351\231"
 2825 1056 00000000 		.ascii	"\000\000\000\000\000\000\000 \004@\014@\022\210k$\013"
 2825      00000020 
 2825      04400C40 
 2825      12886B24 
 2825      0B
 2826 1067 241C8208 		.ascii	"$\034\202\010\200\000@\000`\000 \000 \000\000"
 2826      80004000 
 2826      60002000 
 2826      200000
 2827 1076 E586     		.ascii	"\345\206"
 2828 1078 00000000 		.ascii	"\000\000\000\000\000\000\034\000\023\200\022\200\022"
 2828      00001C00 
 2828      13801280 
 2828      12
 2829 1085 801FFE14 		.ascii	"\200\037\376\024\200\024\200 \200'\000\034\000\020\000"
 2829      80148020 
 2829      8027001C 
ARM GAS  /tmp/ccfCRRJc.s 			page 90


 2829      001000
 2830 1094 00000000 		.ascii	"\000\000\000\000"
 2831 1098 E794     		.ascii	"\347\224"
 2832 109a 00000000 		.ascii	"\000\000\000\000\000\000\010\370\011\010\016\010\034"
 2832      000008F8 
 2832      09080E08 
 2832      1C
 2833 10a7 04180410 		.ascii	"\004\030\004\020\004\000\004\000\014\000\010\000\010"
 2833      04000400 
 2833      0C000800 
 2833      08
 2834 10b4 00780000 		.ascii	"\000x\000\000\000\000"
 2834      0000
 2835 10ba E4B9     		.ascii	"\344\271"
 2836 10bc 00000000 		.ascii	"\000\000\000\000\011\000\011\374\011\010\011\020\021"
 2836      090009FC 
 2836      09080910 
 2836      11
 2837 10c9 601F8011 		.ascii	"`\037\200\021@\021 \022$\022\006\023\374\020\000\000"
 2837      40112012 
 2837      24120613 
 2837      FC100000 
 2838 10d9 000000   		.ascii	"\000\000\000"
 2839 10dc E4B8     		.ascii	"\344\270"
 2840 10de 00000000 		.ascii	"\000\000\000\000\010\000\010\000\010\000\010\000\010"
 2840      08000800 
 2840      08000800 
 2840      08
 2841 10eb 0408060F 		.ascii	"\004\010\006\017\374\020\000\020\000\020\000\020\000"
 2841      FC100010 
 2841      00100010 
 2841      00
 2842 10f8 10001000 		.ascii	"\020\000\020\000\000\000"
 2842      0000
 2843 10fe E4B8     		.ascii	"\344\270"
 2844 1100 00000000 		.ascii	"\000\000\000\000\000\010\000\020\003\340\002\000B\000"
 2844      00080010 
 2844      03E00200 
 2844      4200
 2845 110e 7E000588 		.ascii	"~\000\005\210\004p\010p!\214 \006\000\006\000\000\000"
 2845      04700870 
 2845      218C2006 
 2845      00060000 
 2845      00
 2846 111f 00       		.ascii	"\000"
 2847 1120 E688     		.ascii	"\346\210"
 2848 1122 00000000 		.ascii	"\000\000\000\000\000\000\003\360\011\010\022\004\022"
 2848      000003F0 
 2848      09081204 
 2848      12
 2849 112f 0412043E 		.ascii	"\004\022\004>\004\020\004\000\004\000\010\000\010\000"
 2849      04100400 
 2849      04000800 
 2849      0800
 2850 113d 38000000 		.ascii	"8\000\000\000\000"
 2850      00
 2851 1142 E5B7     		.ascii	"\345\267"
ARM GAS  /tmp/ccfCRRJc.s 			page 91


 2852 1144 00000004 		.ascii	"\000\000\000\004\000\010\000r\003\202\014\202\010\244"
 2852      00080072 
 2852      03820C82 
 2852      08A4
 2853 1152 49B86FE0 		.ascii	"I\270o\340\022\260\022\314\023\006\001\002\001\002\000"
 2853      12B012CC 
 2853      13060102 
 2853      010200
 2854 1161 020000   		.ascii	"\002\000\000"
 2855 1164 E5BA     		.ascii	"\345\272"
 2856 1166 00000000 		.ascii	"\000\000\000\000\000\200\000\240\001 \011 \027 S\377"
 2856      008000A0 
 2856      01200920 
 2856      172053FF 
 2857 1176 35401940 		.ascii	"5@\031@\021@\002@\002\000\002\000\002\000\000\000"
 2857      11400240 
 2857      02000200 
 2857      02000000 
 2858 1186 E8BE     		.ascii	"\350\276"
 2859 1188 00000000 		.ascii	"\000\000\000\000\000@\000\200\000\204\000\204\010\204"
 2859      00400080 
 2859      00840084 
 2859      0884
 2860 1196 08F40F88 		.ascii	"\010\364\017\2100\210\020\210\000\210\001\200\001\200"
 2860      30881088 
 2860      00880180 
 2860      0180
 2861 11a4 00800000 		.ascii	"\000\200\000\000"
 2862 11a8 E5A3     		.ascii	"\345\243"
 2863 11aa 00000020 		.ascii	"\000\000\000 \000@\004\240\023\"\034\244\020\270\001"
 2863      004004A0 
 2863      13221CA4 
 2863      10B801
 2864 11b9 E0192065 		.ascii	"\340\031 e(*L1\006\020\200\000\300\000@\000\000"
 2864      282A4C31 
 2864      06108000 
 2864      C0004000 
 2864      00
 2865 11ca E799     		.ascii	"\347\231"
 2866 11cc 00000000 		.ascii	"\000\000\000\000\000\200\000\200\021\000\021\004\021"
 2866      00800080 
 2866      11001104 
 2866      11
 2867 11d9 02150227 		.ascii	"\002\025\002'\374)\0001\000\002\000\002\000\002\000"
 2867      FC290031 
 2867      00020002 
 2867      000200
 2868 11e8 00000000 		.ascii	"\000\000\000\000"
 2869 11ec E5AD     		.ascii	"\345\255"
 2870 11ee 00000004 		.ascii	"\000\000\000\004\000\004\000\004\000\204\010\270\013"
 2870      00040004 
 2870      008408B8 
 2870      0B
 2871 11fb C80C8810 		.ascii	"\310\014\210\020\210\020\230\037\350\034\010\000\010"
 2871      8810981F 
 2871      E81C0800 
 2871      08
ARM GAS  /tmp/ccfCRRJc.s 			page 92


 2872 1208 00080008 		.ascii	"\000\010\000\010\000\000"
 2872      0000
 2873 120e E4B8     		.ascii	"\344\270"
 2874 1210 00000000 		.ascii	"\000\000\000\000\014\000\020\002\010\304\020\270\024"
 2874      0C001002 
 2874      08C410B8 
 2874      14
 2875 121d D077E015 		.ascii	"\320w\340\025P\025\030\021\344\020\206\030\000\020\000"
 2875      50151811 
 2875      E4108618 
 2875      001000
 2876 122c 00000000 		.ascii	"\000\000\000\000"
 2877 1230 E5AF     		.ascii	"\345\257"
 2878 1232 00000000 		.ascii	"\000\000\000\000\000@\017\304\020\210 \260o\300\000"
 2878      00400FC4 
 2878      108820B0 
 2878      6FC000
 2879 1241 0000020F 		.ascii	"\000\000\002\017\374\010\000\020\200\031\200\036\000"
 2879      FC080010 
 2879      8019801E 
 2879      00
 2880 124e 00000000 		.ascii	"\000\000\000\000"
 2881 1252 E58D     		.ascii	"\345\215"
 2882 1254 00040004 		.ascii	"\000\004\000\004\000\030\000 \001\300\036\202\025\376"
 2882      00180020 
 2882      01C01E82 
 2882      15FE
 2883 1262 25842548 		.ascii	"%\204%H) *P\003\230\000\214\000\004\000\004\000\000"
 2883      29202A50 
 2883      0398008C 
 2883      00040004 
 2883      0000
 2884 1274 E8BE     		.ascii	"\350\276"
 2885 1276 00000000 		.ascii	"\000\000\000\000\000\000\017\360\011\010\021\004\021"
 2885      00000FF0 
 2885      09081104 
 2885      11
 2886 1283 04170418 		.ascii	"\004\027\004\030\004\020\004\000\004\000\014\000\010"
 2886      04100400 
 2886      04000C00 
 2886      08
 2887 1290 00380000 		.ascii	"\0008\000\000\000\000"
 2887      0000
 2888 1296 E5B7     		.ascii	"\345\267"
 2889 1298 00000080 		.ascii	"\000\000\000\200\000\200\002\200\004\200\010\2004\200"
 2889      00800280 
 2889      04800880 
 2889      3480
 2890 12a6 08800FFE 		.ascii	"\010\200\017\376\010\200\011\000\001\000\001\000\001"
 2890      08800900 
 2890      01000100 
 2890      01
 2891 12b3 00010000 		.ascii	"\000\001\000\000\000"
 2891      00
 2892 12b8 E58D     		.ascii	"\345\215"
 2893 12ba 00000000 		.ascii	"\000\000\000\000\000\010\001\010\001\020\001`\005\200"
 2893      00080108 
ARM GAS  /tmp/ccfCRRJc.s 			page 93


 2893      01100160 
 2893      0580
 2894 12c8 7FFF0A80 		.ascii	"\177\377\012\200\002`\0020\000\030\000\030\000\010\000"
 2894      02600230 
 2894      00180018 
 2894      000800
 2895 12d7 080000   		.ascii	"\010\000\000"
 2896 12da E69C     		.ascii	"\346\234"
 2897 12dc 00000000 		.ascii	"\000\000\000\000\000\000\006\000\005\340\005 \005@E"
 2897      00000600 
 2897      05E00520 
 2897      054045
 2898 12eb 7E7FC005 		.ascii	"~\177\300\005@\010@\010\300\017\000\004\000\000\000"
 2898      40084008 
 2898      C00F0004 
 2898      000000
 2899 12fa 0000     		.ascii	"\000\000"
 2900 12fc E794     		.ascii	"\347\224"
 2901 12fe 00000000 		.ascii	"\000\000\000\000\020\000\020\000\023\374\022D\037\204"
 2901      10001000 
 2901      13FC1244 
 2901      1F84
 2902 130c 12241724 		.ascii	"\022$\027$\032\244$\004'\376 \000 \000\000\000\000\000"
 2902      1AA42404 
 2902      27FE2000 
 2902      20000000 
 2902      0000
 2903 131e E985     		.ascii	"\351\205"
 2904 1320 00000004 		.ascii	"\000\000\000\004\000\010\003\360\002 \002 \002@|H\007"
 2904      000803F0 
 2904      02200220 
 2904      02407C48 
 2904      07
 2905 1331 90046000 		.ascii	"\220\004`\000P!\2100\004\000\016\000\002\000\000"
 2905      50218830 
 2905      04000E00 
 2905      020000
 2906 1340 E688     		.ascii	"\346\210"
 2907 1342 00000000 		.ascii	"\000\000\000\000\004\000\004\004\004\010\004\320\005"
 2907      04000404 
 2907      040804D0 
 2907      05
 2908 134f 64066428 		.ascii	"d\006d(\210\013\260\012h\010D\010\002\010\000\010\000"
 2908      880BB00A 
 2908      68084408 
 2908      02080008 
 2908      00
 2909 1360 0000     		.ascii	"\000\000"
 2910 1362 E4BA     		.ascii	"\344\272"
 2911 1364 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 2911      00000000 
 2911      00000000 
 2911      00
 2912 1371 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 2912      00000000 
 2912      00000000 
 2912      00
ARM GAS  /tmp/ccfCRRJc.s 			page 94


 2913 137e 00000000 		.ascii	"\000\000\000\000\000\000"
 2913      0000
 2914 1384 2000     		.ascii	" \000"
 2915 1386 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000<\014"
 2915      00000000 
 2915      00000000 
 2915      3C0C
 2916 1394 3FEC3FEC 		.ascii	"?\354?\3540\014\000\000\000\000\000\000\000\000\000"
 2916      300C0000 
 2916      00000000 
 2916      000000
 2917 13a3 000000   		.ascii	"\000\000\000"
 2918 13a6 2100     		.ascii	"!\000"
 2919 13a8 00000000 		.ascii	"\000\000\000\000\000\000\000\000\034\000\034\000\020"
 2919      00000000 
 2919      1C001C00 
 2919      10
 2920 13b5 00000000 		.ascii	"\000\000\000\000\000\034\000\034\000\020\000\000\000"
 2920      001C001C 
 2920      00100000 
 2920      00
 2921 13c2 00000000 		.ascii	"\000\000\000\000\000\000"
 2921      0000
 2922 13c8 2200     		.ascii	"\"\000"
 2923 13ca 00000220 		.ascii	"\000\000\002 \002$\002|\007\370\037\240\032 \002 \002"
 2923      0224027C 
 2923      07F81FA0 
 2923      1A200220 
 2923      02
 2924 13db 20023C03 		.ascii	" \002<\003\374\037\340\036 \002 \002 \000\000"
 2924      FC1FE01E 
 2924      20022002 
 2924      200000
 2925 13ea 2300     		.ascii	"#\000"
 2926 13ec 00000000 		.ascii	"\000\000\000\000\0160\0168\0378\021\014\021\004?\376"
 2926      0E300E38 
 2926      1F38110C 
 2926      11043FFE 
 2927 13fc 3FFE108C 		.ascii	"?\376\020\214\030\314\034x\014x\0000\000\000\000\000"
 2927      18CC1C78 
 2927      0C780030 
 2927      00000000 
 2928 140c 2400     		.ascii	"$\000"
 2929 140e 00000F00 		.ascii	"\000\000\017\000\037\000\020\204\021\030\0370\017@\000"
 2929      1F001084 
 2929      11181F30 
 2929      0F4000
 2930 141d 80010002 		.ascii	"\200\001\000\002x\004\374\010\204\020\204\000x\000x"
 2930      7804FC08 
 2930      84108400 
 2930      780078
 2931 142c 0000     		.ascii	"\000\000"
 2932 142e 2500     		.ascii	"%\000"
 2933 1430 00000070 		.ascii	"\000\000\000p\000x\016\330\037\214\033\204\021\304\021"
 2933      00780ED8 
 2933      1F8C1B84 
 2933      11C411
ARM GAS  /tmp/ccfCRRJc.s 			page 95


 2934 143f E413641E 		.ascii	"\344\023d\036<\0168\0008\000x\000h\000\010\000\000"
 2934      3C0E3800 
 2934      38007800 
 2934      68000800 
 2934      00
 2935 1450 2600     		.ascii	"&\000"
 2936 1452 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\034"
 2936      00000000 
 2936      00000000 
 2936      1C
 2937 145f 001C0000 		.ascii	"\000\034\000\000\000\000\000\000\000\000\000\000\000"
 2937      00000000 
 2937      00000000 
 2937      00
 2938 146c 00000000 		.ascii	"\000\000\000\000\000\000"
 2938      0000
 2939 1472 2700     		.ascii	"'\000"
 2940 1474 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 2940      00000000 
 2940      00000000 
 2940      00
 2941 1481 0001C007 		.ascii	"\000\001\300\007\360\0168\030\010\020\004 \006`\002"
 2941      F00E3818 
 2941      08100420 
 2941      066002
 2942 1490 00020000 		.ascii	"\000\002\000\000"
 2943 1494 2800     		.ascii	"(\000"
 2944 1496 00002002 		.ascii	"\000\000 \002 \0020\004\030\014\014\030\017\360\003"
 2944      20023004 
 2944      180C0C18 
 2944      0FF003
 2945 14a5 E0000000 		.ascii	"\340\000\000\000\000\000\000\000\000\000\000\000\000"
 2945      00000000 
 2945      00000000 
 2945      00
 2946 14b2 00000000 		.ascii	"\000\000\000\000"
 2947 14b6 2900     		.ascii	")\000"
 2948 14b8 00000480 		.ascii	"\000\000\004\200\014\200\005\200\005\000\007\000\003"
 2948      0C800580 
 2948      05000700 
 2948      03
 2949 14c5 001FE01F 		.ascii	"\000\037\340\037\340\003\000\007\000\005\000\005\200"
 2949      E0030007 
 2949      00050005 
 2949      80
 2950 14d2 0C800480 		.ascii	"\014\200\004\200\000\000"
 2950      0000
 2951 14d8 2A00     		.ascii	"*\000"
 2952 14da 00000080 		.ascii	"\000\000\000\200\000\200\000\200\000\200\000\200\000"
 2952      00800080 
 2952      00800080 
 2952      00
 2953 14e7 8007F007 		.ascii	"\200\007\360\007\360\000\200\000\200\000\200\000\200"
 2953      F0008000 
 2953      80008000 
 2953      80
 2954 14f4 00800080 		.ascii	"\000\200\000\200\000\000"
ARM GAS  /tmp/ccfCRRJc.s 			page 96


 2954      0000
 2955 14fa 2B00     		.ascii	"+\000"
 2956 14fc 00000000 		.ascii	"\000\000\000\000\000\010\000\015\000\016\000\016\000"
 2956      0008000D 
 2956      000E000E 
 2956      00
 2957 1509 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 2957      00000000 
 2957      00000000 
 2957      00
 2958 1516 00000000 		.ascii	"\000\000\000\000\000\000"
 2958      0000
 2959 151c 2C00     		.ascii	",\000"
 2960 151e 00000080 		.ascii	"\000\000\000\200\000\200\000\200\000\200\000\200\000"
 2960      00800080 
 2960      00800080 
 2960      00
 2961 152b 80008000 		.ascii	"\200\000\200\000\200\000\200\000\200\000\200\000\200"
 2961      80008000 
 2961      80008000 
 2961      80
 2962 1538 00800080 		.ascii	"\000\200\000\200\000\000"
 2962      0000
 2963 153e 2D00     		.ascii	"-\000"
 2964 1540 00000000 		.ascii	"\000\000\000\000\000\010\000\014\000\014\000\010\000"
 2964      0008000C 
 2964      000C0008 
 2964      00
 2965 154d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 2965      00000000 
 2965      00000000 
 2965      00
 2966 155a 00000000 		.ascii	"\000\000\000\000\000\000"
 2966      0000
 2967 1560 2E00     		.ascii	".\000"
 2968 1562 00000004 		.ascii	"\000\000\000\004\000\014\000\030\0000\000 \000@\000"
 2968      000C0018 
 2968      00300020 
 2968      004000
 2969 1571 80010003 		.ascii	"\200\001\000\003\000\006\000\014\000\030\0000\000 \000"
 2969      0006000C 
 2969      00180030 
 2969      002000
 2970 1580 0000     		.ascii	"\000\000"
 2971 1582 2F00     		.ascii	"/\000"
 2972 1584 000003E0 		.ascii	"\000\000\003\340\007\360\017\370\034\030\030\010\020"
 2972      07F00FF8 
 2972      1C181808 
 2972      10
 2973 1591 0C100410 		.ascii	"\014\020\004\020\004\020\014\030\010\014\030\017\370"
 2973      04100C18 
 2973      080C180F 
 2973      F8
 2974 159e 07F00000 		.ascii	"\007\360\000\000\000\000"
 2974      0000
 2975 15a4 3000     		.ascii	"0\000"
 2976 15a6 00000000 		.ascii	"\000\000\000\000\000\000\004\000\004\000\014\000\010"
ARM GAS  /tmp/ccfCRRJc.s 			page 97


 2976      00000400 
 2976      04000C00 
 2976      08
 2977 15b3 001FFC1F 		.ascii	"\000\037\374\037\374\037\374\000\000\000\000\000\000"
 2977      FC1FFC00 
 2977      00000000 
 2977      00
 2978 15c0 00000000 		.ascii	"\000\000\000\000\000\000"
 2978      0000
 2979 15c6 3100     		.ascii	"1\000"
 2980 15c8 00000404 		.ascii	"\000\000\004\004\014\014\014\014\030\034\020<\020<\020"
 2980      0C0C0C0C 
 2980      181C103C 
 2980      103C10
 2981 15d7 6C106C10 		.ascii	"l\020l\020\314\031\214\037\214\017\014\006\014\000\000"
 2981      CC198C1F 
 2981      8C0F0C06 
 2981      0C0000
 2982 15e6 0000     		.ascii	"\000\000"
 2983 15e8 3200     		.ascii	"2\000"
 2984 15ea 00000000 		.ascii	"\000\000\000\000\014\020\014\030\030\010\020\014\020"
 2984      0C100C18 
 2984      1808100C 
 2984      10
 2985 15f7 04108411 		.ascii	"\004\020\204\021\204\021\214\021\210\037\330\016x\014"
 2985      84118C11 
 2985      881FD80E 
 2985      780C
 2986 1605 70000000 		.ascii	"p\000\000\000\000"
 2986      00
 2987 160a 3300     		.ascii	"3\000"
 2988 160c 00200060 		.ascii	"\000 \000`\000`\000\340\001\240\003 \003 \006 \014 "
 2988      006000E0 
 2988      01A00320 
 2988      03200620 
 2988      0C20
 2989 161e 0C201FFC 		.ascii	"\014 \037\374\037\374\000 \000 \000 \000\000"
 2989      1FFC0020 
 2989      00200020 
 2989      0000
 2990 162c 3400     		.ascii	"4\000"
 2991 162e 00000010 		.ascii	"\000\000\000\020\007\230\037\010\035\014\021\004\021"
 2991      07981F08 
 2991      1D0C1104 
 2991      11
 2992 163b 04130411 		.ascii	"\004\023\004\021\004\021\014\021\010\021\270\021\370"
 2992      04110C11 
 2992      0811B811 
 2992      F8
 2993 1648 00F00000 		.ascii	"\000\360\000\000\000\000"
 2993      0000
 2994 164e 3500     		.ascii	"5\000"
 2995 1650 00000060 		.ascii	"\000\000\000`\000\370\001\370\003\210\007\014\007\004"
 2995      00F801F8 
 2995      0388070C 
 2995      0704
 2996 165e 0D041904 		.ascii	"\015\004\031\004\031\004\021\014\001\010\001\370\000"
ARM GAS  /tmp/ccfCRRJc.s 			page 98


 2996      1904110C 
 2996      010801F8 
 2996      00
 2997 166b F800F000 		.ascii	"\370\000\360\000\000"
 2997      00
 2998 1670 3600     		.ascii	"6\000"
 2999 1672 00001000 		.ascii	"\000\000\020\000\020\000\020\000\020\004\020\034\020"
 2999      10001000 
 2999      1004101C 
 2999      10
 3000 167f 3C107810 		.ascii	"<\020x\020\340\021\200\023\000\026\000\034\000\030\000"
 3000      E0118013 
 3000      0016001C 
 3000      001800
 3001 168e 10000000 		.ascii	"\020\000\000\000"
 3002 1692 3700     		.ascii	"7\000"
 3003 1694 00000070 		.ascii	"\000\000\000p\016x\017\330\031\214\021\214\021\204\021"
 3003      0E780FD8 
 3003      198C118C 
 3003      118411
 3004 16a3 84118411 		.ascii	"\204\021\204\021\214\031\214\037\330\016\370\004p\000"
 3004      8C198C1F 
 3004      D80EF804 
 3004      7000
 3005 16b1 000000   		.ascii	"\000\000\000"
 3006 16b4 3800     		.ascii	"8\000"
 3007 16b6 00000700 		.ascii	"\000\000\007\000\017\200\035\200\030\304\020\304\020"
 3007      0F801D80 
 3007      18C410C4 
 3007      10
 3008 16c3 4C105810 		.ascii	"L\020X\020\360\020\340\030\340\037\300\017\200\007\000"
 3008      F010E018 
 3008      E01FC00F 
 3008      800700
 3009 16d2 00000000 		.ascii	"\000\000\000\000"
 3010 16d6 3900     		.ascii	"9\000"
 3011 16d8 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\001"
 3011      00000000 
 3011      00000000 
 3011      01
 3012 16e5 8C018C01 		.ascii	"\214\001\214\001\214\000\000\000\000\000\000\000\000"
 3012      8C000000 
 3012      00000000 
 3012      00
 3013 16f2 00000000 		.ascii	"\000\000\000\000\000\000"
 3013      0000
 3014 16f8 3A00     		.ascii	":\000"
 3015 16fa 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\001"
 3015      00000000 
 3015      00000000 
 3015      01
 3016 1707 8D018E01 		.ascii	"\215\001\216\001\216\000\004\000\000\000\000\000\000"
 3016      8E000400 
 3016      00000000 
 3016      00
 3017 1714 00000000 		.ascii	"\000\000\000\000\000\000"
 3017      0000
ARM GAS  /tmp/ccfCRRJc.s 			page 99


 3018 171a 3B00     		.ascii	";\000"
 3019 171c 00000080 		.ascii	"\000\000\000\200\000\200\001\300\001@\002@\002 \006"
 3019      008001C0 
 3019      01400240 
 3019      022006
 3020 172b 2004100C 		.ascii	" \004\020\014\020\010\030\010\010\020\014\020\004\000"
 3020      10081808 
 3020      08100C10 
 3020      0400
 3021 1739 040000   		.ascii	"\004\000\000"
 3022 173c 3C00     		.ascii	"<\000"
 3023 173e 00000220 		.ascii	"\000\000\002 \002 \002 \002 \002 \002 \002 \002 \002"
 3023      02200220 
 3023      02200220 
 3023      02200220 
 3023      022002
 3024 1751 20022002 		.ascii	" \002 \002 \002 \002 \002 \000\000"
 3024      20022002 
 3024      20022000 
 3024      00
 3025 175e 3D00     		.ascii	"=\000"
 3026 1760 00000004 		.ascii	"\000\000\000\004\020\004\020\010\010\010\010\030\004"
 3026      10041008 
 3026      08080818 
 3026      04
 3027 176d 10043006 		.ascii	"\020\0040\006 \002 \003@\001@\001\200\000\200\000\000"
 3027      20022003 
 3027      40014001 
 3027      80008000 
 3027      00
 3028 177e 0000     		.ascii	"\000\000"
 3029 1780 3E00     		.ascii	">\000"
 3030 1782 00000000 		.ascii	"\000\000\000\000\014\000\014\000\034\000\030\000\020"
 3030      0C000C00 
 3030      1C001800 
 3030      10
 3031 178f 4C10CC10 		.ascii	"L\020\314\020\314\021\200\033\000\037\000\016\000\004"
 3031      CC11801B 
 3031      001F000E 
 3031      0004
 3032 179d 00000000 		.ascii	"\000\000\000\000\000"
 3032      00
 3033 17a2 3F00     		.ascii	"?\000"
 3034 17a4 000003E0 		.ascii	"\000\000\003\340\004\020\010\010\011\344\023\344\022"
 3034      04100808 
 3034      09E413E4 
 3034      12
 3035 17b1 14141414 		.ascii	"\024\024\024\024$\025\344\027\244\026\024\010(\014`"
 3035      2415E417 
 3035      A4161408 
 3035      280C60
 3036 17c0 07C00000 		.ascii	"\007\300\000\000"
 3037 17c4 4000     		.ascii	"@\000"
 3038 17c6 0004000C 		.ascii	"\000\004\000\014\000<\000\370\001\360\007\300\037@\034"
 3038      003C00F8 
 3038      01F007C0 
 3038      1F401C
ARM GAS  /tmp/ccfCRRJc.s 			page 100


 3039 17d5 401C400F 		.ascii	"@\034@\017@\007\300\001\360\000|\000<\000\014\000\000"
 3039      4007C001 
 3039      F0007C00 
 3039      3C000C00 
 3039      00
 3040 17e6 4100     		.ascii	"A\000"
 3041 17e8 00001FFC 		.ascii	"\000\000\037\374\037\374\037\374\021\214\021\214\021"
 3041      1FFC1FFC 
 3041      118C118C 
 3041      11
 3042 17f5 8C118C11 		.ascii	"\214\021\214\021\214\021\214\031\214\037\330\017\370"
 3042      8C118C19 
 3042      8C1FD80F 
 3042      F8
 3043 1802 0E780030 		.ascii	"\016x\0000\000\000"
 3043      0000
 3044 1808 4200     		.ascii	"B\000"
 3045 180a 000003E0 		.ascii	"\000\000\003\340\007\360\017\370\014\030\030\010\020"
 3045      07F00FF8 
 3045      0C181808 
 3045      10
 3046 1817 0C100410 		.ascii	"\014\020\004\020\004\020\004\020\014\030\030\016x\016"
 3046      04100410 
 3046      0C18180E 
 3046      780E
 3047 1825 70066000 		.ascii	"p\006`\000\000"
 3047      00
 3048 182a 4300     		.ascii	"C\000"
 3049 182c 00001FFC 		.ascii	"\000\000\037\374\037\374\037\374\020\014\020\014\020"
 3049      1FFC1FFC 
 3049      100C100C 
 3049      10
 3050 1839 0C100C10 		.ascii	"\014\020\014\020\014\030\010\030\030\0168\017\360\007"
 3050      0C180818 
 3050      180E380F 
 3050      F007
 3051 1847 F001C000 		.ascii	"\360\001\300\000\000"
 3051      00
 3052 184c 4400     		.ascii	"D\000"
 3053 184e 00000000 		.ascii	"\000\000\000\000\037\374\037\374\037\374\021\214\021"
 3053      1FFC1FFC 
 3053      1FFC118C 
 3053      11
 3054 185b 8C118C11 		.ascii	"\214\021\214\021\214\021\214\021\214\021\214\021\214"
 3054      8C118C11 
 3054      8C118C11 
 3054      8C
 3055 1868 100C000C 		.ascii	"\020\014\000\014\000\000"
 3055      0000
 3056 186e 4500     		.ascii	"E\000"
 3057 1870 00001FFC 		.ascii	"\000\000\037\374\037\374\037\374\020\200\020\200\020"
 3057      1FFC1FFC 
 3057      10801080 
 3057      10
 3058 187d 80108010 		.ascii	"\200\020\200\020\200\020\200\020\200\020\200\020\000"
 3058      80108010 
 3058      80108010 
ARM GAS  /tmp/ccfCRRJc.s 			page 101


 3058      00
 3059 188a 10001000 		.ascii	"\020\000\020\000\000\000"
 3059      0000
 3060 1890 4600     		.ascii	"F\000"
 3061 1892 000003E0 		.ascii	"\000\000\003\340\007\360\017\370\034\030\030\014\020"
 3061      07F00FF8 
 3061      1C18180C 
 3061      10
 3062 189f 0C100410 		.ascii	"\014\020\004\020\304\020\304\030\310\036\330\016\374"
 3062      C410C418 
 3062      C81ED80E 
 3062      FC
 3063 18ac 06FC0000 		.ascii	"\006\374\000\000\000\000"
 3063      0000
 3064 18b2 4700     		.ascii	"G\000"
 3065 18b4 00001FFC 		.ascii	"\000\000\037\374\037\374\037\374\001\200\001\200\001"
 3065      1FFC1FFC 
 3065      01800180 
 3065      01
 3066 18c1 80018001 		.ascii	"\200\001\200\001\200\001\200\001\200\037\374\037\374"
 3066      80018001 
 3066      801FFC1F 
 3066      FC
 3067 18ce 1FFC0000 		.ascii	"\037\374\000\000\000\000"
 3067      0000
 3068 18d4 4800     		.ascii	"H\000"
 3069 18d6 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\037"
 3069      00000000 
 3069      00000000 
 3069      1F
 3070 18e3 FC1FFC1F 		.ascii	"\374\037\374\037\374\000\000\000\000\000\000\000\000"
 3070      FC000000 
 3070      00000000 
 3070      00
 3071 18f0 00000000 		.ascii	"\000\000\000\000\000\000"
 3071      0000
 3072 18f6 4900     		.ascii	"I\000"
 3073 18f8 00000000 		.ascii	"\000\000\000\000\0000\0008\0008\000\014\000\014\000"
 3073      00300038 
 3073      0038000C 
 3073      000C00
 3074 1907 0C000C00 		.ascii	"\014\000\014\000\014\000\014\037\370\037\370\037\360"
 3074      0C000C1F 
 3074      F81FF81F 
 3074      F0
 3075 1914 00000000 		.ascii	"\000\000\000\000"
 3076 1918 4A00     		.ascii	"J\000"
 3077 191a 00001FFC 		.ascii	"\000\000\037\374\037\374\037\374\001\300\001\200\003"
 3077      1FFC1FFC 
 3077      01C00180 
 3077      03
 3078 1927 8003C006 		.ascii	"\200\003\300\006\300\014\340\014p\0308\020\034\020\014"
 3078      C00CE00C 
 3078      70183810 
 3078      1C100C
 3079 1936 00040000 		.ascii	"\000\004\000\000"
 3080 193a 4B00     		.ascii	"K\000"
ARM GAS  /tmp/ccfCRRJc.s 			page 102


 3081 193c 00001FFC 		.ascii	"\000\000\037\374\037\374\037\374\000\014\000\014\000"
 3081      1FFC1FFC 
 3081      000C000C 
 3081      00
 3082 1949 0C000C00 		.ascii	"\014\000\014\000\014\000\014\000\014\000\014\000\014"
 3082      0C000C00 
 3082      0C000C00 
 3082      0C
 3083 1956 000C000C 		.ascii	"\000\014\000\014\000\000"
 3083      0000
 3084 195c 4C00     		.ascii	"L\000"
 3085 195e 00001FFC 		.ascii	"\000\000\037\374\037\374\037\374\037\000\017\300\001"
 3085      1FFC1FFC 
 3085      1F000FC0 
 3085      01
 3086 196b F8007C00 		.ascii	"\370\000|\000|\003\360\017\300\036\000\037\374\037\374"
 3086      7C03F00F 
 3086      C01E001F 
 3086      FC1FFC
 3087 197a 1FFC0000 		.ascii	"\037\374\000\000"
 3088 197e 4D00     		.ascii	"M\000"
 3089 1980 00001FFC 		.ascii	"\000\000\037\374\037\374\037\374\034\000\016\000\007"
 3089      1FFC1FFC 
 3089      1C000E00 
 3089      07
 3090 198d 0001C000 		.ascii	"\000\001\300\000\340\000p\0008\037\374\037\374\037\374"
 3090      E0007000 
 3090      381FFC1F 
 3090      FC1FFC
 3091 199c 00000000 		.ascii	"\000\000\000\000"
 3092 19a0 4E00     		.ascii	"N\000"
 3093 19a2 000007E0 		.ascii	"\000\000\007\340\017\360\017\370\030\030\030\014\020"
 3093      0FF00FF8 
 3093      1818180C 
 3093      10
 3094 19af 0C100410 		.ascii	"\014\020\004\020\004\020\014\030\014\0348\017\370\007"
 3094      04100C18 
 3094      0C1C380F 
 3094      F807
 3095 19bd F003C000 		.ascii	"\360\003\300\000\000"
 3095      00
 3096 19c2 4F00     		.ascii	"O\000"
 3097 19c4 00000000 		.ascii	"\000\000\000\000\037\374\037\374\037\374\020\300\020"
 3097      1FFC1FFC 
 3097      1FFC10C0 
 3097      10
 3098 19d1 C010C010 		.ascii	"\300\020\300\020\200\020\200\030\200\031\200\017\200"
 3098      80108018 
 3098      8019800F 
 3098      80
 3099 19de 0F000600 		.ascii	"\017\000\006\000\000\000"
 3099      0000
 3100 19e4 5000     		.ascii	"P\000"
 3101 19e6 000007E0 		.ascii	"\000\000\007\340\017\360\017\370\030\030\030\014\020"
 3101      0FF00FF8 
 3101      1818180C 
 3101      10
ARM GAS  /tmp/ccfCRRJc.s 			page 103


 3102 19f3 0C100410 		.ascii	"\014\020\004\020$\020|\030<\034<\017\374\007\364\003"
 3102      24107C18 
 3102      3C1C3C0F 
 3102      FC07F403 
 3103 1a03 C00000   		.ascii	"\300\000\000"
 3104 1a06 5100     		.ascii	"Q\000"
 3105 1a08 00001FFC 		.ascii	"\000\000\037\374\037\374\037\374\020\200\020\200\020"
 3105      1FFC1FFC 
 3105      10801080 
 3105      10
 3106 1a15 80108010 		.ascii	"\200\020\200\020\300\020\340\031\360\037\270\017\034"
 3106      C010E019 
 3106      F01FB80F 
 3106      1C
 3107 1a22 0F0C0004 		.ascii	"\017\014\000\004\000\000"
 3107      0000
 3108 1a28 5200     		.ascii	"R\000"
 3109 1a2a 00000030 		.ascii	"\000\000\0000\0168\0178\037\010\021\014\021\204\021"
 3109      0E380F38 
 3109      1F08110C 
 3109      118411
 3110 1a39 84108410 		.ascii	"\204\020\204\020\214\030\314\034\330\014x\004p\000\000"
 3110      8C18CC1C 
 3110      D80C7804 
 3110      700000
 3111 1a48 0000     		.ascii	"\000\000"
 3112 1a4a 5300     		.ascii	"S\000"
 3113 1a4c 00001000 		.ascii	"\000\000\020\000\020\000\020\000\020\000\020\000\037"
 3113      10001000 
 3113      10001000 
 3113      1F
 3114 1a59 FC1FFC1F 		.ascii	"\374\037\374\037\374\020\000\020\000\020\000\020\000"
 3114      FC100010 
 3114      00100010 
 3114      00
 3115 1a66 10000000 		.ascii	"\020\000\000\000\000\000"
 3115      0000
 3116 1a6c 5400     		.ascii	"T\000"
 3117 1a6e 00001FE0 		.ascii	"\000\000\037\340\037\370\037\370\000\034\000\014\000"
 3117      1FF81FF8 
 3117      001C000C 
 3117      00
 3118 1a7b 04000400 		.ascii	"\004\000\004\000\004\000\014\000\014\037\370\037\370"
 3118      04000C00 
 3118      0C1FF81F 
 3118      F8
 3119 1a88 1FF00000 		.ascii	"\037\360\000\000\000\000"
 3119      0000
 3120 1a8e 5500     		.ascii	"U\000"
 3121 1a90 00001800 		.ascii	"\000\000\030\000\036\000\037\200\007\300\001\360\000"
 3121      1E001F80 
 3121      07C001F0 
 3121      00
 3122 1a9d 7C001C00 		.ascii	"|\000\034\000<\000\370\003\340\017\200\037\000\034\000"
 3122      3C00F803 
 3122      E00F801F 
 3122      001C00
ARM GAS  /tmp/ccfCRRJc.s 			page 104


 3123 1aac 10000000 		.ascii	"\020\000\000\000"
 3124 1ab0 5600     		.ascii	"V\000"
 3125 1ab2 10001F00 		.ascii	"\020\000\037\000\037\360\003\374\000<\003\370\037\300"
 3125      1FF003FC 
 3125      003C03F8 
 3125      1FC0
 3126 1ac0 1C001F00 		.ascii	"\034\000\037\000\017\360\000\374\000|\017\374\037\300"
 3126      0FF000FC 
 3126      007C0FFC 
 3126      1FC0
 3127 1ace 1C000000 		.ascii	"\034\000\000\000"
 3128 1ad2 5700     		.ascii	"W\000"
 3129 1ad4 00000004 		.ascii	"\000\000\000\004\020\014\030\034\0348\016p\003\340\001"
 3129      100C181C 
 3129      1C380E70 
 3129      03E001
 3130 1ae3 C003C007 		.ascii	"\300\003\300\007\340\016p\0348\030\034\020\014\000\004"
 3130      E00E701C 
 3130      38181C10 
 3130      0C0004
 3131 1af2 0000     		.ascii	"\000\000"
 3132 1af4 5800     		.ascii	"X\000"
 3133 1af6 00001000 		.ascii	"\000\000\020\000\030\000\034\000\016\000\007\000\003"
 3133      18001C00 
 3133      0E000700 
 3133      03
 3134 1b03 FC01FC01 		.ascii	"\374\001\374\001\374\003\200\007\000\016\000\034\000"
 3134      FC038007 
 3134      000E001C 
 3134      00
 3135 1b10 18001000 		.ascii	"\030\000\020\000\000\000"
 3135      0000
 3136 1b16 5900     		.ascii	"Y\000"
 3137 1b18 0000000C 		.ascii	"\000\000\000\014\020\034\020\034\020<\020l\020\314\021"
 3137      101C101C 
 3137      103C106C 
 3137      10CC11
 3138 1b27 CC138C13 		.ascii	"\314\023\214\023\014\026\014\034\014\034\014\030\014"
 3138      0C160C1C 
 3138      0C1C0C18 
 3138      0C
 3139 1b34 000C0000 		.ascii	"\000\014\000\000"
 3140 1b38 5A00     		.ascii	"Z\000"
 3141 1b3a 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\177"
 3141      00000000 
 3141      00000000 
 3141      7F
 3142 1b47 FE7FFE40 		.ascii	"\376\177\376@\002@\002@\002@\002@\002@\002\000\000\000"
 3142      02400240 
 3142      02400240 
 3142      02400200 
 3142      0000
 3143 1b59 00       		.ascii	"\000"
 3144 1b5a 5B00     		.ascii	"[\000"
 3145 1b5c 00000000 		.ascii	"\000\000\000\000\020\000\030\000\014\000\006\000\003"
 3145      10001800 
 3145      0C000600 
ARM GAS  /tmp/ccfCRRJc.s 			page 105


 3145      03
 3146 1b69 8001C000 		.ascii	"\200\001\300\000`\0000\000\034\000\016\000\003\000\001"
 3146      60003000 
 3146      1C000E00 
 3146      030001
 3147 1b78 00000000 		.ascii	"\000\000\000\000"
 3148 1b7c 5C00     		.ascii	"\\\000"
 3149 1b7e 00004002 		.ascii	"\000\000@\002@\002@\002@\002@\002@\002\177\376\177\376"
 3149      40024002 
 3149      40024002 
 3149      40027FFE 
 3149      7FFE
 3150 1b90 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 3150      00000000 
 3150      00000000 
 3150      00
 3151 1b9d 00       		.ascii	"\000"
 3152 1b9e 5D00     		.ascii	"]\000"
 3153 1ba0 00000000 		.ascii	"\000\000\000\000\020\000\020\000 \000 \000`\000@\000"
 3153      10001000 
 3153      20002000 
 3153      60004000 
 3154 1bb0 40006000 		.ascii	"@\000`\000 \0000\000\020\000\000\000\000\000\000\000"
 3154      20003000 
 3154      10000000 
 3154      00000000 
 3155 1bc0 5E00     		.ascii	"^\000"
 3156 1bc2 00010001 		.ascii	"\000\001\000\001\000\001\000\001\000\001\000\001\000"
 3156      00010001 
 3156      00010001 
 3156      00
 3157 1bcf 01000100 		.ascii	"\001\000\001\000\001\000\001\000\001\000\001\000\001"
 3157      01000100 
 3157      01000100 
 3157      01
 3158 1bdc 00010001 		.ascii	"\000\001\000\001\000\001"
 3158      0001
 3159 1be2 5F00     		.ascii	"_\000"
 3160 1be4 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000@\000@\000`"
 3160      00000000 
 3160      00004000 
 3160      400060
 3161 1bf3 00300010 		.ascii	"\0000\000\020\000\020\000\000\000\000\000\000\000\000"
 3161      00100000 
 3161      00000000 
 3161      0000
 3162 1c01 000000   		.ascii	"\000\000\000"
 3163 1c04 6000     		.ascii	"`\000"
 3164 1c06 00000010 		.ascii	"\000\000\000\020\000\270\001\274\001\254\001$\001$\001"
 3164      00B801BC 
 3164      01AC0124 
 3164      012401
 3165 1c15 24014C01 		.ascii	"$\001L\001H\001H\001\374\001\374\000\004\000\000\000"
 3165      48014801 
 3165      FC01FC00 
 3165      04000000 
 3166 1c25 00       		.ascii	"\000"
ARM GAS  /tmp/ccfCRRJc.s 			page 106


 3167 1c26 6100     		.ascii	"a\000"
 3168 1c28 00001FFC 		.ascii	"\000\000\037\374\037\374\037\374\001\210\001\010\001"
 3168      1FFC1FFC 
 3168      01880108 
 3168      01
 3169 1c35 04010401 		.ascii	"\004\001\004\001\004\001\014\001\014\001\370\000\370"
 3169      04010C01 
 3169      0C01F800 
 3169      F8
 3170 1c42 00F00000 		.ascii	"\000\360\000\000\000\000"
 3170      0000
 3171 1c48 6200     		.ascii	"b\000"
 3172 1c4a 00000070 		.ascii	"\000\000\000p\000\360\001\370\001\210\001\014\001\004"
 3172      00F001F8 
 3172      0188010C 
 3172      0104
 3173 1c58 01040104 		.ascii	"\001\004\001\004\001\004\001\014\001\230\001\230\000"
 3173      0104010C 
 3173      01980198 
 3173      00
 3174 1c65 90000000 		.ascii	"\220\000\000\000\000"
 3174      00
 3175 1c6a 6300     		.ascii	"c\000"
 3176 1c6c 00000070 		.ascii	"\000\000\000p\000\370\001\370\001\214\001\014\001\004"
 3176      00F801F8 
 3176      018C010C 
 3176      0104
 3177 1c7a 01040104 		.ascii	"\001\004\001\004\001\014\001\210\037\374\037\374\037"
 3177      010C0188 
 3177      1FFC1FFC 
 3177      1F
 3178 1c87 FC000000 		.ascii	"\374\000\000\000\000"
 3178      00
 3179 1c8c 6400     		.ascii	"d\000"
 3180 1c8e 00000060 		.ascii	"\000\000\000`\000\360\001\370\001\310\001L\001D\001"
 3180      00F001F8 
 3180      01C8014C 
 3180      014401
 3181 1c9d 44014401 		.ascii	"D\001D\001D\001L\001\330\001\330\000\320\000\000\000"
 3181      44014C01 
 3181      D801D800 
 3181      D0000000 
 3182 1cad 00       		.ascii	"\000"
 3183 1cae 6500     		.ascii	"e\000"
 3184 1cb0 00000100 		.ascii	"\000\000\001\000\001\000\001\000\001\000\001\000\017"
 3184      01000100 
 3184      01000100 
 3184      0F
 3185 1cbd FC1FFC11 		.ascii	"\374\037\374\021\000\021\000\021\000\021\000\021\000"
 3185      00110011 
 3185      00110011 
 3185      00
 3186 1cca 10000000 		.ascii	"\020\000\000\000\000\000"
 3186      0000
 3187 1cd0 6600     		.ascii	"f\000"
 3188 1cd2 00000002 		.ascii	"\000\000\000\002\000\336\001\377\001\351\001)\001)\001"
 3188      00DE01FF 
ARM GAS  /tmp/ccfCRRJc.s 			page 107


 3188      01E90129 
 3188      012901
 3189 1ce1 29012901 		.ascii	")\001)\001)\001\355\001\315\001\007\001\006\001\000"
 3189      2901ED01 
 3189      CD010701 
 3189      060100
 3190 1cf0 0000     		.ascii	"\000\000"
 3191 1cf2 6700     		.ascii	"g\000"
 3192 1cf4 00000000 		.ascii	"\000\000\000\000\037\374\037\374\000\300\001\200\001"
 3192      1FFC1FFC 
 3192      00C00180 
 3192      01
 3193 1d01 00010001 		.ascii	"\000\001\000\001\000\001\000\001\000\001\374\001\374"
 3193      00010001 
 3193      0001FC01 
 3193      FC
 3194 1d0e 00FC0000 		.ascii	"\000\374\000\000\000\000"
 3194      0000
 3195 1d14 6800     		.ascii	"h\000"
 3196 1d16 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\021"
 3196      00000000 
 3196      00000000 
 3196      11
 3197 1d23 FC19FC19 		.ascii	"\374\031\374\031\374\000\000\000\000\000\000\000\000"
 3197      FC000000 
 3197      00000000 
 3197      00
 3198 1d30 00000000 		.ascii	"\000\000\000\000\000\000"
 3198      0000
 3199 1d36 6900     		.ascii	"i\000"
 3200 1d38 00000000 		.ascii	"\000\000\000\000\000\000\000\001\000\001\000\001\000"
 3200      00000001 
 3200      00010001 
 3200      00
 3201 1d45 01000100 		.ascii	"\001\000\001\000\001\031\377\031\376\021\374\000\000"
 3201      0119FF19 
 3201      FE11FC00 
 3201      00
 3202 1d52 00000000 		.ascii	"\000\000\000\000\000\000"
 3202      0000
 3203 1d58 6A00     		.ascii	"j\000"
 3204 1d5a 00000000 		.ascii	"\000\000\000\000\037\374\037\374\000 \000`\000@\000"
 3204      1FFC1FFC 
 3204      00200060 
 3204      004000
 3205 1d69 C000E001 		.ascii	"\300\000\340\001\260\0018\001\030\001\014\000\004\000"
 3205      B0013801 
 3205      18010C00 
 3205      0400
 3206 1d77 000000   		.ascii	"\000\000\000"
 3207 1d7a 6B00     		.ascii	"k\000"
 3208 1d7c 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 3208      00000000 
 3208      00000000 
 3208      00
 3209 1d89 001FFC1F 		.ascii	"\000\037\374\037\374\000\000\000\000\000\000\000\000"
 3209      FC000000 
ARM GAS  /tmp/ccfCRRJc.s 			page 108


 3209      00000000 
 3209      00
 3210 1d96 00000000 		.ascii	"\000\000\000\000\000\000"
 3210      0000
 3211 1d9c 6C00     		.ascii	"l\000"
 3212 1d9e 01FC01FC 		.ascii	"\001\374\001\374\001\374\001\000\001\000\001\000\001"
 3212      01FC0100 
 3212      01000100 
 3212      01
 3213 1dab 0001FC01 		.ascii	"\000\001\374\001\374\001\200\001\000\001\000\001\000"
 3213      FC018001 
 3213      00010001 
 3213      00
 3214 1db8 01FC01FC 		.ascii	"\001\374\001\374\000\000"
 3214      0000
 3215 1dbe 6D00     		.ascii	"m\000"
 3216 1dc0 00000000 		.ascii	"\000\000\000\000\001\374\001\374\000\300\001\200\001"
 3216      01FC01FC 
 3216      00C00180 
 3216      01
 3217 1dcd 00010001 		.ascii	"\000\001\000\001\000\001\000\001\000\001\374\001\374"
 3217      00010001 
 3217      0001FC01 
 3217      FC
 3218 1dda 00FC0000 		.ascii	"\000\374\000\000\000\000"
 3218      0000
 3219 1de0 6E00     		.ascii	"n\000"
 3220 1de2 00000060 		.ascii	"\000\000\000`\000\360\001\370\001\210\001\014\001\004"
 3220      00F001F8 
 3220      0188010C 
 3220      0104
 3221 1df0 01040104 		.ascii	"\001\004\001\004\001\014\001\014\001\230\000\370\000"
 3221      010C010C 
 3221      019800F8 
 3221      00
 3222 1dfd F0006000 		.ascii	"\360\000`\000\000"
 3222      00
 3223 1e02 6F00     		.ascii	"o\000"
 3224 1e04 000001FF 		.ascii	"\000\000\001\377\001\377\001\377\001\210\001\014\001"
 3224      01FF01FF 
 3224      0188010C 
 3224      01
 3225 1e11 04010401 		.ascii	"\004\001\004\001\004\001\004\001\014\001\370\000\370"
 3225      04010401 
 3225      0C01F800 
 3225      F8
 3226 1e1e 00F00000 		.ascii	"\000\360\000\000\000\000"
 3226      0000
 3227 1e24 7000     		.ascii	"p\000"
 3228 1e26 00000070 		.ascii	"\000\000\000p\000\370\001\370\001\214\001\014\001\004"
 3228      00F801F8 
 3228      018C010C 
 3228      0104
 3229 1e34 01040104 		.ascii	"\001\004\001\004\001\014\001\210\001\377\001\377\001"
 3229      010C0188 
 3229      01FF01FF 
 3229      01
ARM GAS  /tmp/ccfCRRJc.s 			page 109


 3230 1e41 FF000000 		.ascii	"\377\000\000\000\000"
 3230      00
 3231 1e46 7100     		.ascii	"q\000"
 3232 1e48 00000000 		.ascii	"\000\000\000\000\000\000\001\374\001\374\001\374\000"
 3232      000001FC 
 3232      01FC01FC 
 3232      00
 3233 1e55 80018001 		.ascii	"\200\001\200\001\000\001\000\001\000\001\000\001\000"
 3233      00010001 
 3233      00010001 
 3233      00
 3234 1e62 00000000 		.ascii	"\000\000\000\000\000\000"
 3234      0000
 3235 1e68 7200     		.ascii	"r\000"
 3236 1e6a 00000000 		.ascii	"\000\000\000\000\000\230\001\330\001\330\001L\001d\001"
 3236      009801D8 
 3236      01D8014C 
 3236      016401
 3237 1e79 24012401 		.ascii	"$\001$\001$\001,\001\270\001\270\000\020\000\000\000"
 3237      24012C01 
 3237      B801B800 
 3237      10000000 
 3238 1e89 00       		.ascii	"\000"
 3239 1e8a 7300     		.ascii	"s\000"
 3240 1e8c 00000100 		.ascii	"\000\000\001\000\001\000\001\000\001\000\017\360\017"
 3240      01000100 
 3240      01000FF0 
 3240      0F
 3241 1e99 F80FFC01 		.ascii	"\370\017\374\001\004\001\004\001\004\001\004\001\004"
 3241      04010401 
 3241      04010401 
 3241      04
 3242 1ea6 000C0000 		.ascii	"\000\014\000\000\000\000"
 3242      0000
 3243 1eac 7400     		.ascii	"t\000"
 3244 1eae 00000000 		.ascii	"\000\000\000\000\001\370\001\370\000\014\000\004\000"
 3244      01F801F8 
 3244      000C0004 
 3244      00
 3245 1ebb 04000400 		.ascii	"\004\000\004\000\004\000\010\000\010\001\374\001\374"
 3245      04000800 
 3245      0801FC01 
 3245      FC
 3246 1ec8 01FC0000 		.ascii	"\001\374\000\000\000\000"
 3246      0000
 3247 1ece 7500     		.ascii	"u\000"
 3248 1ed0 00000000 		.ascii	"\000\000\000\000\001\200\001\300\000\340\000x\000\034"
 3248      018001C0 
 3248      00E00078 
 3248      001C
 3249 1ede 000C001C 		.ascii	"\000\014\000\034\0008\000\360\001\340\001\200\001\000"
 3249      003800F0 
 3249      01E00180 
 3249      0100
 3250 1eec 00000000 		.ascii	"\000\000\000\000"
 3251 1ef0 7600     		.ascii	"v\000"
 3252 1ef2 010001C0 		.ascii	"\001\000\001\300\001\360\000|\000\034\000|\001\340\001"
ARM GAS  /tmp/ccfCRRJc.s 			page 110


 3252      01F0007C 
 3252      001C007C 
 3252      01E001
 3253 1f01 8001C000 		.ascii	"\200\001\300\000\370\000<\000<\001\370\001\340\001\200"
 3253      F8003C00 
 3253      3C01F801 
 3253      E00180
 3254 1f10 0000     		.ascii	"\000\000"
 3255 1f12 7700     		.ascii	"w\000"
 3256 1f14 00000004 		.ascii	"\000\000\000\004\001\004\001\014\001\230\001\330\000"
 3256      0104010C 
 3256      019801D8 
 3256      00
 3257 1f21 F0006000 		.ascii	"\360\000`\000p\000\360\001\230\001\014\001\014\000\004"
 3257      7000F001 
 3257      98010C01 
 3257      0C0004
 3258 1f30 00000000 		.ascii	"\000\000\000\000"
 3259 1f34 7800     		.ascii	"x\000"
 3260 1f36 00000000 		.ascii	"\000\000\000\000\001\201\001\301\000\341\000y\000?\000"
 3260      018101C1 
 3260      00E10079 
 3260      003F00
 3261 1f45 0E001E00 		.ascii	"\016\000\036\0008\000\360\001\340\001\200\001\000\000"
 3261      3800F001 
 3261      E0018001 
 3261      0000
 3262 1f53 000000   		.ascii	"\000\000\000"
 3263 1f56 7900     		.ascii	"y\000"
 3264 1f58 00000000 		.ascii	"\000\000\000\000\001\014\001\014\001\034\0014\0014\001"
 3264      010C010C 
 3264      011C0134 
 3264      013401
 3265 1f67 64014401 		.ascii	"d\001D\001\304\001\204\001\204\001\004\000\004\000\000"
 3265      C4018401 
 3265      84010400 
 3265      040000
 3266 1f76 0000     		.ascii	"\000\000"
 3267 1f78 7A00     		.ascii	"z\000"
 3268 1f7a 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 3268      00000000 
 3268      00000000 
 3268      00
 3269 1f87 00008000 		.ascii	"\000\000\200\000\200?\376\177~@\002@\002@\000\000\000"
 3269      803FFE7F 
 3269      7E400240 
 3269      02400000 
 3269      00
 3270 1f98 0000     		.ascii	"\000\000"
 3271 1f9a 7B00     		.ascii	"{\000"
 3272 1f9c 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 3272      00000000 
 3272      00000000 
 3272      00
 3273 1fa9 00FFFFFF 		.ascii	"\000\377\377\377\377\000\000\000\000\000\000\000\000"
 3273      FF000000 
 3273      00000000 
ARM GAS  /tmp/ccfCRRJc.s 			page 111


 3273      00
 3274 1fb6 00000000 		.ascii	"\000\000\000\000\000\000"
 3274      0000
 3275 1fbc 7C00     		.ascii	"|\000"
 3276 1fbe 00000000 		.ascii	"\000\000\000\000@\000@\002~~?\376?\376\000\200\000\200"
 3276      40004002 
 3276      7E7E3FFE 
 3276      3FFE0080 
 3276      0080
 3277 1fd0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 3277      00000000 
 3277      00000000 
 3277      00
 3278 1fdd 00       		.ascii	"\000"
 3279 1fde 7D00     		.ascii	"}\000"
 3280 1fe0 00000000 		.ascii	"\000\000\000\000 \000`\000@\000\300\000@\000@\000`\000"
 3280      20006000 
 3280      4000C000 
 3280      40004000 
 3280      6000
 3281 1ff2 20002000 		.ascii	" \000 \000 \000`\000@\000\000\000\000\000"
 3281      20006000 
 3281      40000000 
 3281      0000
 3282 2000 7E00     		.ascii	"~\000"
 3283              		.section	.rodata.asc2_0806,"a"
 3284              		.align	2
 3285              		.set	.LANCHOR3,. + 0
 3288              	asc2_0806:
 3289 0000 00000000 		.ascii	"\000\000\000\000\000\000"
 3289      0000
 3290 0006 007A0000 		.ascii	"\000z\000\000\000\000"
 3290      0000
 3291 000c 60006000 		.ascii	"`\000`\000\000\000"
 3291      0000
 3292 0012 00177C1F 		.ascii	"\000\027|\037t\000"
 3292      7400
 3293 0018 54FF4A2C 		.ascii	"T\377J,\000\000"
 3293      0000
 3294 001e 384A3C72 		.ascii	"8J<r\004\000"
 3294      0400
 3295 0024 0C326A24 		.ascii	"\0142j$\012\000"
 3295      0A00
 3296 002a 60000000 		.ascii	"`\000\000\000\000\000"
 3296      0000
 3297 0030 003E4100 		.ascii	"\000>A\000\000\000"
 3297      0000
 3298 0036 611E0000 		.ascii	"a\036\000\000\000\000"
 3298      0000
 3299 003c 183C1800 		.ascii	"\030<\030\000\000\000"
 3299      0000
 3300 0042 08083E08 		.ascii	"\010\010>\010\010\000"
 3300      0800
 3301 0048 00030000 		.ascii	"\000\003\000\000\000\000"
 3301      0000
 3302 004e 00080808 		.ascii	"\000\010\010\010\010\000"
 3302      0800
ARM GAS  /tmp/ccfCRRJc.s 			page 112


 3303 0054 02000000 		.ascii	"\002\000\000\000\000\000"
 3303      0000
 3304 005a 0F700000 		.ascii	"\017p\000\000\000\000"
 3304      0000
 3305 0060 3C42423C 		.ascii	"<BB<\000\000"
 3305      0000
 3306 0066 00227E7E 		.ascii	"\000\"~~\002\000"
 3306      0200
 3307 006c 264A4A32 		.ascii	"&JJ2\000\000"
 3307      0000
 3308 0072 00525252 		.ascii	"\000RRR<\000"
 3308      3C00
 3309 0078 182A7E0A 		.ascii	"\030*~\012\000\000"
 3309      0000
 3310 007e 00745252 		.ascii	"\000tRRL\000"
 3310      4C00
 3311 0084 3C52520C 		.ascii	"<RR\014\000\000"
 3311      0000
 3312 008a 204E7000 		.ascii	" Np\000\000\000"
 3312      0000
 3313 0090 002C5252 		.ascii	"\000,RR,\000"
 3313      2C00
 3314 0096 32494A3C 		.ascii	"2IJ<\000\000"
 3314      0000
 3315 009c 00120000 		.ascii	"\000\022\000\000\000\000"
 3315      0000
 3316 00a2 00130000 		.ascii	"\000\023\000\000\000\000"
 3316      0000
 3317 00a8 00181824 		.ascii	"\000\030\030$\000\000"
 3317      0000
 3318 00ae 00141414 		.ascii	"\000\024\024\024\024\000"
 3318      1400
 3319 00b4 00241818 		.ascii	"\000$\030\030\000\000"
 3319      0000
 3320 00ba 204A3000 		.ascii	" J0\000\000\000"
 3320      0000
 3321 00c0 1C224959 		.ascii	"\034\"IYE8"
 3321      4538
 3322 00c6 063A483A 		.ascii	"\006:H:\006\000"
 3322      0600
 3323 00cc 7E4A4A34 		.ascii	"~JJ4\000\000"
 3323      0000
 3324 00d2 3C424264 		.ascii	"<BBd\000\000"
 3324      0000
 3325 00d8 7E42423C 		.ascii	"~BB<\000\000"
 3325      0000
 3326 00de 7E4A5A42 		.ascii	"~JZB\000\000"
 3326      0000
 3327 00e4 7E485840 		.ascii	"~HX@\000\000"
 3327      0000
 3328 00ea 3C42426E 		.ascii	"<BBn\000\000"
 3328      0000
 3329 00f0 427E087E 		.ascii	"B~\010~B\000"
 3329      4200
 3330 00f6 427E4200 		.ascii	"B~B\000\000\000"
 3330      0000
 3331 00fc 04427C40 		.ascii	"\004B|@\000\000"
ARM GAS  /tmp/ccfCRRJc.s 			page 113


 3331      0000
 3332 0102 427E1228 		.ascii	"B~\022(F\000"
 3332      4600
 3333 0108 7E420204 		.ascii	"~B\002\004\000\000"
 3333      0000
 3334 010e 7E380638 		.ascii	"~8\0068~B"
 3334      7E42
 3335 0114 7E300C7E 		.ascii	"~0\014~@\000"
 3335      4000
 3336 011a 3C42423C 		.ascii	"<BB<\000\000"
 3336      0000
 3337 0120 7E4A4830 		.ascii	"~JH0\000\000"
 3337      0000
 3338 0126 24464738 		.ascii	"$FG8\000\000"
 3338      0000
 3339 012c 7E4A4836 		.ascii	"~JH6\000\000"
 3339      0000
 3340 0132 36524A2C 		.ascii	"6RJ,\000\000"
 3340      0000
 3341 0138 20427E42 		.ascii	" B~B \000"
 3341      2000
 3342 013e 7C02027C 		.ascii	"|\002\002|@\000"
 3342      4000
 3343 0144 78061C60 		.ascii	"x\006\034`\000\000"
 3343      0000
 3344 014a 407E0C78 		.ascii	"@~\014x\016p"
 3344      0E70
 3345 0150 427E1866 		.ascii	"B~\030f\000\000"
 3345      0000
 3346 0156 40720E72 		.ascii	"@r\016r@\000"
 3346      4000
 3347 015c 465A6200 		.ascii	"FZb\000\000\000"
 3347      0000
 3348 0162 00FF8100 		.ascii	"\000\377\201\000\000\000"
 3348      0000
 3349 0168 78070000 		.ascii	"x\007\000\000\000\000"
 3349      0000
 3350 016e 81FF0000 		.ascii	"\201\377\000\000\000\000"
 3350      0000
 3351 0174 08100800 		.ascii	"\010\020\010\000\000\000"
 3351      0000
 3352 017a 01010100 		.ascii	"\001\001\001\000\000\000"
 3352      0000
 3353 0180 60000000 		.ascii	"`\000\000\000\000\000"
 3353      0000
 3354 0186 14160E00 		.ascii	"\024\026\016\000\000\000"
 3354      0000
 3355 018c 7E120C00 		.ascii	"~\022\014\000\000\000"
 3355      0000
 3356 0192 0C121200 		.ascii	"\014\022\022\000\000\000"
 3356      0000
 3357 0198 0C127E00 		.ascii	"\014\022~\000\000\000"
 3357      0000
 3358 019e 0C1A0A00 		.ascii	"\014\032\012\000\000\000"
 3358      0000
 3359 01a4 003E5200 		.ascii	"\000>R\000\000\000"
 3359      0000
ARM GAS  /tmp/ccfCRRJc.s 			page 114


 3360 01aa 0A151A00 		.ascii	"\012\025\032\000\000\000"
 3360      0000
 3361 01b0 7E100E00 		.ascii	"~\020\016\000\000\000"
 3361      0000
 3362 01b6 5E000000 		.ascii	"^\000\000\000\000\000"
 3362      0000
 3363 01bc 015E0000 		.ascii	"\001^\000\000\000\000"
 3363      0000
 3364 01c2 7E081600 		.ascii	"~\010\026\000\000\000"
 3364      0000
 3365 01c8 7E000000 		.ascii	"~\000\000\000\000\000"
 3365      0000
 3366 01ce 1E100E10 		.ascii	"\036\020\016\020\016\000"
 3366      0E00
 3367 01d4 1E100E00 		.ascii	"\036\020\016\000\000\000"
 3367      0000
 3368 01da 0C120C00 		.ascii	"\014\022\014\000\000\000"
 3368      0000
 3369 01e0 1F120C00 		.ascii	"\037\022\014\000\000\000"
 3369      0000
 3370 01e6 0C121F00 		.ascii	"\014\022\037\000\000\000"
 3370      0000
 3371 01ec 1E100000 		.ascii	"\036\020\000\000\000\000"
 3371      0000
 3372 01f2 0A1A1400 		.ascii	"\012\032\024\000\000\000"
 3372      0000
 3373 01f8 3C120000 		.ascii	"<\022\000\000\000\000"
 3373      0000
 3374 01fe 1C021E00 		.ascii	"\034\002\036\000\000\000"
 3374      0000
 3375 0204 18061C00 		.ascii	"\030\006\034\000\000\000"
 3375      0000
 3376 020a 18061C06 		.ascii	"\030\006\034\006\030\000"
 3376      1800
 3377 0210 1E081600 		.ascii	"\036\010\026\000\000\000"
 3377      0000
 3378 0216 19061800 		.ascii	"\031\006\030\000\000\000"
 3378      0000
 3379 021c 0A1E1400 		.ascii	"\012\036\024\000\000\000"
 3379      0000
 3380 0222 00087780 		.ascii	"\000\010w\200\000\000"
 3380      0000
 3381 0228 007F0000 		.ascii	"\000\177\000\000\000\000"
 3381      0000
 3382 022e 80770800 		.ascii	"\200w\010\000\000\000"
 3382      0000
 3383 0234 08100810 		.ascii	"\010\020\010\020\000\000"
 3383      0000
 3384              		.section	.rodata.asc2_1206,"a"
 3385              		.align	2
 3386              		.set	.LANCHOR4,. + 0
 3389              	asc2_1206:
 3390 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000"
 3390      00000000 
 3390      00000000 
 3391 000c 00000000 		.ascii	"\000\000\000\000?@\000\000\000\000\000\000"
 3391      3F400000 
ARM GAS  /tmp/ccfCRRJc.s 			page 115


 3391      00000000 
 3392 0018 00003000 		.ascii	"\000\0000\000@\0000\000@\000\000\000"
 3392      40003000 
 3392      40000000 
 3393 0024 09000BC0 		.ascii	"\011\000\013\300=\000\013\300=\000\011\000"
 3393      3D000BC0 
 3393      3D000900 
 3394 0030 18C02440 		.ascii	"\030\300$@\177\340\"@1\200\000\000"
 3394      7FE02240 
 3394      31800000 
 3395 003c 180024C0 		.ascii	"\030\000$\300\033\000\015\2002@\001\200"
 3395      1B000D80 
 3395      32400180 
 3396 0048 03801C40 		.ascii	"\003\200\034@'@\034\200\007@\000@"
 3396      27401C80 
 3396      07400040 
 3397 0054 10006000 		.ascii	"\020\000`\000\000\000\000\000\000\000\000\000"
 3397      00000000 
 3397      00000000 
 3398 0060 00000000 		.ascii	"\000\000\000\000\000\000\037\200 @@ "
 3398      00001F80 
 3398      20404020 
 3399 006c 00004020 		.ascii	"\000\000@  @\037\200\000\000\000\000"
 3399      20401F80 
 3399      00000000 
 3400 0078 09000600 		.ascii	"\011\000\006\000\037\200\006\000\011\000\000\000"
 3400      1F800600 
 3400      09000000 
 3401 0084 04000400 		.ascii	"\004\000\004\000?\200\004\000\004\000\000\000"
 3401      3F800400 
 3401      04000000 
 3402 0090 00100060 		.ascii	"\000\020\000`\000\000\000\000\000\000\000\000"
 3402      00000000 
 3402      00000000 
 3403 009c 04000400 		.ascii	"\004\000\004\000\004\000\004\000\004\000\000\000"
 3403      04000400 
 3403      04000000 
 3404 00a8 00000040 		.ascii	"\000\000\000@\000\000\000\000\000\000\000\000"
 3404      00000000 
 3404      00000000 
 3405 00b4 002001C0 		.ascii	"\000 \001\300\006\0008\000@\000\000\000"
 3405      06003800 
 3405      40000000 
 3406 00c0 1F802040 		.ascii	"\037\200 @ @ @\037\200\000\000"
 3406      20402040 
 3406      1F800000 
 3407 00cc 00001040 		.ascii	"\000\000\020@?\300\000@\000\000\000\000"
 3407      3FC00040 
 3407      00000000 
 3408 00d8 18C02140 		.ascii	"\030\300!@\"@$@\030@\000\000"
 3408      22402440 
 3408      18400000 
 3409 00e4 10802040 		.ascii	"\020\200 @$@$@\033\200\000\000"
 3409      24402440 
 3409      1B800000 
 3410 00f0 02000D00 		.ascii	"\002\000\015\000\021\000?\300\001@\000\000"
 3410      11003FC0 
ARM GAS  /tmp/ccfCRRJc.s 			page 116


 3410      01400000 
 3411 00fc 3C802440 		.ascii	"<\200$@$@$@#\200\000\000"
 3411      24402440 
 3411      23800000 
 3412 0108 1F802440 		.ascii	"\037\200$@$@4@\003\200\000\000"
 3412      24403440 
 3412      03800000 
 3413 0114 30002000 		.ascii	"0\000 \000'\3008\000 \000\000\000"
 3413      27C03800 
 3413      20000000 
 3414 0120 1B802440 		.ascii	"\033\200$@$@$@\033\200\000\000"
 3414      24402440 
 3414      1B800000 
 3415 012c 1C0022C0 		.ascii	"\034\000\"\300\"@\"@\037\200\000\000"
 3415      22402240 
 3415      1F800000 
 3416 0138 00000000 		.ascii	"\000\000\000\000\010@\000\000\000\000\000\000"
 3416      08400000 
 3416      00000000 
 3417 0144 00000000 		.ascii	"\000\000\000\000\004`\000\000\000\000\000\000"
 3417      04600000 
 3417      00000000 
 3418 0150 00000400 		.ascii	"\000\000\004\000\012\000\021\000 \200@@"
 3418      0A001100 
 3418      20804040 
 3419 015c 09000900 		.ascii	"\011\000\011\000\011\000\011\000\011\000\000\000"
 3419      09000900 
 3419      09000000 
 3420 0168 00004040 		.ascii	"\000\000@@ \200\021\000\012\000\004\000"
 3420      20801100 
 3420      0A000400 
 3421 0174 18002000 		.ascii	"\030\000 \000#@$\000\030\000\000\000"
 3421      23402400 
 3421      18000000 
 3422 0180 1F802040 		.ascii	"\037\200 @'@)@\037@\000\000"
 3422      27402940 
 3422      1F400000 
 3423 018c 004007C0 		.ascii	"\000@\007\3009\000\017\000\001\300\000@"
 3423      39000F00 
 3423      01C00040 
 3424 0198 20403FC0 		.ascii	" @?\300$@$@\033\200\000\000"
 3424      24402440 
 3424      1B800000 
 3425 01a4 1F802040 		.ascii	"\037\200 @ @ @0\200\000\000"
 3425      20402040 
 3425      30800000 
 3426 01b0 20403FC0 		.ascii	" @?\300 @ @\037\200\000\000"
 3426      20402040 
 3426      1F800000 
 3427 01bc 20403FC0 		.ascii	" @?\300$@.@0\300\000\000"
 3427      24402E40 
 3427      30C00000 
 3428 01c8 20403FC0 		.ascii	" @?\300$@.\0000\000\000\000"
 3428      24402E00 
 3428      30000000 
 3429 01d4 0F001080 		.ascii	"\017\000\020\200 @\"@3\200\002\000"
 3429      20402240 
ARM GAS  /tmp/ccfCRRJc.s 			page 117


 3429      33800200 
 3430 01e0 20403FC0 		.ascii	" @?\300\004\000\004\000?\300 @"
 3430      04000400 
 3430      3FC02040 
 3431 01ec 20402040 		.ascii	" @ @?\300 @ @\000\000"
 3431      3FC02040 
 3431      20400000 
 3432 01f8 00602020 		.ascii	"\000`    ?\300 \000 \000"
 3432      20203FC0 
 3432      20002000 
 3433 0204 20403FC0 		.ascii	" @?\300$@\013\0000\300 @"
 3433      24400B00 
 3433      30C02040 
 3434 0210 20403FC0 		.ascii	" @?\300 @\000@\000@\000\300"
 3434      20400040 
 3434      004000C0 
 3435 021c 3FC03C00 		.ascii	"?\300<\000\003\300<\000?\300\000\000"
 3435      03C03C00 
 3435      3FC00000 
 3436 0228 20403FC0 		.ascii	" @?\300\014@#\000?\300 \000"
 3436      0C402300 
 3436      3FC02000 
 3437 0234 1F802040 		.ascii	"\037\200 @ @ @\037\200\000\000"
 3437      20402040 
 3437      1F800000 
 3438 0240 20403FC0 		.ascii	" @?\300$@$\000\030\000\000\000"
 3438      24402400 
 3438      18000000 
 3439 024c 1F802140 		.ascii	"\037\200!@!@ \340\037\240\000\000"
 3439      214020E0 
 3439      1FA00000 
 3440 0258 20403FC0 		.ascii	" @?\300$@&\000\031\300\000@"
 3440      24402600 
 3440      19C00040 
 3441 0264 18C02440 		.ascii	"\030\300$@$@\"@1\200\000\000"
 3441      24402240 
 3441      31800000 
 3442 0270 30002040 		.ascii	"0\000 @?\300 @0\000\000\000"
 3442      3FC02040 
 3442      30000000 
 3443 027c 20003F80 		.ascii	" \000?\200\000@\000@?\200 \000"
 3443      00400040 
 3443      3F802000 
 3444 0288 20003E00 		.ascii	" \000>\000\001\300\007\0008\000 \000"
 3444      01C00700 
 3444      38002000 
 3445 0294 380007C0 		.ascii	"8\000\007\300<\000\007\3008\000\000\000"
 3445      3C0007C0 
 3445      38000000 
 3446 02a0 204039C0 		.ascii	" @9\300\006\0009\300 @\000\000"
 3446      060039C0 
 3446      20400000 
 3447 02ac 20003840 		.ascii	" \0008@\007\3008@ \000\000\000"
 3447      07C03840 
 3447      20000000 
 3448 02b8 304021C0 		.ascii	"0@!\300&@8@ \300\000\000"
 3448      26403840 
ARM GAS  /tmp/ccfCRRJc.s 			page 118


 3448      20C00000 
 3449 02c4 00000000 		.ascii	"\000\000\000\000\177\340@ @ \000\000"
 3449      7FE04020 
 3449      40200000 
 3450 02d0 00007000 		.ascii	"\000\000p\000\014\000\003\200\000@\000\000"
 3450      0C000380 
 3450      00400000 
 3451 02dc 00004020 		.ascii	"\000\000@ @ \177\340\000\000\000\000"
 3451      40207FE0 
 3451      00000000 
 3452 02e8 00002000 		.ascii	"\000\000 \000@\000 \000\000\000\000\000"
 3452      40002000 
 3452      00000000 
 3453 02f4 00100010 		.ascii	"\000\020\000\020\000\020\000\020\000\020\000\020"
 3453      00100010 
 3453      00100010 
 3454 0300 00000000 		.ascii	"\000\000\000\000@\000\000\000\000\000\000\000"
 3454      40000000 
 3454      00000000 
 3455 030c 00000280 		.ascii	"\000\000\002\200\005@\005@\003\300\000@"
 3455      05400540 
 3455      03C00040 
 3456 0318 20003FC0 		.ascii	" \000?\300\004@\004@\003\200\000\000"
 3456      04400440 
 3456      03800000 
 3457 0324 00000380 		.ascii	"\000\000\003\200\004@\004@\006@\000\000"
 3457      04400440 
 3457      06400000 
 3458 0330 00000380 		.ascii	"\000\000\003\200\004@$@?\300\000@"
 3458      04402440 
 3458      3FC00040 
 3459 033c 00000380 		.ascii	"\000\000\003\200\005@\005@\003@\000\000"
 3459      05400540 
 3459      03400000 
 3460 0348 00000440 		.ascii	"\000\000\004@\037\300$@$@ \000"
 3460      1FC02440 
 3460      24402000 
 3461 0354 000002E0 		.ascii	"\000\000\002\340\005P\005P\006P\004 "
 3461      05500550 
 3461      06500420 
 3462 0360 20403FC0 		.ascii	" @?\300\004@\004\000\003\300\000@"
 3462      04400400 
 3462      03C00040 
 3463 036c 00000440 		.ascii	"\000\000\004@'\300\000@\000\000\000\000"
 3463      27C00040 
 3463      00000000 
 3464 0378 00100010 		.ascii	"\000\020\000\020\004\020'\340\000\000\000\000"
 3464      041027E0 
 3464      00000000 
 3465 0384 20403FC0 		.ascii	" @?\300\001@\007\000\004\300\004@"
 3465      01400700 
 3465      04C00440 
 3466 0390 20402040 		.ascii	" @ @?\300\000@\000@\000\000"
 3466      3FC00040 
 3466      00400000 
 3467 039c 07C00400 		.ascii	"\007\300\004\000\007\300\004\000\003\300\000\000"
 3467      07C00400 
ARM GAS  /tmp/ccfCRRJc.s 			page 119


 3467      03C00000 
 3468 03a8 044007C0 		.ascii	"\004@\007\300\004@\004\000\003\300\000@"
 3468      04400400 
 3468      03C00040 
 3469 03b4 00000380 		.ascii	"\000\000\003\200\004@\004@\003\200\000\000"
 3469      04400440 
 3469      03800000 
 3470 03c0 041007F0 		.ascii	"\004\020\007\360\004P\004@\003\200\000\000"
 3470      04500440 
 3470      03800000 
 3471 03cc 00000380 		.ascii	"\000\000\003\200\004@\004P\007\360\000\020"
 3471      04400450 
 3471      07F00010 
 3472 03d8 044007C0 		.ascii	"\004@\007\300\002@\004\000\004\000\000\000"
 3472      02400400 
 3472      04000000 
 3473 03e4 00000640 		.ascii	"\000\000\006@\005@\005@\004\300\000\000"
 3473      05400540 
 3473      04C00000 
 3474 03f0 00000400 		.ascii	"\000\000\004\000\037\200\004@\000@\000\000"
 3474      1F800440 
 3474      00400000 
 3475 03fc 04000780 		.ascii	"\004\000\007\200\000@\004@\007\300\000@"
 3475      00400440 
 3475      07C00040 
 3476 0408 04000700 		.ascii	"\004\000\007\000\004\300\001\200\006\000\004\000"
 3476      04C00180 
 3476      06000400 
 3477 0414 060001C0 		.ascii	"\006\000\001\300\007\000\001\300\006\000\000\000"
 3477      070001C0 
 3477      06000000 
 3478 0420 044006C0 		.ascii	"\004@\006\300\001\000\006\300\004@\000\000"
 3478      010006C0 
 3478      04400000 
 3479 042c 04100710 		.ascii	"\004\020\007\020\004\340\001\200\006\000\004\000"
 3479      04E00180 
 3479      06000400 
 3480 0438 00000440 		.ascii	"\000\000\004@\005\300\006@\004@\000\000"
 3480      05C00640 
 3480      04400000 
 3481 0444 00000000 		.ascii	"\000\000\000\000\004\000{\340@ \000\000"
 3481      04007BE0 
 3481      40200000 
 3482 0450 00000000 		.ascii	"\000\000\000\000\000\000\377\360\000\000\000\000"
 3482      0000FFF0 
 3482      00000000 
 3483 045c 00004020 		.ascii	"\000\000@ {\340\004\000\000\000\000\000"
 3483      7BE00400 
 3483      00000000 
 3484 0468 40008000 		.ascii	"@\000\200\000@\000 \000 \000@\000"
 3484      40002000 
 3484      20004000 
 3485              		.section	.rodata.asc2_1608,"a"
 3486              		.align	2
 3487              		.set	.LANCHOR5,. + 0
 3490              	asc2_1608:
 3491 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
ARM GAS  /tmp/ccfCRRJc.s 			page 120


 3491      00000000 
 3491      00000000 
 3491      00
 3492 000d 000000   		.ascii	"\000\000\000"
 3493 0010 00000000 		.ascii	"\000\000\000\000\000\000\037\314\000\014\000\000\000"
 3493      00001FCC 
 3493      000C0000 
 3493      00
 3494 001d 000000   		.ascii	"\000\000\000"
 3495 0020 00000800 		.ascii	"\000\000\010\0000\000`\000\010\0000\000`\000\000\000"
 3495      30006000 
 3495      08003000 
 3495      60000000 
 3496 0030 022003FC 		.ascii	"\002 \003\374\036 \002 \003\374\036 \002 \000\000"
 3496      1E200220 
 3496      03FC1E20 
 3496      02200000 
 3497 0040 00000E18 		.ascii	"\000\000\016\030\021\004?\377\020\204\014x\000\000\000"
 3497      11043FFF 
 3497      10840C78 
 3497      000000
 3498 004f 00       		.ascii	"\000"
 3499 0050 0F001084 		.ascii	"\017\000\020\204\0178\000\300\007x\030\204\000x\000"
 3499      0F3800C0 
 3499      07781884 
 3499      007800
 3500 005f 00       		.ascii	"\000"
 3501 0060 00780F84 		.ascii	"\000x\017\204\020\304\021$\016\230\000\344\000\204\000"
 3501      10C41124 
 3501      0E9800E4 
 3501      008400
 3502 006f 08       		.ascii	"\010"
 3503 0070 08006800 		.ascii	"\010\000h\000p\000\000\000\000\000\000\000\000\000\000"
 3503      70000000 
 3503      00000000 
 3503      000000
 3504 007f 00       		.ascii	"\000"
 3505 0080 00000000 		.ascii	"\000\000\000\000\000\000\007\340\030\030 \004@\002\000"
 3505      000007E0 
 3505      18182004 
 3505      400200
 3506 008f 00       		.ascii	"\000"
 3507 0090 00004002 		.ascii	"\000\000@\002 \004\030\030\007\340\000\000\000\000\000"
 3507      20041818 
 3507      07E00000 
 3507      000000
 3508 009f 00       		.ascii	"\000"
 3509 00a0 02400240 		.ascii	"\002@\002@\001\200\017\360\001\200\002@\002@\000\000"
 3509      01800FF0 
 3509      01800240 
 3509      02400000 
 3510 00b0 00800080 		.ascii	"\000\200\000\200\000\200\017\370\000\200\000\200\000"
 3510      00800FF8 
 3510      00800080 
 3510      00
 3511 00bd 800000   		.ascii	"\200\000\000"
 3512 00c0 0001000D 		.ascii	"\000\001\000\015\000\016\000\000\000\000\000\000\000"
ARM GAS  /tmp/ccfCRRJc.s 			page 121


 3512      000E0000 
 3512      00000000 
 3512      00
 3513 00cd 000000   		.ascii	"\000\000\000"
 3514 00d0 00000080 		.ascii	"\000\000\000\200\000\200\000\200\000\200\000\200\000"
 3514      00800080 
 3514      00800080 
 3514      00
 3515 00dd 800080   		.ascii	"\200\000\200"
 3516 00e0 0000000C 		.ascii	"\000\000\000\014\000\014\000\000\000\000\000\000\000"
 3516      000C0000 
 3516      00000000 
 3516      00
 3517 00ed 000000   		.ascii	"\000\000\000"
 3518 00f0 00000006 		.ascii	"\000\000\000\006\000\030\000`\001\200\006\000\030\000"
 3518      00180060 
 3518      01800600 
 3518      1800
 3519 00fe 2000     		.ascii	" \000"
 3520 0100 000007F0 		.ascii	"\000\000\007\360\010\010\020\004\020\004\010\010\007"
 3520      08081004 
 3520      10040808 
 3520      07
 3521 010d F00000   		.ascii	"\360\000\000"
 3522 0110 00000804 		.ascii	"\000\000\010\004\010\004\037\374\000\004\000\004\000"
 3522      08041FFC 
 3522      00040004 
 3522      00
 3523 011d 000000   		.ascii	"\000\000\000"
 3524 0120 00000E0C 		.ascii	"\000\000\016\014\020\024\020$\020D\021\204\016\014\000"
 3524      10141024 
 3524      10441184 
 3524      0E0C00
 3525 012f 00       		.ascii	"\000"
 3526 0130 00000C18 		.ascii	"\000\000\014\030\020\004\021\004\021\004\022\210\014"
 3526      10041104 
 3526      11041288 
 3526      0C
 3527 013d 700000   		.ascii	"p\000\000"
 3528 0140 000000E0 		.ascii	"\000\000\000\340\003 \004$\010$\037\374\000$\000\000"
 3528      03200424 
 3528      08241FFC 
 3528      00240000 
 3529 0150 00001F98 		.ascii	"\000\000\037\230\020\204\021\004\021\004\020\210\020"
 3529      10841104 
 3529      11041088 
 3529      10
 3530 015d 700000   		.ascii	"p\000\000"
 3531 0160 000007F0 		.ascii	"\000\000\007\360\010\210\021\004\021\004\030\210\000"
 3531      08881104 
 3531      11041888 
 3531      00
 3532 016d 700000   		.ascii	"p\000\000"
 3533 0170 00001C00 		.ascii	"\000\000\034\000\020\000\020\374\023\000\034\000\020"
 3533      100010FC 
 3533      13001C00 
 3533      10
ARM GAS  /tmp/ccfCRRJc.s 			page 122


 3534 017d 000000   		.ascii	"\000\000\000"
 3535 0180 00000E38 		.ascii	"\000\000\0168\021D\020\204\020\204\021D\0168\000\000"
 3535      11441084 
 3535      10841144 
 3535      0E380000 
 3536 0190 00000700 		.ascii	"\000\000\007\000\010\214\020D\020D\010\210\007\360\000"
 3536      088C1044 
 3536      10440888 
 3536      07F000
 3537 019f 00       		.ascii	"\000"
 3538 01a0 00000000 		.ascii	"\000\000\000\000\000\000\003\014\003\014\000\000\000"
 3538      0000030C 
 3538      030C0000 
 3538      00
 3539 01ad 000000   		.ascii	"\000\000\000"
 3540 01b0 00000000 		.ascii	"\000\000\000\000\000\001\001\006\000\000\000\000\000"
 3540      00010106 
 3540      00000000 
 3540      00
 3541 01bd 000000   		.ascii	"\000\000\000"
 3542 01c0 00000080 		.ascii	"\000\000\000\200\001@\002 \004\020\010\010\020\004\000"
 3542      01400220 
 3542      04100808 
 3542      100400
 3543 01cf 00       		.ascii	"\000"
 3544 01d0 02200220 		.ascii	"\002 \002 \002 \002 \002 \002 \002 \000\000"
 3544      02200220 
 3544      02200220 
 3544      02200000 
 3545 01e0 00001004 		.ascii	"\000\000\020\004\010\010\004\020\002 \001@\000\200\000"
 3545      08080410 
 3545      02200140 
 3545      008000
 3546 01ef 00       		.ascii	"\000"
 3547 01f0 00000E00 		.ascii	"\000\000\016\000\022\000\020\014\020l\020\200\017\000"
 3547      1200100C 
 3547      106C1080 
 3547      0F00
 3548 01fe 0000     		.ascii	"\000\000"
 3549 0200 03E00C18 		.ascii	"\003\340\014\030\023\344\024$\027\304\010(\007\320\000"
 3549      13E41424 
 3549      17C40828 
 3549      07D000
 3550 020f 00       		.ascii	"\000"
 3551 0210 0004003C 		.ascii	"\000\004\000<\003\304\034@\007@\000\344\000\034\000"
 3551      03C41C40 
 3551      074000E4 
 3551      001C00
 3552 021f 04       		.ascii	"\004"
 3553 0220 10041FFC 		.ascii	"\020\004\037\374\021\004\021\004\021\004\016\210\000"
 3553      11041104 
 3553      11040E88 
 3553      00
 3554 022d 700000   		.ascii	"p\000\000"
 3555 0230 03E00C18 		.ascii	"\003\340\014\030\020\004\020\004\020\004\020\010\034"
 3555      10041004 
 3555      10041008 
ARM GAS  /tmp/ccfCRRJc.s 			page 123


 3555      1C
 3556 023d 100000   		.ascii	"\020\000\000"
 3557 0240 10041FFC 		.ascii	"\020\004\037\374\020\004\020\004\020\004\010\010\007"
 3557      10041004 
 3557      10040808 
 3557      07
 3558 024d F00000   		.ascii	"\360\000\000"
 3559 0250 10041FFC 		.ascii	"\020\004\037\374\021\004\021\004\027\304\020\004\010"
 3559      11041104 
 3559      17C41004 
 3559      08
 3560 025d 180000   		.ascii	"\030\000\000"
 3561 0260 10041FFC 		.ascii	"\020\004\037\374\021\004\021\000\027\300\020\000\010"
 3561      11041100 
 3561      17C01000 
 3561      08
 3562 026d 000000   		.ascii	"\000\000\000"
 3563 0270 03E00C18 		.ascii	"\003\340\014\030\020\004\020\004\020D\034x\000@\000"
 3563      10041004 
 3563      10441C78 
 3563      004000
 3564 027f 00       		.ascii	"\000"
 3565 0280 10041FFC 		.ascii	"\020\004\037\374\020\204\000\200\000\200\020\204\037"
 3565      10840080 
 3565      00801084 
 3565      1F
 3566 028d FC1004   		.ascii	"\374\020\004"
 3567 0290 00001004 		.ascii	"\000\000\020\004\020\004\037\374\020\004\020\004\000"
 3567      10041FFC 
 3567      10041004 
 3567      00
 3568 029d 000000   		.ascii	"\000\000\000"
 3569 02a0 00030001 		.ascii	"\000\003\000\001\020\001\020\001\037\376\020\000\020"
 3569      10011001 
 3569      1FFE1000 
 3569      10
 3570 02ad 000000   		.ascii	"\000\000\000"
 3571 02b0 10041FFC 		.ascii	"\020\004\037\374\021\004\003\200\024d\030\034\020\004"
 3571      11040380 
 3571      1464181C 
 3571      1004
 3572 02be 0000     		.ascii	"\000\000"
 3573 02c0 10041FFC 		.ascii	"\020\004\037\374\020\004\000\004\000\004\000\004\000"
 3573      10040004 
 3573      00040004 
 3573      00
 3574 02cd 0C0000   		.ascii	"\014\000\000"
 3575 02d0 10041FFC 		.ascii	"\020\004\037\374\037\000\000\374\037\000\037\374\020"
 3575      1F0000FC 
 3575      1F001FFC 
 3575      10
 3576 02dd 040000   		.ascii	"\004\000\000"
 3577 02e0 10041FFC 		.ascii	"\020\004\037\374\014\004\003\000\000\340\020\030\037"
 3577      0C040300 
 3577      00E01018 
 3577      1F
 3578 02ed FC1000   		.ascii	"\374\020\000"
ARM GAS  /tmp/ccfCRRJc.s 			page 124


 3579 02f0 07F00808 		.ascii	"\007\360\010\010\020\004\020\004\020\004\010\010\007"
 3579      10041004 
 3579      10040808 
 3579      07
 3580 02fd F00000   		.ascii	"\360\000\000"
 3581 0300 10041FFC 		.ascii	"\020\004\037\374\020\204\020\200\020\200\020\200\017"
 3581      10841080 
 3581      10801080 
 3581      0F
 3582 030d 000000   		.ascii	"\000\000\000"
 3583 0310 07F00818 		.ascii	"\007\360\010\030\020$\020$\020\034\010\012\007\362\000"
 3583      10241024 
 3583      101C080A 
 3583      07F200
 3584 031f 00       		.ascii	"\000"
 3585 0320 10041FFC 		.ascii	"\020\004\037\374\021\004\021\000\021\300\0210\016\014"
 3585      11041100 
 3585      11C01130 
 3585      0E0C
 3586 032e 0004     		.ascii	"\000\004"
 3587 0330 00000E1C 		.ascii	"\000\000\016\034\021\004\020\204\020\204\020D\0348\000"
 3587      11041084 
 3587      10841044 
 3587      1C3800
 3588 033f 00       		.ascii	"\000"
 3589 0340 18001000 		.ascii	"\030\000\020\000\020\004\037\374\020\004\020\000\030"
 3589      10041FFC 
 3589      10041000 
 3589      18
 3590 034d 000000   		.ascii	"\000\000\000"
 3591 0350 10001FF8 		.ascii	"\020\000\037\370\020\004\000\004\000\004\020\004\037"
 3591      10040004 
 3591      00041004 
 3591      1F
 3592 035d F81000   		.ascii	"\370\020\000"
 3593 0360 10001E00 		.ascii	"\020\000\036\000\021\340\000\034\000p\023\200\034\000"
 3593      11E0001C 
 3593      00701380 
 3593      1C00
 3594 036e 1000     		.ascii	"\020\000"
 3595 0370 1FC0103C 		.ascii	"\037\300\020<\000\340\037\000\000\340\020<\037\300\000"
 3595      00E01F00 
 3595      00E0103C 
 3595      1FC000
 3596 037f 00       		.ascii	"\000"
 3597 0380 1004180C 		.ascii	"\020\004\030\014\0264\001\300\001\300\0264\030\014\020"
 3597      163401C0 
 3597      01C01634 
 3597      180C10
 3598 038f 04       		.ascii	"\004"
 3599 0390 10001C00 		.ascii	"\020\000\034\000\023\004\000\374\023\004\034\000\020"
 3599      130400FC 
 3599      13041C00 
 3599      10
 3600 039d 000000   		.ascii	"\000\000\000"
 3601 03a0 0804101C 		.ascii	"\010\004\020\034\020d\020\204\023\004\034\004\020\030"
 3601      10641084 
ARM GAS  /tmp/ccfCRRJc.s 			page 125


 3601      13041C04 
 3601      1018
 3602 03ae 0000     		.ascii	"\000\000"
 3603 03b0 00000000 		.ascii	"\000\000\000\000\000\000\177\376@\002@\002@\002\000"
 3603      00007FFE 
 3603      40024002 
 3603      400200
 3604 03bf 00       		.ascii	"\000"
 3605 03c0 00003000 		.ascii	"\000\0000\000\014\000\003\200\000`\000\034\000\003\000"
 3605      0C000380 
 3605      0060001C 
 3605      000300
 3606 03cf 00       		.ascii	"\000"
 3607 03d0 00004002 		.ascii	"\000\000@\002@\002@\002\177\376\000\000\000\000\000"
 3607      40024002 
 3607      7FFE0000 
 3607      000000
 3608 03df 00       		.ascii	"\000"
 3609 03e0 00000000 		.ascii	"\000\000\000\000 \000@\000@\000@\000 \000\000\000"
 3609      20004000 
 3609      40004000 
 3609      20000000 
 3610 03f0 00010001 		.ascii	"\000\001\000\001\000\001\000\001\000\001\000\001\000"
 3610      00010001 
 3610      00010001 
 3610      00
 3611 03fd 010001   		.ascii	"\001\000\001"
 3612 0400 00004000 		.ascii	"\000\000@\000@\000 \000\000\000\000\000\000\000\000"
 3612      40002000 
 3612      00000000 
 3612      000000
 3613 040f 00       		.ascii	"\000"
 3614 0410 00000098 		.ascii	"\000\000\000\230\001$\001D\001D\001D\000\374\000\004"
 3614      01240144 
 3614      01440144 
 3614      00FC0004 
 3615 0420 10001FFC 		.ascii	"\020\000\037\374\000\210\001\004\001\004\000\210\000"
 3615      00880104 
 3615      01040088 
 3615      00
 3616 042d 700000   		.ascii	"p\000\000"
 3617 0430 00000070 		.ascii	"\000\000\000p\000\210\001\004\001\004\001\004\000\210"
 3617      00880104 
 3617      01040104 
 3617      0088
 3618 043e 0000     		.ascii	"\000\000"
 3619 0440 00000070 		.ascii	"\000\000\000p\000\210\001\004\001\004\021\010\037\374"
 3619      00880104 
 3619      01041108 
 3619      1FFC
 3620 044e 0004     		.ascii	"\000\004"
 3621 0450 000000F8 		.ascii	"\000\000\000\370\001D\001D\001D\001D\000\310\000\000"
 3621      01440144 
 3621      01440144 
 3621      00C80000 
 3622 0460 00000104 		.ascii	"\000\000\001\004\001\004\017\374\021\004\021\004\021"
 3622      01040FFC 
ARM GAS  /tmp/ccfCRRJc.s 			page 126


 3622      11041104 
 3622      11
 3623 046d 001800   		.ascii	"\000\030\000"
 3624 0470 000000D6 		.ascii	"\000\000\000\326\001)\001)\001)\001\311\001\006\000"
 3624      01290129 
 3624      012901C9 
 3624      010600
 3625 047f 00       		.ascii	"\000"
 3626 0480 10041FFC 		.ascii	"\020\004\037\374\000\204\001\000\001\000\001\004\000"
 3626      00840100 
 3626      01000104 
 3626      00
 3627 048d FC0004   		.ascii	"\374\000\004"
 3628 0490 00000104 		.ascii	"\000\000\001\004\031\004\031\374\000\004\000\004\000"
 3628      190419FC 
 3628      00040004 
 3628      00
 3629 049d 000000   		.ascii	"\000\000\000"
 3630 04a0 00000003 		.ascii	"\000\000\000\003\000\001\001\001\031\001\031\376\000"
 3630      00010101 
 3630      190119FE 
 3630      00
 3631 04ad 000000   		.ascii	"\000\000\000"
 3632 04b0 10041FFC 		.ascii	"\020\004\037\374\000$\000@\001\264\001\014\001\004\000"
 3632      00240040 
 3632      01B4010C 
 3632      010400
 3633 04bf 00       		.ascii	"\000"
 3634 04c0 00001004 		.ascii	"\000\000\020\004\020\004\037\374\000\004\000\004\000"
 3634      10041FFC 
 3634      00040004 
 3634      00
 3635 04cd 000000   		.ascii	"\000\000\000"
 3636 04d0 010401FC 		.ascii	"\001\004\001\374\001\004\001\000\001\374\001\004\001"
 3636      01040100 
 3636      01FC0104 
 3636      01
 3637 04dd 0000FC   		.ascii	"\000\000\374"
 3638 04e0 010401FC 		.ascii	"\001\004\001\374\000\204\001\000\001\000\001\004\000"
 3638      00840100 
 3638      01000104 
 3638      00
 3639 04ed FC0004   		.ascii	"\374\000\004"
 3640 04f0 000000F8 		.ascii	"\000\000\000\370\001\004\001\004\001\004\001\004\000"
 3640      01040104 
 3640      01040104 
 3640      00
 3641 04fd F80000   		.ascii	"\370\000\000"
 3642 0500 010101FF 		.ascii	"\001\001\001\377\000\205\001\004\001\004\000\210\000"
 3642      00850104 
 3642      01040088 
 3642      00
 3643 050d 700000   		.ascii	"p\000\000"
 3644 0510 00000070 		.ascii	"\000\000\000p\000\210\001\004\001\004\001\005\001\377"
 3644      00880104 
 3644      01040105 
 3644      01FF
ARM GAS  /tmp/ccfCRRJc.s 			page 127


 3645 051e 0001     		.ascii	"\000\001"
 3646 0520 01040104 		.ascii	"\001\004\001\004\001\374\000\204\001\004\001\000\001"
 3646      01FC0084 
 3646      01040100 
 3646      01
 3647 052d 800000   		.ascii	"\200\000\000"
 3648 0530 000000CC 		.ascii	"\000\000\000\314\001$\001$\001$\001$\001\230\000\000"
 3648      01240124 
 3648      01240124 
 3648      01980000 
 3649 0540 00000100 		.ascii	"\000\000\001\000\001\000\007\370\001\004\001\004\000"
 3649      010007F8 
 3649      01040104 
 3649      00
 3650 054d 000000   		.ascii	"\000\000\000"
 3651 0550 010001F8 		.ascii	"\001\000\001\370\000\004\000\004\000\004\001\010\001"
 3651      00040004 
 3651      00040108 
 3651      01
 3652 055d FC0004   		.ascii	"\374\000\004"
 3653 0560 01000180 		.ascii	"\001\000\001\200\001p\000\014\000\020\001`\001\200\001"
 3653      0170000C 
 3653      00100160 
 3653      018001
 3654 056f 00       		.ascii	"\000"
 3655 0570 01F0010C 		.ascii	"\001\360\001\014\0000\001\300\0000\001\014\001\360\001"
 3655      003001C0 
 3655      0030010C 
 3655      01F001
 3656 057f 00       		.ascii	"\000"
 3657 0580 00000104 		.ascii	"\000\000\001\004\001\214\000t\001p\001\214\001\004\000"
 3657      018C0074 
 3657      0170018C 
 3657      010400
 3658 058f 00       		.ascii	"\000"
 3659 0590 01010181 		.ascii	"\001\001\001\201\001q\000\016\000\030\001`\001\200\001"
 3659      0171000E 
 3659      00180160 
 3659      018001
 3660 059f 00       		.ascii	"\000"
 3661 05a0 00000184 		.ascii	"\000\000\001\204\001\014\0014\001D\001\204\001\014\000"
 3661      010C0134 
 3661      01440184 
 3661      010C00
 3662 05af 00       		.ascii	"\000"
 3663 05b0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\000>\374@\002@"
 3663      00000000 
 3663      01003EFC 
 3663      400240
 3664 05bf 02       		.ascii	"\002"
 3665 05c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\377\377\000\000\000"
 3665      00000000 
 3665      FFFF0000 
 3665      00
 3666 05cd 000000   		.ascii	"\000\000\000"
 3667 05d0 00004002 		.ascii	"\000\000@\002@\002>\374\001\000\000\000\000\000\000"
 3667      40023EFC 
ARM GAS  /tmp/ccfCRRJc.s 			page 128


 3667      01000000 
 3667      000000
 3668 05df 00       		.ascii	"\000"
 3669 05e0 00006000 		.ascii	"\000\000`\000\200\000\200\000@\000@\000 \000 \000"
 3669      80008000 
 3669      40004000 
 3669      20002000 
 3670              		.section	.rodata.asc_num_1608,"a"
 3671              		.align	2
 3674              	asc_num_1608:
 3675 0000 000007F0 		.ascii	"\000\000\007\360\017\370\030\014\020\004\030\014\017"
 3675      0FF8180C 
 3675      1004180C 
 3675      0F
 3676 000d F807F0   		.ascii	"\370\007\360"
 3677 0010 00000804 		.ascii	"\000\000\010\004\010\004\037\374\037\374\000\004\000"
 3677      08041FFC 
 3677      1FFC0004 
 3677      00
 3678 001d 040000   		.ascii	"\004\000\000"
 3679 0020 00000E0C 		.ascii	"\000\000\016\014\036\034\0204\020d\021\304\037\214\016"
 3679      1E1C1034 
 3679      106411C4 
 3679      1F8C0E
 3680 002f 0C       		.ascii	"\014"
 3681 0030 00000C18 		.ascii	"\000\000\014\030\034\034\021\004\021\004\023\214\036"
 3681      1C1C1104 
 3681      1104138C 
 3681      1E
 3682 003d F80C70   		.ascii	"\370\014p"
 3683 0040 000000E0 		.ascii	"\000\000\000\340\003\340\007$\014$\037\374\037\374\000"
 3683      03E00724 
 3683      0C241FFC 
 3683      1FFC00
 3684 004f 24       		.ascii	"$"
 3685 0050 00001F98 		.ascii	"\000\000\037\230\037\234\021\204\021\004\021\214\020"
 3685      1F9C1184 
 3685      1104118C 
 3685      10
 3686 005d F81070   		.ascii	"\370\020p"
 3687 0060 000007F0 		.ascii	"\000\000\007\360\017\370\031\214\021\004\031\214\030"
 3687      0FF8198C 
 3687      1104198C 
 3687      18
 3688 006d F80070   		.ascii	"\370\000p"
 3689 0070 00001C00 		.ascii	"\000\000\034\000\034\000\020\374\023\374\037\000\034"
 3689      1C0010FC 
 3689      13FC1F00 
 3689      1C
 3690 007d 001000   		.ascii	"\000\020\000"
 3691 0080 00000E38 		.ascii	"\000\000\0168\037|\021\304\020\204\021\304\037|\016"
 3691      1F7C11C4 
 3691      108411C4 
 3691      1F7C0E
 3692 008f 38       		.ascii	"8"
 3693 0090 00000700 		.ascii	"\000\000\007\000\017\214\030\314\020D\030\314\017\370"
 3693      0F8C18CC 
ARM GAS  /tmp/ccfCRRJc.s 			page 129


 3693      104418CC 
 3693      0FF8
 3694 009e 07F0     		.ascii	"\007\360"
 3695              		.section	.rodata.font2size,"a"
 3696              		.align	2
 3697              		.set	.LANCHOR2,. + 0
 3700              	font2size:
 3701 0000 0806     		.ascii	"\010\006"
 3702 0002 0C06     		.ascii	"\014\006"
 3703 0004 1008     		.ascii	"\020\010"
 3704 0006 1008     		.ascii	"\020\010"
 3705 0008 0C0C     		.ascii	"\014\014"
 3706 000a 1010     		.ascii	"\020\020"
 3707              		.section	.rodata.sw,"a"
 3708              		.align	2
 3711              	sw:
 3712 0000 0000     		.short	0
 3713 0002 0100     		.short	1
 3714 0004 0200     		.short	2
 3715 0006 0300     		.short	3
 3716 0008 0400     		.short	4
 3717 000a 0500     		.short	5
 3718 000c 0600     		.short	6
 3719 000e 0700     		.short	7
 3720 0010 0800     		.short	8
 3721 0012 0900     		.short	9
 3722 0014 0A00     		.short	10
 3723 0016 0B00     		.short	11
 3724 0018 0C00     		.short	12
 3725 001a 0D00     		.short	13
 3726 001c 0E00     		.short	14
 3727 001e 0F00     		.short	15
 3728              		.text
 3729              	.Letext0:
 3730              		.file 3 "/home/yhf/toolchains/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_de
 3731              		.file 4 "/home/yhf/toolchains/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint
 3732              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 3733              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 3734              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 3735              		.file 8 "/home/yhf/toolchains/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/inclu
 3736              		.file 9 "/home/yhf/toolchains/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_types.
 3737              		.file 10 "/home/yhf/toolchains/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/reent.
 3738              		.file 11 "/home/yhf/toolchains/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/lock.h
 3739              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3740              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 3741              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 3742              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 3743              		.file 16 "component/lcd/lcd.h"
 3744              		.file 17 "component/lcd/lcdfont.h"
 3745              		.file 18 "component/timer/tim.h"
 3746              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h"
ARM GAS  /tmp/ccfCRRJc.s 			page 130


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lcd.c
     /tmp/ccfCRRJc.s:16     .text.LedMatrixInit:0000000000000000 $t
     /tmp/ccfCRRJc.s:24     .text.LedMatrixInit:0000000000000000 LedMatrixInit
     /tmp/ccfCRRJc.s:62     .text.LedMatrixInit:0000000000000014 $d
     /tmp/ccfCRRJc.s:69     .text.LedMatrix_Clear:0000000000000000 $t
     /tmp/ccfCRRJc.s:76     .text.LedMatrix_Clear:0000000000000000 LedMatrix_Clear
     /tmp/ccfCRRJc.s:174    .text.LedMatrix_Clear:0000000000000040 $d
                            *COM*:0000000000000201 lcdbuf
     /tmp/ccfCRRJc.s:179    .text.LedMatrix_DrawPoint:0000000000000000 $t
     /tmp/ccfCRRJc.s:186    .text.LedMatrix_DrawPoint:0000000000000000 LedMatrix_DrawPoint
     /tmp/ccfCRRJc.s:354    .text.LedMatrix_DrawPoint:00000000000000bc $d
     /tmp/ccfCRRJc.s:359    .text.scanf_line:0000000000000000 $t
     /tmp/ccfCRRJc.s:366    .text.scanf_line:0000000000000000 scanf_line
     /tmp/ccfCRRJc.s:518    .text.scanf_line:0000000000000054 $d
     /tmp/ccfCRRJc.s:524    .text.LedMatrix_Fill:0000000000000000 $t
     /tmp/ccfCRRJc.s:531    .text.LedMatrix_Fill:0000000000000000 LedMatrix_Fill
     /tmp/ccfCRRJc.s:603    .text.LedMatrix_ShowChar:0000000000000000 $t
     /tmp/ccfCRRJc.s:610    .text.LedMatrix_ShowChar:0000000000000000 LedMatrix_ShowChar
     /tmp/ccfCRRJc.s:821    .text.LedMatrix_ShowChar:00000000000000d4 $d
     /tmp/ccfCRRJc.s:831    .text.LedMatrix_ShowString:0000000000000000 $t
     /tmp/ccfCRRJc.s:838    .text.LedMatrix_ShowString:0000000000000000 LedMatrix_ShowString
     /tmp/ccfCRRJc.s:900    .text.LedMatrix_ShowString:0000000000000038 $d
     /tmp/ccfCRRJc.s:905    .text.mypow:0000000000000000 $t
     /tmp/ccfCRRJc.s:912    .text.mypow:0000000000000000 mypow
     /tmp/ccfCRRJc.s:950    .text.LedMatrix_ShowNum:0000000000000000 $t
     /tmp/ccfCRRJc.s:957    .text.LedMatrix_ShowNum:0000000000000000 LedMatrix_ShowNum
     /tmp/ccfCRRJc.s:1099   .text.LedMatrix_ShowNum:0000000000000090 $d
     /tmp/ccfCRRJc.s:1105   .text.LedMatrix_RollStart:0000000000000000 $t
     /tmp/ccfCRRJc.s:1112   .text.LedMatrix_RollStart:0000000000000000 LedMatrix_RollStart
     /tmp/ccfCRRJc.s:1217   .text.LedMatrix_RollStart:0000000000000058 $d
                            *COM*:00000000000000d2 rollctrl
     /tmp/ccfCRRJc.s:1223   .text.LedMatrix_RollStringExce:0000000000000000 $t
     /tmp/ccfCRRJc.s:1230   .text.LedMatrix_RollStringExce:0000000000000000 LedMatrix_RollStringExce
     /tmp/ccfCRRJc.s:1797   .text.LedMatrix_RollStringExce:000000000000027c $d
     /tmp/ccfCRRJc.s:1808   .text.LedMatrix_DrawBMP:0000000000000000 $t
     /tmp/ccfCRRJc.s:1815   .text.LedMatrix_DrawBMP:0000000000000000 LedMatrix_DrawBMP
     /tmp/ccfCRRJc.s:1884   .text.LedMatrix_DrawLine:0000000000000000 $t
     /tmp/ccfCRRJc.s:1891   .text.LedMatrix_DrawLine:0000000000000000 LedMatrix_DrawLine
     /tmp/ccfCRRJc.s:2096   .text.LedMatrix_DrawLine:00000000000000a4 $d
     /tmp/ccfCRRJc.s:2101   .text.LedMatrix_DrawRectangle:0000000000000000 $t
     /tmp/ccfCRRJc.s:2108   .text.LedMatrix_DrawRectangle:0000000000000000 LedMatrix_DrawRectangle
     /tmp/ccfCRRJc.s:2162   .text.LedMatrix_Draw_Circle:0000000000000000 $t
     /tmp/ccfCRRJc.s:2169   .text.LedMatrix_Draw_Circle:0000000000000000 LedMatrix_Draw_Circle
     /tmp/ccfCRRJc.s:2342   .text.LedMatrix_Draw_Circle:00000000000000e4 $d
     /tmp/ccfCRRJc.s:3711   .rodata.sw:0000000000000000 sw
     /tmp/ccfCRRJc.s:2361   .bss.BACK_COLOR:0000000000000000 BACK_COLOR
     /tmp/ccfCRRJc.s:2367   .data.POINT_COLOR:0000000000000000 POINT_COLOR
     /tmp/ccfCRRJc.s:3674   .rodata.asc_num_1608:0000000000000000 asc_num_1608
     /tmp/ccfCRRJc.s:3490   .rodata.asc2_1608:0000000000000000 asc2_1608
     /tmp/ccfCRRJc.s:3389   .rodata.asc2_1206:0000000000000000 asc2_1206
     /tmp/ccfCRRJc.s:3288   .rodata.asc2_0806:0000000000000000 asc2_0806
     /tmp/ccfCRRJc.s:2373   .rodata.GBK_16:0000000000000000 GBK_16
     /tmp/ccfCRRJc.s:3700   .rodata.font2size:0000000000000000 font2size
     /tmp/ccfCRRJc.s:2362   .bss.BACK_COLOR:0000000000000000 $d
     /tmp/ccfCRRJc.s:2370   .rodata.GBK_16:0000000000000000 $d
     /tmp/ccfCRRJc.s:3284   .rodata.asc2_0806:0000000000000000 $d
ARM GAS  /tmp/ccfCRRJc.s 			page 131


     /tmp/ccfCRRJc.s:3385   .rodata.asc2_1206:0000000000000000 $d
     /tmp/ccfCRRJc.s:3486   .rodata.asc2_1608:0000000000000000 $d
     /tmp/ccfCRRJc.s:3671   .rodata.asc_num_1608:0000000000000000 $d
     /tmp/ccfCRRJc.s:3696   .rodata.font2size:0000000000000000 $d
     /tmp/ccfCRRJc.s:3708   .rodata.sw:0000000000000000 $d

NO UNDEFINED SYMBOLS
